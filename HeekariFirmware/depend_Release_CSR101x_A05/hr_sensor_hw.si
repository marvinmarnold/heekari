   1                 		.file	"hr_sensor_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.HrInitSwitchData,"ax",@progbits
  15                 		.global	HrInitSwitchData
  16                 		.type	HrInitSwitchData, @function
  17                 	HrInitSwitchData:
  18                 	.LFB9:
  19                 		.file 1 "hr_sensor_hw.c"
   0:hr_sensor_hw.c **** /******************************************************************************
   1:hr_sensor_hw.c ****  *  Copyright (C) Cambridge Silicon Radio Limited 2012-2013
   2:hr_sensor_hw.c ****  *  Part of CSR uEnergy SDK 2.2.2
   3:hr_sensor_hw.c ****  *  Application version 2.2.2.0
   4:hr_sensor_hw.c ****  *
   5:hr_sensor_hw.c ****  *  FILE
   6:hr_sensor_hw.c ****  *      hr_sensor_hw.c
   7:hr_sensor_hw.c ****  *
   8:hr_sensor_hw.c ****  *  DESCRIPTION
   9:hr_sensor_hw.c ****  *      This file defines the Heart Rate sensors hardware specific routines.
  10:hr_sensor_hw.c ****  *
  11:hr_sensor_hw.c ****  *****************************************************************************/
  12:hr_sensor_hw.c **** 
  13:hr_sensor_hw.c **** /*============================================================================*
  14:hr_sensor_hw.c ****  *  SDK Header Files
  15:hr_sensor_hw.c ****  *============================================================================*/
  16:hr_sensor_hw.c **** 
  17:hr_sensor_hw.c **** #include <pio.h>
  18:hr_sensor_hw.c **** #include <pio_ctrlr.h>
  19:hr_sensor_hw.c **** #include <timer.h>
  20:hr_sensor_hw.c **** #include <panic.h>          /* Support for applications to panic */
  21:hr_sensor_hw.c **** 
  22:hr_sensor_hw.c **** /*============================================================================*
  23:hr_sensor_hw.c ****  *  Local Header Files
  24:hr_sensor_hw.c ****  *============================================================================*/
  25:hr_sensor_hw.c **** 
  26:hr_sensor_hw.c **** #include "hr_sensor.h"
  27:hr_sensor_hw.c **** #include "hr_sensor_gatt.h"
  28:hr_sensor_hw.c **** #include "hr_sensor_hw.h"
  29:hr_sensor_hw.c **** #include "heart_rate_service.h"
  30:hr_sensor_hw.c **** #include "app_gatt_db.h"
  31:hr_sensor_hw.c **** #include "app_gatt.h"
  32:hr_sensor_hw.c **** 
  33:hr_sensor_hw.c **** 
  34:hr_sensor_hw.c **** /*============================================================================*
  35:hr_sensor_hw.c ****  *  Private Definitions
  36:hr_sensor_hw.c ****  *============================================================================*/
  37:hr_sensor_hw.c **** 
  38:hr_sensor_hw.c **** /* Setup PIOs
  39:hr_sensor_hw.c ****  *  PIO3    Buzzer
  40:hr_sensor_hw.c ****  *  PIO4    LED 1
  41:hr_sensor_hw.c ****  *  PIO9    On Board Input - HR Input
  42:hr_sensor_hw.c ****  *  PIO10   LED 2 (Not Used)
  43:hr_sensor_hw.c ****  *  PIO11   Button
  44:hr_sensor_hw.c ****  */
  45:hr_sensor_hw.c **** 
  46:hr_sensor_hw.c **** #define BUZZER_PIO              (3)
  47:hr_sensor_hw.c **** #define HR_INPUT_PIO            (9)
  48:hr_sensor_hw.c **** #define BUTTON_PIO              (11)
  49:hr_sensor_hw.c **** 
  50:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  51:hr_sensor_hw.c **** 
  52:hr_sensor_hw.c **** #define BUZZER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))
  53:hr_sensor_hw.c **** #define HR_INPUT_PIO_MASK       (PIO_BIT_MASK(HR_INPUT_PIO))
  54:hr_sensor_hw.c **** #define BUTTON_PIO_MASK         (PIO_BIT_MASK(BUTTON_PIO))
  55:hr_sensor_hw.c **** 
  56:hr_sensor_hw.c **** /* PIO direction */
  57:hr_sensor_hw.c **** #define PIO_DIRECTION_INPUT     (FALSE)
  58:hr_sensor_hw.c **** #define PIO_DIRECTION_OUTPUT    (TRUE)
  59:hr_sensor_hw.c **** 
  60:hr_sensor_hw.c **** /* PIO state */
  61:hr_sensor_hw.c **** #define PIO_STATE_HIGH          (TRUE)
  62:hr_sensor_hw.c **** #define PIO_STATE_LOW           (FALSE)
  63:hr_sensor_hw.c **** 
  64:hr_sensor_hw.c **** /* Extra long button press timer */
  65:hr_sensor_hw.c **** #define EXTRA_LONG_BUTTON_PRESS_TIMER \
  66:hr_sensor_hw.c ****                                 (4*SECOND)
  67:hr_sensor_hw.c **** 
  68:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
  69:hr_sensor_hw.c **** 
  70:hr_sensor_hw.c **** /* The index (0-3) of the PWM unit to be configured */
  71:hr_sensor_hw.c **** #define BUZZER_PWM_INDEX_0      (0)
  72:hr_sensor_hw.c **** 
  73:hr_sensor_hw.c **** /* PWM parameters for Buzzer */
  74:hr_sensor_hw.c **** 
  75:hr_sensor_hw.c **** /* Dull on. off and hold times */
  76:hr_sensor_hw.c **** #define DULL_BUZZ_ON_TIME       (2)    /* 60us */
  77:hr_sensor_hw.c **** #define DULL_BUZZ_OFF_TIME      (15)   /* 450us */
  78:hr_sensor_hw.c **** #define DULL_BUZZ_HOLD_TIME     (0)
  79:hr_sensor_hw.c **** 
  80:hr_sensor_hw.c **** /* Bright on, off and hold times */
  81:hr_sensor_hw.c **** #define BRIGHT_BUZZ_ON_TIME     (2)    /* 60us */
  82:hr_sensor_hw.c **** #define BRIGHT_BUZZ_OFF_TIME    (15)   /* 450us */
  83:hr_sensor_hw.c **** #define BRIGHT_BUZZ_HOLD_TIME   (0)    /* 0us */
  84:hr_sensor_hw.c **** 
  85:hr_sensor_hw.c **** #define BUZZ_RAMP_RATE          (0xFF)
  86:hr_sensor_hw.c **** 
  87:hr_sensor_hw.c **** /* TIMER values for Buzzer */
  88:hr_sensor_hw.c **** #define SHORT_BEEP_TIMER_VALUE  (100* MILLISECOND)
  89:hr_sensor_hw.c **** #define LONG_BEEP_TIMER_VALUE   (500* MILLISECOND)
  90:hr_sensor_hw.c **** #define BEEP_GAP_TIMER_VALUE    (25* MILLISECOND)
  91:hr_sensor_hw.c **** 
  92:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
  93:hr_sensor_hw.c **** 
  94:hr_sensor_hw.c **** #define DIMMER_PIO              (3)
  95:hr_sensor_hw.c **** 
  96:hr_sensor_hw.c **** #define DIMMER_PIO_MASK         (PIO_BIT_MASK(HR_INPUT_PIO)) 
  97:hr_sensor_hw.c **** 
  98:hr_sensor_hw.c **** /* Number of timers used in this application */
  99:hr_sensor_hw.c **** #define MAX_TIMERS 1
 100:hr_sensor_hw.c **** 
 101:hr_sensor_hw.c **** #define LIGHT_FREQUENCY         (60) /* in hz */                  
 102:hr_sensor_hw.c **** 
 103:hr_sensor_hw.c **** /*============================================================================*
 104:hr_sensor_hw.c ****  *  Public data
 105:hr_sensor_hw.c ****  *============================================================================*/
 106:hr_sensor_hw.c **** 
 107:hr_sensor_hw.c **** /* Blood pressure application hardware data instance */
 108:hr_sensor_hw.c **** APP_HW_DATA_T                   g_app_hw_data;
 109:hr_sensor_hw.c **** 
 110:hr_sensor_hw.c **** /* Dimmer hardware data instance */
 111:hr_sensor_hw.c **** SWITCH_DIMMER_DATA_T                   g_dimmer_data;
 112:hr_sensor_hw.c **** 
 113:hr_sensor_hw.c **** /*============================================================================*
 114:hr_sensor_hw.c ****  *  Private Function Implementations
 115:hr_sensor_hw.c ****  *============================================================================*/
 116:hr_sensor_hw.c **** 
 117:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 118:hr_sensor_hw.c **** 
 119:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 120:hr_sensor_hw.c ****  *  NAME
 121:hr_sensor_hw.c ****  *      appBuzzerTimerHandler
 122:hr_sensor_hw.c ****  *
 123:hr_sensor_hw.c ****  *  DESCRIPTION
 124:hr_sensor_hw.c ****  *      This function is used to stop the Buzzer at the expiry of 
 125:hr_sensor_hw.c ****  *      timer.
 126:hr_sensor_hw.c ****  *
 127:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 128:hr_sensor_hw.c ****  *      Nothing.
 129:hr_sensor_hw.c ****  *
 130:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 131:hr_sensor_hw.c **** static void appBuzzerTimerHandler(timer_id tid)
 132:hr_sensor_hw.c **** {
 133:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 134:hr_sensor_hw.c **** 
 135:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 136:hr_sensor_hw.c **** 
 137:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 138:hr_sensor_hw.c ****     {
 139:hr_sensor_hw.c ****         case buzzer_beep_short: /* FALLTHROUGH */
 140:hr_sensor_hw.c ****         case buzzer_beep_long:
 141:hr_sensor_hw.c ****         {
 142:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 143:hr_sensor_hw.c **** 
 144:hr_sensor_hw.c ****             /* Disable buzzer */
 145:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 146:hr_sensor_hw.c ****         }
 147:hr_sensor_hw.c ****         break;
 148:hr_sensor_hw.c ****         case buzzer_beep_twice:
 149:hr_sensor_hw.c ****         {
 150:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 151:hr_sensor_hw.c ****             {
 152:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 153:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 154:hr_sensor_hw.c **** 
 155:hr_sensor_hw.c ****                 /* Disable buzzer */
 156:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 157:hr_sensor_hw.c **** 
 158:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 159:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 160:hr_sensor_hw.c ****             }
 161:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 162:hr_sensor_hw.c ****             {
 163:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 164:hr_sensor_hw.c **** 
 165:hr_sensor_hw.c ****                 /* Enable buzzer */
 166:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 167:hr_sensor_hw.c **** 
 168:hr_sensor_hw.c ****                 /* Start another short beep */
 169:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 170:hr_sensor_hw.c ****             }
 171:hr_sensor_hw.c ****             else
 172:hr_sensor_hw.c ****             {
 173:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 174:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 175:hr_sensor_hw.c **** 
 176:hr_sensor_hw.c ****                 /* Disable buzzer */
 177:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 178:hr_sensor_hw.c **** 
 179:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 180:hr_sensor_hw.c ****             }
 181:hr_sensor_hw.c ****         }
 182:hr_sensor_hw.c ****         break;
 183:hr_sensor_hw.c ****         case buzzer_beep_thrice:
 184:hr_sensor_hw.c ****         {
 185:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 186:hr_sensor_hw.c ****                g_app_hw_data.beep_count == 2)
 187:hr_sensor_hw.c ****             {
 188:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 189:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 190:hr_sensor_hw.c **** 
 191:hr_sensor_hw.c ****                 /* Disable buzzer */
 192:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 193:hr_sensor_hw.c **** 
 194:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 195:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 196:hr_sensor_hw.c ****             }
 197:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 198:hr_sensor_hw.c ****                     g_app_hw_data.beep_count == 3)
 199:hr_sensor_hw.c ****             {
 200:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 201:hr_sensor_hw.c **** 
 202:hr_sensor_hw.c ****                 /* Enable buzzer */
 203:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 204:hr_sensor_hw.c **** 
 205:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 206:hr_sensor_hw.c ****             }
 207:hr_sensor_hw.c ****             else
 208:hr_sensor_hw.c ****             {
 209:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 210:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 211:hr_sensor_hw.c **** 
 212:hr_sensor_hw.c ****                 /* Disable buzzer */
 213:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 214:hr_sensor_hw.c **** 
 215:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 216:hr_sensor_hw.c ****             }
 217:hr_sensor_hw.c ****         }
 218:hr_sensor_hw.c ****         break;
 219:hr_sensor_hw.c **** 
 220:hr_sensor_hw.c ****         default:
 221:hr_sensor_hw.c ****         {
 222:hr_sensor_hw.c ****             /* No such beep type */
 223:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 224:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 225:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 226:hr_sensor_hw.c ****              */
 227:hr_sensor_hw.c ****         }
 228:hr_sensor_hw.c ****         break;
 229:hr_sensor_hw.c ****     }
 230:hr_sensor_hw.c **** 
 231:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 232:hr_sensor_hw.c ****     {
 233:hr_sensor_hw.c ****         /* start the timer */
 234:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 235:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 236:hr_sensor_hw.c ****     }
 237:hr_sensor_hw.c **** }
 238:hr_sensor_hw.c **** 
 239:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER*/
 240:hr_sensor_hw.c **** 
 241:hr_sensor_hw.c **** /*============================================================================*
 242:hr_sensor_hw.c ****  *  Public Function Implementations
 243:hr_sensor_hw.c ****  *============================================================================*/
 244:hr_sensor_hw.c **** 
 245:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 246:hr_sensor_hw.c ****  *  NAME
 247:hr_sensor_hw.c ****  *      HrInitHardware 
 248:hr_sensor_hw.c ****  *
 249:hr_sensor_hw.c ****  *  DESCRIPTION
 250:hr_sensor_hw.c ****  *      This function is called to initialise heart rate hardware
 251:hr_sensor_hw.c ****  *
 252:hr_sensor_hw.c ****  *  RETURNS
 253:hr_sensor_hw.c ****  *      Nothing.
 254:hr_sensor_hw.c ****  *
 255:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 256:hr_sensor_hw.c **** 
 257:hr_sensor_hw.c **** extern void HrInitHardware(void)
 258:hr_sensor_hw.c **** {
 259:hr_sensor_hw.c ****     /* Setup PIOs
 260:hr_sensor_hw.c ****      * PIO3 - Buzzer
 261:hr_sensor_hw.c ****      * PIO4 - LED 1
 262:hr_sensor_hw.c ****      * PIO9 - On Board Input - HR input 
 263:hr_sensor_hw.c ****      *            when actual measurements 
 264:hr_sensor_hw.c ****      *            are enabled
 265:hr_sensor_hw.c ****      * PIO10 - LED 2 (Not Used)
 266:hr_sensor_hw.c ****      * PIO11 - Button
 267:hr_sensor_hw.c ****      */
 268:hr_sensor_hw.c **** #ifdef NO_ACTUAL_MEASUREMENT
 269:hr_sensor_hw.c **** 
 270:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 271:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 272:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 273:hr_sensor_hw.c **** 
 274:hr_sensor_hw.c ****     /* Setup button on PIO11 */
 275:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 276:hr_sensor_hw.c **** 
 277:hr_sensor_hw.c **** #else /* NO_ACTUAL_MEASUREMENT */
 278:hr_sensor_hw.c **** 
 279:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 280:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 281:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 282:hr_sensor_hw.c **** 
 283:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 284:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 285:hr_sensor_hw.c **** 
 286:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 287:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 288:hr_sensor_hw.c **** 
 289:hr_sensor_hw.c **** #endif /* ! NO_ACTUAL_MEASUREMENT */
 290:hr_sensor_hw.c **** 
 291:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 292:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 293:hr_sensor_hw.c **** 
 294:hr_sensor_hw.c ****     /* Configure the buzzer on PIO3 */
 295:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 296:hr_sensor_hw.c ****                  DULL_BUZZ_OFF_TIME, DULL_BUZZ_HOLD_TIME, BRIGHT_BUZZ_ON_TIME,
 297:hr_sensor_hw.c ****                  BRIGHT_BUZZ_OFF_TIME, BRIGHT_BUZZ_HOLD_TIME, BUZZ_RAMP_RATE);
 298:hr_sensor_hw.c **** 
 299:hr_sensor_hw.c **** 
 300:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 301:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 302:hr_sensor_hw.c **** 
 303:hr_sensor_hw.c **** 
 304:hr_sensor_hw.c ****     /* Save power by changing the I2C pull mode to pull down.*/
 305:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 306:hr_sensor_hw.c **** 
 307:hr_sensor_hw.c ****     HrInitSwitchHardware();
 308:hr_sensor_hw.c **** }
 309:hr_sensor_hw.c **** 
 310:hr_sensor_hw.c **** 
 311:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 312:hr_sensor_hw.c ****  *  NAME
 313:hr_sensor_hw.c ****  *      HrHwDataInit
 314:hr_sensor_hw.c ****  *
 315:hr_sensor_hw.c ****  *  DESCRIPTION
 316:hr_sensor_hw.c ****  *      This function initialises HR sensor hardware data structure
 317:hr_sensor_hw.c ****  *
 318:hr_sensor_hw.c ****  *  RETURNS
 319:hr_sensor_hw.c ****  *      Nothing.
 320:hr_sensor_hw.c ****  *
 321:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 322:hr_sensor_hw.c **** 
 323:hr_sensor_hw.c **** extern void HrHwDataInit(void)
 324:hr_sensor_hw.c **** {
 325:hr_sensor_hw.c **** 
 326:hr_sensor_hw.c ****     /* Delete button press timer */
 327:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
 328:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
 329:hr_sensor_hw.c ****     HrInitSwitchData();
 330:hr_sensor_hw.c **** }
 331:hr_sensor_hw.c **** 
 332:hr_sensor_hw.c **** 
 333:hr_sensor_hw.c **** 
 334:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 335:hr_sensor_hw.c ****  *  NAME
 336:hr_sensor_hw.c ****  *      SoundBuzzer
 337:hr_sensor_hw.c ****  *
 338:hr_sensor_hw.c ****  *  DESCRIPTION
 339:hr_sensor_hw.c ****  *      This function is called to trigger beeps of different types 
 340:hr_sensor_hw.c ****  *      'buzzer_beep_type'.
 341:hr_sensor_hw.c ****  *
 342:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 343:hr_sensor_hw.c ****  *      Nothing.
 344:hr_sensor_hw.c ****  *
 345:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 346:hr_sensor_hw.c **** 
 347:hr_sensor_hw.c **** extern void SoundBuzzer(buzzer_beep_type beep_type)
 348:hr_sensor_hw.c **** {
 349:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 350:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 351:hr_sensor_hw.c **** 
 352:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 353:hr_sensor_hw.c **** 
 354:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 355:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 356:hr_sensor_hw.c **** 
 357:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 358:hr_sensor_hw.c **** 
 359:hr_sensor_hw.c ****     /* Store the beep type in some global variable. It will used on timer 
 360:hr_sensor_hw.c ****      * expiry to check the type of beeps being sounded.
 361:hr_sensor_hw.c ****      */
 362:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 363:hr_sensor_hw.c **** 
 364:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 365:hr_sensor_hw.c ****     {
 366:hr_sensor_hw.c ****         case buzzer_beep_off:
 367:hr_sensor_hw.c ****         {
 368:hr_sensor_hw.c ****             /* Don't do anything */
 369:hr_sensor_hw.c ****         }
 370:hr_sensor_hw.c ****         break;
 371:hr_sensor_hw.c **** 
 372:hr_sensor_hw.c ****         case buzzer_beep_short: /* One short beep will be sounded */
 373:hr_sensor_hw.c ****             /* FALLTHROUGH */
 374:hr_sensor_hw.c ****         case buzzer_beep_twice: /* Two short beeps will be sounded */
 375:hr_sensor_hw.c ****             /* FALLTHROUGH */
 376:hr_sensor_hw.c ****         case buzzer_beep_thrice: /* Three short beeps will be sounded */
 377:hr_sensor_hw.c ****         {
 378:hr_sensor_hw.c ****             beep_timer = SHORT_BEEP_TIMER_VALUE;
 379:hr_sensor_hw.c ****         }
 380:hr_sensor_hw.c ****         break;
 381:hr_sensor_hw.c **** 
 382:hr_sensor_hw.c ****         case buzzer_beep_long:
 383:hr_sensor_hw.c ****         {
 384:hr_sensor_hw.c ****             /* One long beep will be sounded */
 385:hr_sensor_hw.c ****             beep_timer = LONG_BEEP_TIMER_VALUE;
 386:hr_sensor_hw.c ****         }
 387:hr_sensor_hw.c ****         break;
 388:hr_sensor_hw.c **** 
 389:hr_sensor_hw.c ****         default:
 390:hr_sensor_hw.c ****         {
 391:hr_sensor_hw.c ****             /* No such beep type defined */
 392:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 393:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 394:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 395:hr_sensor_hw.c ****              */
 396:hr_sensor_hw.c ****         }
 397:hr_sensor_hw.c ****         break;
 398:hr_sensor_hw.c ****     }
 399:hr_sensor_hw.c **** 
 400:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 401:hr_sensor_hw.c ****     {
 402:hr_sensor_hw.c ****         /* Initialize beep count to zero */
 403:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 404:hr_sensor_hw.c **** 
 405:hr_sensor_hw.c ****         /* Enable buzzer */
 406:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 407:hr_sensor_hw.c **** 
 408:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 409:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 410:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 411:hr_sensor_hw.c ****     }
 412:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 413:hr_sensor_hw.c **** }
 414:hr_sensor_hw.c **** 
 415:hr_sensor_hw.c **** 
 416:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 417:hr_sensor_hw.c **** 
 418:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 419:hr_sensor_hw.c ****  *  NAME
 420:hr_sensor_hw.c ****  *      GetRRValue
 421:hr_sensor_hw.c ****  *
 422:hr_sensor_hw.c ****  *  DESCRIPTION
 423:hr_sensor_hw.c ****  *      Get RR value by reading the HR_INPUT_PIO
 424:hr_sensor_hw.c ****  *
 425:hr_sensor_hw.c ****  *  RETURNS
 426:hr_sensor_hw.c ****  *      UINT32: RR value 
 427:hr_sensor_hw.c ****  *
 428:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 429:hr_sensor_hw.c **** 
 430:hr_sensor_hw.c **** extern uint32 GetRRValue(void)
 431:hr_sensor_hw.c **** {
 432:hr_sensor_hw.c **** 
 433:hr_sensor_hw.c ****     /* handle heartrate events ie changes to HR_INPUT_PIO */
 434:hr_sensor_hw.c ****     /* value is in 30.517us (32768KHz) intervals */
 435:hr_sensor_hw.c **** 
 436:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 437:hr_sensor_hw.c **** 
 438:hr_sensor_hw.c **** }
 439:hr_sensor_hw.c **** 
 440:hr_sensor_hw.c **** #endif /* !NO_ACTUAL_MEASUREMENT */
 441:hr_sensor_hw.c **** 
 442:hr_sensor_hw.c **** 
 443:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 444:hr_sensor_hw.c ****  *  NAME
 445:hr_sensor_hw.c ****  *      HandlePIOChangedEvent
 446:hr_sensor_hw.c ****  *
 447:hr_sensor_hw.c ****  *  DESCRIPTION
 448:hr_sensor_hw.c ****  *      This function handles PIO Changed event
 449:hr_sensor_hw.c ****  *
 450:hr_sensor_hw.c ****  *  RETURNS
 451:hr_sensor_hw.c ****  *      Nothing.
 452:hr_sensor_hw.c ****  *
 453:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 454:hr_sensor_hw.c **** 
 455:hr_sensor_hw.c **** extern void HandlePIOChangedEvent(uint32 pio_changed)
 456:hr_sensor_hw.c **** {
 457:hr_sensor_hw.c ****     /* PIO changed */
 458:hr_sensor_hw.c ****     uint32 pios = PioGets();
 459:hr_sensor_hw.c **** 
 460:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 461:hr_sensor_hw.c ****     {
 462:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 463:hr_sensor_hw.c ****         {
 464:hr_sensor_hw.c ****             /* This event comes when a button is pressed */
 465:hr_sensor_hw.c **** 
 466:hr_sensor_hw.c ****             /* Start a timer for LONG_BUTTON_PRESS_TIMER seconds. If timer expi-
 467:hr_sensor_hw.c ****              * res before we receive a button release event then it was a long -
 468:hr_sensor_hw.c ****              * press and if we receive a button release pio changed event, it -
 469:hr_sensor_hw.c ****              * means it was a short press.
 470:hr_sensor_hw.c ****              */
 471:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 472:hr_sensor_hw.c **** 
 473:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 474:hr_sensor_hw.c ****                                            EXTRA_LONG_BUTTON_PRESS_TIMER,
 475:hr_sensor_hw.c ****                                            TRUE,
 476:hr_sensor_hw.c ****                                            HandleExtraLongButtonPress);
 477:hr_sensor_hw.c ****         }
 478:hr_sensor_hw.c ****         else
 479:hr_sensor_hw.c ****         {
 480:hr_sensor_hw.c ****             /* This event comes when a button is released */
 481:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 482:hr_sensor_hw.c ****             {
 483:hr_sensor_hw.c ****                 /* Timer was already running. This means it was a short button 
 484:hr_sensor_hw.c ****                  * press.
 485:hr_sensor_hw.c ****                  */
 486:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 487:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 488:hr_sensor_hw.c **** 
 489:hr_sensor_hw.c ****                 HandleShortButtonPress();
 490:hr_sensor_hw.c ****             }
 491:hr_sensor_hw.c ****         }
 492:hr_sensor_hw.c ****     }
 493:hr_sensor_hw.c ****     /* Move DIMMER_PIO_MASK directly into file if problems */
 494:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 495:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 496:hr_sensor_hw.c ****     }
 497:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 498:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 499:hr_sensor_hw.c ****     {
 500:hr_sensor_hw.c ****         /* Process the event on the falling edge and ignore the rising edge 
 501:hr_sensor_hw.c ****          * events.
 502:hr_sensor_hw.c ****          */
 503:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 504:hr_sensor_hw.c ****         {
 505:hr_sensor_hw.c ****             HandleHRInputEvent();
 506:hr_sensor_hw.c ****         }
 507:hr_sensor_hw.c ****     }
 508:hr_sensor_hw.c **** #endif
 509:hr_sensor_hw.c **** 
 510:hr_sensor_hw.c **** }
 511:hr_sensor_hw.c **** 
 512:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 513:hr_sensor_hw.c ****  *  NAME
 514:hr_sensor_hw.c ****  *      HrInitSwitchHardware 
 515:hr_sensor_hw.c ****  *
 516:hr_sensor_hw.c ****  *  DESCRIPTION
 517:hr_sensor_hw.c ****  *      This function is called to initialise switch hardware
 518:hr_sensor_hw.c ****  *
 519:hr_sensor_hw.c ****  *  RETURNS
 520:hr_sensor_hw.c ****  *      Nothing.
 521:hr_sensor_hw.c ****  *
 522:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 523:hr_sensor_hw.c **** 
 524:hr_sensor_hw.c **** extern void HrInitSwitchHardware(void)
 525:hr_sensor_hw.c **** {
 526:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
 527:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
 528:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
 529:hr_sensor_hw.c **** 
 530:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 531:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 532:hr_sensor_hw.c **** 
 533:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 534:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
 535:hr_sensor_hw.c **** }
 536:hr_sensor_hw.c **** 
 537:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 538:hr_sensor_hw.c ****  *  NAME
 539:hr_sensor_hw.c ****  *      HrHwDataInit
 540:hr_sensor_hw.c ****  *
 541:hr_sensor_hw.c ****  *  DESCRIPTION
 542:hr_sensor_hw.c ****  *      This function initialises switch hardware data structure
 543:hr_sensor_hw.c ****  *
 544:hr_sensor_hw.c ****  *  RETURNS
 545:hr_sensor_hw.c ****  *      Nothing.
 546:hr_sensor_hw.c ****  *
 547:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 548:hr_sensor_hw.c **** 
 549:hr_sensor_hw.c **** extern void HrInitSwitchData(void)
 550:hr_sensor_hw.c **** {
  20                 	 1 552 0
 551:hr_sensor_hw.c ****     g_dimmer_data.timer_id = NULL;
  21                 	ld	AL,#0x0000
  22 0000 00 14       		st	AL,@g_dimmer_data
  23 0001 00 00 00 25 		.loc 1 554 0
 552:hr_sensor_hw.c **** 
 553:hr_sensor_hw.c **** }
  24                 	a	0,X
  25 0003 00 E2       	.LFE9:
  26                 		.size	HrInitSwitchData, .-HrInitSwitchData
  27                 		.global	__size_of_HrInitSwitchData
  28                 		.equ	__size_of_HrInitSwitchData,. - HrInitSwitchData
  29                 		.section	.text.turnOffDelay,"ax",@progbits
  30                 		.global	turnOffDelay
  31                 		.type	turnOffDelay, @function
  32                 	turnOffDelay:
  33                 	.LFB14:
  34                 		.loc 1 622 0
 554:hr_sensor_hw.c **** 
 555:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 556:hr_sensor_hw.c ****  *  NAME
 557:hr_sensor_hw.c ****  *      HandleSwitchPIOChangedEvent
 558:hr_sensor_hw.c ****  *
 559:hr_sensor_hw.c ****  *  DESCRIPTION
 560:hr_sensor_hw.c ****  *      This function handles Switch PIO Changed event
 561:hr_sensor_hw.c ****  *
 562:hr_sensor_hw.c ****  *  RETURNS
 563:hr_sensor_hw.c ****  *      Nothing.
 564:hr_sensor_hw.c ****  *
 565:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 566:hr_sensor_hw.c **** 
 567:hr_sensor_hw.c **** extern void HandleSwitchPIOChangedEvent(uint32 pio_changed)
 568:hr_sensor_hw.c **** {
 569:hr_sensor_hw.c ****     /*if(g_dimmer_data.timer_id){
 570:hr_sensor_hw.c ****         TimerDelete(g_dimmer_data.timer_id);
 571:hr_sensor_hw.c ****     }*/
 572:hr_sensor_hw.c ****     //turn off light - hiro
 573:hr_sensor_hw.c ****     PioSet(10,TRUE); // just to debugg
 574:hr_sensor_hw.c ****     
 575:hr_sensor_hw.c ****     startTimer(turnOnDelay(), turnLightOnTimer);
 576:hr_sensor_hw.c **** }
 577:hr_sensor_hw.c **** 
 578:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 579:hr_sensor_hw.c ****  *  NAME
 580:hr_sensor_hw.c ****  *      startTimer
 581:hr_sensor_hw.c ****  *
 582:hr_sensor_hw.c ****  *  DESCRIPTION
 583:hr_sensor_hw.c ****  *      Start a timer,
 584:hr_sensor_hw.c ****  *
 585:hr_sensor_hw.c ****  * PARAMETERS
 586:hr_sensor_hw.c ****  *      timeout [in]    Timeout period in seconds
 587:hr_sensor_hw.c ****  *      handler [in]    Callback handler for when timer expires
 588:hr_sensor_hw.c ****  *
 589:hr_sensor_hw.c ****  * RETURNS
 590:hr_sensor_hw.c ****  *      Nothing
 591:hr_sensor_hw.c ****  *----------------------------------------------------------------------------*/
 592:hr_sensor_hw.c **** extern void startTimer(uint32 timeout, timer_callback_arg handler)
 593:hr_sensor_hw.c **** {
 594:hr_sensor_hw.c ****     /* Now starting a timer */
 595:hr_sensor_hw.c ****     const timer_id tId = TimerCreate(timeout, TRUE, handler);
 596:hr_sensor_hw.c ****     
 597:hr_sensor_hw.c ****     /* If a timer could not be created, panic to restart the app */
 598:hr_sensor_hw.c ****     if (tId == TIMER_INVALID)
 599:hr_sensor_hw.c ****     { 
 600:hr_sensor_hw.c ****         /* Panic with panic code 0xfe */
 601:hr_sensor_hw.c ****         Panic(0xfe);
 602:hr_sensor_hw.c ****     }
 603:hr_sensor_hw.c **** }
 604:hr_sensor_hw.c **** 
 605:hr_sensor_hw.c **** extern void turnLightOnTimer(timer_id const id){
 606:hr_sensor_hw.c ****     g_dimmer_data.timer_id = id;
 607:hr_sensor_hw.c ****     //turn light on - hiro
 608:hr_sensor_hw.c ****     PioSet(10,FALSE);
 609:hr_sensor_hw.c ****     PioSet(10,TRUE);
 610:hr_sensor_hw.c ****     startTimer(turnOffDelay(), turnLightOffTimer);
 611:hr_sensor_hw.c **** }
 612:hr_sensor_hw.c **** 
 613:hr_sensor_hw.c **** /* Callback after second timeout */
 614:hr_sensor_hw.c **** extern void turnLightOffTimer(timer_id const id){
 615:hr_sensor_hw.c ****     g_dimmer_data.timer_id = id;
 616:hr_sensor_hw.c ****     //turn light off - hiro
 617:hr_sensor_hw.c ****     PioSet(10,FALSE);
 618:hr_sensor_hw.c **** }
 619:hr_sensor_hw.c **** 
 620:hr_sensor_hw.c **** /* Return in micro seconds */
 621:hr_sensor_hw.c **** extern uint32 turnOffDelay(void){
  35                 	 0
 622:hr_sensor_hw.c ****     //uint32 d = SwitchIntensity() * LIGHT_FREQUENCY; // Fix - hiroshi
 623:hr_sensor_hw.c ****     uint32 d = 10 ;// wait 10 micro seconds to make sure TRIAC stays ON
 624:hr_sensor_hw.c ****     return d; 
 625:hr_sensor_hw.c **** }
  36                 	ld	AH,#0x0000
  37 0000 00 10       		ld	AL,#0x000a
  38 0001 0A 14       		bra	0,X
  39 0002 00 E2       	.LFE14:
  40                 		.size	turnOffDelay, .-turnOffDelay
  41                 		.global	__size_of_turnOffDelay
  42                 		.equ	__size_of_turnOffDelay,. - turnOffDelay
  43                 		.section	.text.turnOnDelay,"ax",@progbits
  44                 		.global	turnOnDelay
  45                 		.type	turnOnDelay, @function
  46                 	turnOnDelay:
  47                 	.LFB15:
  48                 		.loc 1 629 0
 626:hr_sensor_hw.c **** 
 627:hr_sensor_hw.c **** /* Return in micro seconds */
 628:hr_sensor_hw.c **** extern uint32 turnOnDelay(void){
  49                 	
 629:hr_sensor_hw.c ****     //uint32 d = (100 - SwitchIntensity()) * LIGHT_FREQUENCY; // Fix - hiroshi
 630:hr_sensor_hw.c ****     uint32 d = (50) * 83 ; 
 631:hr_sensor_hw.c ****     return d; 
 632:hr_sensor_hw.c **** }...
  50                 		ld	AH,#0x0000
  51 0000 00 10       		ld	AL,#0x1036
  52 0001 10 00 36 14 		bra	0,X
  53 0003 00 E2       	.LFE15:
  54                 		.size	turnOnDelay, .-turnOnDelay
  55                 		.global	__size_of_turnOnDelay
  56                 		.equ	__size_of_turnOnDelay,. - turnOnDelay
  57                 		.section	.text.turnLightOffTimer,"ax",@progbits
  58                 		.global	turnLightOffTimer
  59                 		.type	turnLightOffTimer, @function
  60                 	turnLightOffTimer:
  61                 	.LFB13:
  62                 		.loc 1 615 0
 615:hr_sensor_hw.c **** extern void turnLightOffTimer(timer_id const id){
  63                 	1 616 0
  64                 		st	AL,@g_dimmer_data
 616:hr_sensor_hw.c ****     g_dimmer_data.timer_id = id;
  65                 	loc 1 618 0
  66 0000 00 00 00 25 		ld	AL,#0x000a
 618:hr_sensor_hw.c ****     PioSet(10,FALSE);
  67                 	VL1:
  68 0002 0A 14       		ld	AH,#0x0000
  69                 		bra	PioSet
  70 0003 00 10       	.LFE13:
  71 0004 00 00 00 00 		.size	turnLightOffTimer, .-turnLightOffTimer
  71      00 E0 
  72                 		.global	__size_of_turnLightOffTimer
  73                 		.equ	__size_of_turnLightOffTimer,. - turnLightOffTimer
  74                 		.section	.text.startTimer,"ax",@progbits
  75                 		.global	startTimer
  76                 		.type	startTimer, @function
  77                 	startTimer:
  78                 	.LFB11:
  79                 		.loc 1 594 0
  80                 	.LVL2:
 594:hr_sensor_hw.c **** {
  81                 	
  82                 	.LCFI0:
  83 0000 03 0B       		.loc 1 596 0
  84                 		ld	X,#0x0001
 596:hr_sensor_hw.c ****     const timer_id tId = TimerCreate(timeout, TRUE, handler);
  85                 		X,@(0,Y)
  86 0001 01 18       		ld	X,@(0x0003,Y)
  87 0002 00 2B       		st	X,@(0x0001,Y)
  88 0003 03 1B       		bsr	TimerCreate
  89 0004 01 2B       	.LVL3:
  90 0005 00 00 00 00 		.loc 1 599 0
  90      00 9C 
  91                 		tst	@$XAP_AL
 599:hr_sensor_hw.c ****     if (tId == TIMER_INVALID)
  92                 		bne	.L11
  93 0008 00 00 00 99 	.LVL5:
  94                 		.loc 1 602 0
  95 000a 00 00 00 00 		ld	AL,#0x00fe
  95      00 F0 
  96                 	.LVL6:
 602:hr_sensor_hw.c ****         Panic(0xfe);
  97                 	Panic
  98 000d 01 00 FE 14 	.LVL7:
  99                 	.L11:
 100 000f 00 00 00 00 		.loc 1 604 0
 100      00 9C 
 101                 		leave	#0x0003
 102                 	.LFE11:
 604:hr_sensor_hw.c **** }
 103                 		startTimer, .-startTimer
 104 0012 03 0F       		.global	__size_of_startTimer
 105                 		.equ	__size_of_startTimer,. - startTimer
 106                 		.section	.text.turnLightOnTimer,"ax",@progbits
 107                 		.global	turnLightOnTimer
 108                 		.type	turnLightOnTimer, @function
 109                 	turnLightOnTimer:
 110                 	.LFB12:
 111                 		.loc 1 606 0
 112                 	.LVL8:
 113                 		enter	#0x0002
 606:hr_sensor_hw.c **** extern void turnLightOnTimer(timer_id const id){
 114                 	oc 1 607 0
 115                 		st	AL,@g_dimmer_data
 116 0000 02 0B       		.loc 1 609 0
 117                 		ld	AL,#0x000a
 607:hr_sensor_hw.c ****     g_dimmer_data.timer_id = id;
 118                 	9:
 119 0001 00 00 00 25 		ld	AH,#0x0000
 609:hr_sensor_hw.c ****     PioSet(10,FALSE);
 120                 	sr	PioSet
 121 0003 0A 14       		.loc 1 610 0
 122                 		ld	AL,#0x000a
 123 0004 00 10       		ld	AH,#0x0001
 124 0005 00 00 00 00 		bsr	PioSet
 124      00 9C 
 610:hr_sensor_hw.c ****     PioSet(10,TRUE);
 125                 	 1 611 0
 126 0008 0A 14       		bsr	turnOffDelay
 127 0009 01 10       		ld	X,#turnLightOffTimer
 128 000a 00 00 00 00 		st	X,@(0,Y)
 128      00 9C 
 611:hr_sensor_hw.c ****     startTimer(turnOffDelay(), turnLightOffTimer);
 129                 		startTimer
 130 000d 00 00 00 00 		.loc 1 612 0
 130      00 9C 
 131 0010 00 00 00 18 		leave	#0x0002
 132 0012 00 2B       	.LFE12:
 133 0013 00 00 00 00 		.size	turnLightOnTimer, .-turnLightOnTimer
 133      00 9C 
 612:hr_sensor_hw.c **** }
 134                 	bal	__size_of_turnLightOnTimer
 135 0016 02 0F       		.equ	__size_of_turnLightOnTimer,. - turnLightOnTimer
 136                 		.section	.text.HandleSwitchPIOChangedEvent,"ax",@progbits
 137                 		.global	HandleSwitchPIOChangedEvent
 138                 		.type	HandleSwitchPIOChangedEvent, @function
 139                 	HandleSwitchPIOChangedEvent:
 140                 	.LFB10:
 141                 		.loc 1 569 0
 142                 	.LVL10:
 143                 		enter	#0x0002
 144                 	.LCFI2:
 569:hr_sensor_hw.c **** {
 145                 	 0
 146                 		ld	AL,#0x000a
 147 0000 02 0B       		ld	AH,#0x0001
 148                 	.LVL11:
 574:hr_sensor_hw.c ****     PioSet(10,TRUE); // just to debugg
 149                 		PioSet
 150 0001 0A 14       		.loc 1 576 0
 151 0002 01 10       		bsr	turnOnDelay
 152                 		ld	X,#turnLightOnTimer
 153 0003 00 00 00 00 		st	X,@(0,Y)
 153      00 9C 
 576:hr_sensor_hw.c ****     startTimer(turnOnDelay(), turnLightOnTimer);
 154                 	startTimer
 155 0006 00 00 00 00 		.loc 1 577 0
 155      00 9C 
 156 0009 00 00 00 18 		leave	#0x0002
 157 000b 00 2B       	.LFE10:
 158 000c 00 00 00 00 		.size	HandleSwitchPIOChangedEvent, .-HandleSwitchPIOChangedEvent
 158      00 9C 
 577:hr_sensor_hw.c **** }
 159                 	bal	__size_of_HandleSwitchPIOChangedEvent
 160 000f 02 0F       		.equ	__size_of_HandleSwitchPIOChangedEvent,. - HandleSwitchPIOChangedEvent
 161                 		.section	.text.HrInitSwitchHardware,"ax",@progbits
 162                 		.global	HrInitSwitchHardware
 163                 		.type	HrInitSwitchHardware, @function
 164                 	HrInitSwitchHardware:
 165                 	.LFB8:
 166                 		.loc 1 526 0
 167                 		enter	#0x0002
 168                 	.LCFI3:
 169                 		.loc 1 527 0
 526:hr_sensor_hw.c **** {
 170                 	001
 171 0000 02 0B       		st	AL,@(0,Y)
 172                 		ld	AH,#0x0000
 527:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
 173                 		AL,#0x0200
 174 0001 01 14       		bsr	PioSetModes
 175 0002 00 27       		.loc 1 528 0
 176 0003 00 10       		ld	AL,#0x0003
 177 0004 02 00 00 14 		ld	AH,#0x0000
 178 0006 00 00 00 00 		bsr	PioSetDir
 178      00 9C 
 528:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
 179                 	1 529 0
 180 0009 03 14       		ld	AL,#0x0007
 181 000a 00 10       		st	AL,@(0,Y)
 182 000b 00 00 00 00 		ld	AH,#0x0000
 182      00 9C 
 529:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
 183                 	AL,#0x0200
 184 000e 07 14       		bsr	PioSetPullModes
 185 000f 00 27       		.loc 1 532 0
 186 0010 00 10       		ld	AL,#0x0001
 187 0011 02 00 00 14 		ld	AH,#0x0000
 188 0013 00 00 00 00 		bsr	PioEnableEdgeCapture
 188      00 9C 
 532:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 189                 	1 535 0
 190 0016 01 14       		ld	AL,#0x0003
 191 0017 00 10       		st	AL,@(0,Y)
 192 0018 00 00 00 00 		ld	AH,#0x0000
 192      00 9C 
 535:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
 193                 	AL,#0x0200
 194 001b 03 14       		bsr	PioSetEventMask
 195 001c 00 27       		.loc 1 536 0
 196 001d 00 10       		leave	#0x0002
 197 001e 02 00 00 14 	.LFE8:
 198 0020 00 00 00 00 		.size	HrInitSwitchHardware, .-HrInitSwitchHardware
 198      00 9C 
 536:hr_sensor_hw.c **** }
 199                 	al	__size_of_HrInitSwitchHardware
 200 0023 02 0F       		.equ	__size_of_HrInitSwitchHardware,. - HrInitSwitchHardware
 201                 		.section	.text.HrHwDataInit,"ax",@progbits
 202                 		.global	HrHwDataInit
 203                 		.type	HrHwDataInit, @function
 204                 	HrHwDataInit:
 205                 	.LFB4:
 206                 		.loc 1 325 0
 207                 		enter	#0x0001
 208                 	.LCFI4:
 209                 		.loc 1 328 0
 325:hr_sensor_hw.c **** {
 210                 	p_hw_data+3
 211 0000 01 0B       		ld	AL,@(0,X)
 212                 		bsr	TimerDelete
 328:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
 213                 	oc 1 329 0
 214 0001 00 00 00 18 		ld	AL,#0x0000
 215 0003 00 16       		ld	X,#g_app_hw_data+3
 216 0004 00 00 00 00 		st	AL,@(0,X)
 216      00 9C 
 329:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
 217                 	c 1 330 0
 218 0007 00 14       		bsr	HrInitSwitchData
 219 0008 00 00 00 18 		.loc 1 331 0
 220 000a 00 26       		leave	#0x0001
 330:hr_sensor_hw.c ****     HrInitSwitchData();
 221                 	4:
 222 000b 00 00 00 00 		.size	HrHwDataInit, .-HrHwDataInit
 222      00 9C 
 331:hr_sensor_hw.c **** }
 223                 	global	__size_of_HrHwDataInit
 224 000e 01 0F       		.equ	__size_of_HrHwDataInit,. - HrHwDataInit
 225                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
 226                 		.global	HandlePIOChangedEvent
 227                 		.type	HandlePIOChangedEvent, @function
 228                 	HandlePIOChangedEvent:
 229                 	.LFB7:
 230                 		.loc 1 457 0
 231                 	.LVL12:
 232                 		enter	#0x0005
 233                 	.LCFI5:
 457:hr_sensor_hw.c **** {
 234                 	0002,Y)
 235                 		st	AL,@(0x0003,Y)
 236 0000 05 0B       	.LVL13:
 237                 		.loc 1 459 0
 238 0001 02 23       		bsr	PioGets
 239 0002 03 27       	.LVL14:
 240                 		ld	AH,@$XAP_AL
 459:hr_sensor_hw.c ****     uint32 pios = PioGets();
 241                 	
 242 0003 00 00 00 00 		.loc 1 461 0
 242      00 9C 
 243                 		ld	AL,@(0x0003,Y)
 244 0006 00 00 00 11 		and	AL,#0x0800
 245                 		beq	.L21
 461:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 246                 	c 1 463 0
 247 0008 03 17       		ld	AL,@$XAP_AH
 248 0009 08 00 00 C4 		and	AL,#0x0800
 249 000b 00 00 00 00 		bne	.L22
 249      00 F4 
 463:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 250                 	c 1 472 0
 251 000e 00 00 00 15 		ld	AL,@g_app_hw_data+0x0003
 252 0010 08 00 00 C4 		bsr	TimerDelete
 253 0012 00 00 00 00 	.LVL16:
 253      00 F0 
 472:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 254                 	c 1 474 0
 255 0015 00 00 00 15 		ld	AL,#0x0001
 256 0017 00 00 00 00 		st	AL,@(0,Y)
 256      00 9C 
 257                 		ld	AL,#HandleExtraLongButtonPress
 474:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 258                 	AL,@(0x0001,Y)
 259 001a 01 14       		ld	AH,#0x003d
 260 001b 00 27       		ld	AL,#0x0900
 261 001c 00 00 00 14 		bsr	TimerCreate
 262 001e 01 27       		st	AL,@g_app_hw_data+0x0003
 263 001f 3D 10       		bra	.L24
 264 0020 09 00 00 14 	.LVL17:
 265 0022 00 00 00 00 	.L22:
 265      00 9C 
 266 0025 00 00 00 25 		.loc 1 482 0
 267 0027 00 00 00 00 		ld	AL,@g_app_hw_data+0x0003
 267      00 E0 
 268                 		beq	.L24
 269                 		.loc 1 487 0
 482:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 270                 	lete
 271 002a 00 00 00 15 	.LVL18:
 272 002c 00 00 00 00 		.loc 1 488 0
 272      00 F4 
 487:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 273                 		AL,#0x0000
 274 002f 00 00 00 00 		st	AL,@g_app_hw_data+0x0003
 274      00 9C 
 275                 		.loc 1 490 0
 488:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 276                 	r	HandleShortButtonPress
 277 0032 00 14       		bra	.L24
 278 0033 00 00 00 25 	.LVL19:
 490:hr_sensor_hw.c ****                 HandleShortButtonPress();
 279                 	1:
 280 0035 00 00 00 00 		.loc 1 495 0
 280      00 9C 
 281 0038 00 00 00 00 		ld	AL,@(0x0003,Y)
 281      00 E0 
 282                 		and	AL,#0x0200
 283                 		beq	.L24
 495:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 284                 	 1 496 0
 285 003b 03 17       		ld	AH,@(0x0002,Y)
 286 003c 02 00 00 C4 	.LVL20:
 287 003e 00 00 00 00 		ld	AL,@(0x0003,Y)
 287      00 F4 
 496:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 288                 		HandleSwitchPIOChangedEvent
 289 0041 02 13       	.LVL21:
 290                 	.L24:
 291 0042 03 17       		.loc 1 511 0
 292 0043 00 00 00 00 		leave	#0x0005
 292      00 9C 
 293                 	.LFE7:
 294                 		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
 511:hr_sensor_hw.c **** }
 295                 	l	__size_of_HandlePIOChangedEvent
 296 0046 05 0F       		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
 297                 		.section	.text.GetRRValue,"ax",@progbits
 298                 		.global	GetRRValue
 299                 		.type	GetRRValue, @function
 300                 	GetRRValue:
 301                 	.LFB6:
 302                 		.loc 1 432 0
 303                 		.loc 1 437 0
 304                 		bra	PioReadEdgeCapture
 305                 	.LFE6:
 432:hr_sensor_hw.c **** {
 306                 	RValue, .-GetRRValue
 437:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 307                 	.global	__size_of_GetRRValue
 308 0000 00 00 00 00 		.equ	__size_of_GetRRValue,. - GetRRValue
 308      00 E0 
 309                 		.section	.text.SoundBuzzer,"ax",@progbits
 310                 		.global	SoundBuzzer
 311                 		.type	SoundBuzzer, @function
 312                 	SoundBuzzer:
 313                 	.LFB5:
 314                 		.loc 1 349 0
 315                 	.LVL22:
 316                 		enter	#0x0006
 317                 	.LCFI6:
 349:hr_sensor_hw.c **** {
 318                 	0002,Y)
 319                 		.loc 1 353 0
 320 0000 06 0B       		ld	AL,#0x0000
 321                 	.LVL23:
 322 0001 02 27       		ld	AH,#0x0000
 353:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 323                 	PioEnablePWM
 324 0002 00 14       		.loc 1 355 0
 325                 		ld	AL,@g_app_hw_data
 326 0003 00 10       		bsr	TimerDelete
 327 0004 00 00 00 00 		.loc 1 356 0
 327      00 9C 
 355:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 328                 	L,#0x0000
 329 0007 00 00 00 15 		st	AL,@g_app_hw_data
 330 0009 00 00 00 00 		.loc 1 358 0
 330      00 9C 
 356:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 331                 		AL,@g_app_hw_data+0x0002
 332 000c 00 14       		.loc 1 363 0
 333 000d 00 00 00 25 		ld	AL,@(0x0002,Y)
 358:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 334                 		AL,@g_app_hw_data+0x0001
 335 000f 00 00 00 25 		.loc 1 365 0
 363:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 336                 	mp	AL,#0x0005
 337 0011 02 17       		bcc	.L28
 338 0012 00 00 00 25 		ld	AL,#0x0001
 365:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 339                 	l	@(0x0002,Y)
 340 0014 05 84       		ld	AH,@$XAP_AL
 341 0015 00 00 00 00 		and	AL,#0x001b
 341      00 F8 
 342 0018 01 14       		bne	.L35
 343 0019 02 A3       		ld	AL,@$XAP_AH
 344 001a 00 00 00 11 		and	AL,#0x0004
 345 001c 1B C4       		beq	.L28
 346 001d 00 00 00 00 		ld	AL,#0x0007
 346      00 F0 
 347 0020 00 00 00 15 		st	AL,@(0x0003,Y)
 348 0022 04 C4       		ld	AL,#0xa120
 349 0023 00 00 00 00 		bra	.L34
 349      00 F4 
 350 0026 07 14       	.L28:
 351 0027 03 27       		.loc 1 393 0
 352 0028 A1 00 20 14 		ld	AL,#0x000b
 353 002a 00 00 00 00 		bsr	ReportPanic
 353      00 E0 
 354                 	.L35:
 393:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 355                 	st	AL,@(0x0003,Y)
 356 002d 0B 14       		ld	AL,#0x86a0
 357 002e 00 00 00 00 	.L34:
 357      00 9C 
 358                 		st	AL,@(0x0004,Y)
 359 0031 01 14       		.loc 1 401 0
 360 0032 03 27       		tst	@g_app_hw_data+0x0001
 361 0033 87 00 A0 14 		beq	.L33
 362                 		.loc 1 404 0
 363 0035 04 27       		ld	AL,#0x0000
 401:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 364                 	_app_hw_data+0x0002
 365 0036 00 00 00 99 		.loc 1 407 0
 366 0038 00 00 00 00 		ld	AH,#0x0001
 366      00 F4 
 404:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 367                 	r	PioEnablePWM
 368 003b 00 14       		.loc 1 409 0
 369 003c 00 00 00 25 		ld	AL,@g_app_hw_data
 407:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 370                 	r	TimerDelete
 371 003e 01 10       		.loc 1 410 0
 372 003f 00 00 00 00 		ld	AL,#0x0001
 372      00 9C 
 409:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 373                 		AL,@(0,Y)
 374 0042 00 00 00 15 		ld	AL,#appBuzzerTimerHandler
 375 0044 00 00 00 00 		st	AL,@(0x0001,Y)
 375      00 9C 
 410:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 376                 		AH,@(0x0003,Y)
 377 0047 01 14       		ld	AL,@(0x0004,Y)
 378 0048 00 27       		bsr	TimerCreate
 379 0049 00 00 00 14 		st	AL,@g_app_hw_data
 380 004b 01 27       	.L33:
 381 004c 03 13       		.loc 1 414 0
 382 004d 04 17       		leave	#0x0006
 383 004e 00 00 00 00 	.LFE5:
 383      00 9C 
 384 0051 00 00 00 25 		.size	SoundBuzzer, .-SoundBuzzer
 385                 		.global	__size_of_SoundBuzzer
 414:hr_sensor_hw.c **** }
 386                 	ze_of_SoundBuzzer,. - SoundBuzzer
 387 0053 06 0F       		.section	.text.appBuzzerTimerHandler,"ax",@progbits
 388                 		.type	appBuzzerTimerHandler, @function
 389                 	appBuzzerTimerHandler:
 390                 	.LFB2:
 391                 		.loc 1 133 0
 392                 	.LVL24:
 393                 		enter	#0x0003
 394                 	.LCFI7:
 395                 		.loc 1 136 0
 133:hr_sensor_hw.c **** {
 396                 	0000
 397                 	.LVL25:
 398 0000 03 0B       		st	AL,@g_app_hw_data
 399                 		.loc 1 138 0
 136:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 400                 	AL,@g_app_hw_data+0x0001
 401 0001 00 14       		cmp	AL,#0x0003
 402                 		beq	.L39
 403 0002 00 00 00 25 		cmp	AL,#0x0004
 138:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 404                 		.L41
 405 0004 00 00 00 15 		cmp	AL,#0x0001
 406 0006 03 84       		bcs	.L37
 407 0007 00 00 00 00 		bra	.L56
 407      00 F4 
 408 000a 04 84       	.L41:
 409 000b 00 00 00 00 		cmp	AL,#0x0004
 409      00 F8 
 410 000e 01 84       		bne	.L37
 411 000f 00 00 00 00 		bra	.L57
 411      00 FC 
 412 0012 00 00 00 00 	.L56:
 412      00 E0 
 413                 		.loc 1 143 0
 414 0015 04 84       		ld	X,#0x0000
 415 0016 00 00 00 00 		st	X,@g_app_hw_data+0x0001
 415      00 F0 
 416 0019 00 00 00 00 		.loc 1 146 0
 416      00 E0 
 417                 		ld	AL,#0x0000
 143:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 418                 	
 419 001c 00 18       		bra	.L54
 420 001d 00 00 00 29 	.L39:
 146:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 421                 	loc 1 151 0
 422 001f 00 14       		ld	AL,@g_app_hw_data+0x0002
 423 0020 00 10       		bne	.L43
 424 0021 00 00 00 00 		.loc 1 154 0
 424      00 E0 
 425                 		ld	AL,#0x0001
 151:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 426                 	.L53
 427 0024 00 00 00 15 	.L43:
 428 0026 00 00 00 00 		.loc 1 162 0
 428      00 F0 
 154:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 429                 	p	AL,#0x0001
 430 0029 01 14       		bne	.L48
 431 002a 00 00 00 00 		.loc 1 164 0
 431      00 E0 
 432                 		ld	X,#0x0002
 162:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 433                 	X,@g_app_hw_data+0x0002
 434 002d 01 84       		bra	.L55
 435 002e 00 00 00 00 	.L57:
 435      00 F0 
 164:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 436                 	oc 1 186 0
 437 0031 02 18       		ld	AL,@g_app_hw_data+0x0002
 438 0032 00 00 00 29 		beq	.L45
 439 0034 00 00 00 00 		cmp	AL,#0x0002
 439      00 E0 
 440                 		bne	.L46
 186:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 441                 	
 442 0037 00 00 00 15 		.loc 1 190 0
 443 0039 00 00 00 00 		add	AL,#0x0001
 443      00 F4 
 444 003c 02 84       	.L53:
 445 003d 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 445      00 F0 
 446                 		.loc 1 193 0
 190:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 447                 	L,#0x0000
 448 0040 01 34       		ld	AH,#0x0000
 449                 		bsr	PioEnablePWM
 450 0041 00 00 00 25 		ld	AH,#0x0000
 193:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 451                 	26:
 452 0043 00 14       		ld	AL,#0x61a8
 453 0044 00 10       	.LVL27:
 454 0045 00 00 00 00 		bra	.L42
 454      00 9C 
 455 0048 00 10       	.LVL28:
 456                 	.L46:
 457 0049 62 00 A8 14 		.loc 1 198 0
 458                 		cmp	AL,#0x0001
 459 004b 00 00 00 00 		beq	.L47
 459      00 E0 
 460                 		cmp	AL,#0x0003
 461                 		bne	.L48
 198:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 462                 	 1 201 0
 463 004e 01 84       		add	AL,#0x0001
 464 004f 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 464      00 F4 
 465 0052 03 84       	.L55:
 466 0053 00 00 00 00 		.loc 1 204 0
 466      00 F0 
 467                 		ld	AL,#0x0000
 201:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 468                 	,#0x0001
 469 0056 01 34       	.L54:
 470 0057 00 00 00 25 		bsr	PioEnablePWM
 471                 		bra	.L52
 204:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 472                 	:
 473 0059 00 14       		.loc 1 211 0
 474 005a 01 10       		ld	AL,#0x0000
 475                 		st	AL,@g_app_hw_data+0x0002
 476 005b 00 00 00 00 		.loc 1 214 0
 476      00 9C 
 477 005e 00 00 00 00 		ld	AH,#0x0000
 477      00 E0 
 478                 		bsr	PioEnablePWM
 211:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 479                 	 216 0
 480 0061 00 14       		ld	X,#0x0000
 481 0062 00 00 00 25 		st	X,@g_app_hw_data+0x0001
 214:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 482                 	a	.L52
 483 0064 00 10       	.L37:
 484 0065 00 00 00 00 		.loc 1 224 0
 484      00 9C 
 216:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 485                 		AL,#0x000b
 486 0068 00 18       		bsr	ReportPanic
 487 0069 00 00 00 29 	.L52:
 488 006b 00 00 00 00 		ld	AH,#0x0001
 488      00 E0 
 489                 	.LVL29:
 224:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 490                 	L,#0x86a0
 491 006e 0B 14       	.LVL30:
 492 006f 00 00 00 00 	.L42:
 492      00 9C 
 493                 		.loc 1 232 0
 494 0072 01 10       		tst	@g_app_hw_data+0x0001
 495                 		beq	.L50
 496 0073 87 00 A0 14 		.loc 1 235 0
 497                 		ld	X,#0x0001
 498                 		st	X,@(0,Y)
 232:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 499                 	pBuzzerTimerHandler
 500 0075 00 00 00 99 		st	X,@(0x0001,Y)
 501 0077 00 00 00 00 		bsr	TimerCreate
 501      00 F4 
 235:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 502                 	L31:
 503 007a 01 18       		st	AL,@g_app_hw_data
 504 007b 00 2B       	.LVL32:
 505 007c 00 00 00 18 	.L50:
 506 007e 01 2B       		.loc 1 238 0
 507 007f 00 00 00 00 		leave	#0x0003
 507      00 9C 
 508                 	.LFE2:
 509 0082 00 00 00 25 		.size	appBuzzerTimerHandler, .-appBuzzerTimerHandler
 510                 		.equ	__size_of_appBuzzerTimerHandler,. - appBuzzerTimerHandler
 511                 		.section	.text.HrInitHardware,"ax",@progbits
 238:hr_sensor_hw.c **** }
 512                 	rInitHardware
 513 0084 03 0F       		.type	HrInitHardware, @function
 514                 	HrInitHardware:
 515                 	.LFB3:
 516                 		.loc 1 259 0
 517                 		enter	#0x0008
 518                 	.LCFI8:
 519                 		.loc 1 280 0
 520                 		ld	AL,#0x0001
 521                 		st	AL,@(0,Y)
 259:hr_sensor_hw.c **** {
 522                 	0000
 523 0000 08 0B       		ld	AL,#0x0200
 524                 		bsr	PioSetModes
 280:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 525                 	oc 1 281 0
 526 0001 01 14       		ld	AL,#0x0009
 527 0002 00 27       		ld	AH,#0x0000
 528 0003 00 10       		bsr	PioSetDir
 529 0004 02 00 00 14 		.loc 1 282 0
 530 0006 00 00 00 00 		ld	AL,#0x0007
 530      00 9C 
 281:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 531                 	,@(0,Y)
 532 0009 09 14       		ld	AH,#0x0000
 533 000a 00 10       		ld	AL,#0x0200
 534 000b 00 00 00 00 		bsr	PioSetPullModes
 534      00 9C 
 282:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 535                 	c 1 285 0
 536 000e 07 14       		ld	AL,#0x0001
 537 000f 00 27       		ld	AH,#0x0000
 538 0010 00 10       		bsr	PioEnableEdgeCapture
 539 0011 02 00 00 14 		.loc 1 288 0
 540 0013 00 00 00 00 		ld	AL,#0x0003
 540      00 9C 
 285:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 541                 	,@(0,Y)
 542 0016 01 14       		ld	AH,#0x0000
 543 0017 00 10       		ld	AL,#0x0200
 544 0018 00 00 00 00 		bsr	PioSetEventMask
 544      00 9C 
 288:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 545                 	c 1 293 0
 546 001b 03 14       		ld	AL,#0x0004
 547 001c 00 27       		st	AL,@(0,Y)
 548 001d 00 10       		ld	AH,#0x0000
 549 001e 02 00 00 14 		ld	AL,#0x0008
 550 0020 00 00 00 00 		bsr	PioSetModes
 550      00 9C 
 293:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 551                 	1 296 0
 552 0023 04 14       		ld	AL,#0x0002
 553 0024 00 27       		st	AL,@(0,Y)
 554 0025 00 10       		ld	AL,#0x000f
 555 0026 08 14       		st	AL,@(0x0001,Y)
 556 0027 00 00 00 00 		ld	AL,#0x0000
 556      00 9C 
 296:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 557                 	,@(0x0002,Y)
 558 002a 02 14       		ld	AL,#0x0002
 559 002b 00 27       		st	AL,@(0x0003,Y)
 560 002c 0F 14       		ld	AL,#0x000f
 561 002d 01 27       		st	AL,@(0x0004,Y)
 562 002e 00 14       		ld	AL,#0x0000
 563 002f 02 27       		st	AL,@(0x0005,Y)
 564 0030 02 14       		ld	AL,#0x00ff
 565 0031 03 27       		st	AL,@(0x0006,Y)
 566 0032 0F 14       		ld	AL,#0x0000
 567 0033 04 27       		ld	AH,#0x0000
 568 0034 00 14       		bsr	PioConfigPWM
 569 0035 05 27       		.loc 1 301 0
 570 0036 01 00 FF 14 		ld	AL,#0x0000
 571 0038 06 27       		ld	AH,#0x0000
 572 0039 00 14       		bsr	PioEnablePWM
 573 003a 00 10       		.loc 1 306 0
 574 003b 00 00 00 00 		ld	AL,#0x0005
 574      00 9C 
 301:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 575                 	Mode
 576 003e 00 14       		.loc 1 308 0
 577 003f 00 10       		bsr	HrInitSwitchHardware
 578 0040 00 00 00 00 		.loc 1 309 0
 578      00 9C 
 306:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 579                 	ve	#0x0008
 580 0043 05 14       	.LFE3:
 581 0044 00 00 00 00 		.size	HrInitHardware, .-HrInitHardware
 581      00 9C 
 308:hr_sensor_hw.c ****     HrInitSwitchHardware();
 582                 	lobal	__size_of_HrInitHardware
 583 0047 00 00 00 00 		.equ	__size_of_HrInitHardware,. - HrInitHardware
 583      00 9C 
 309:hr_sensor_hw.c **** }
 584                 	comm g_app_hw_data, 4, 1
 585 004a 08 0F       	
 586                 		.comm g_dimmer_data, 1, 1
 587                 	
 588                 		.section	.debug_frame,"",@progbits
 589                 	.Lframe0:
 590                 		.4byte	.LECIE0-.LSCIE0
 591                 	.LSCIE0:
 592                 		.4byte	0xffffffff
 593                 		.1byte	0x1
 594                 		.ascii "\000"
 595                 		.1byte	0x1
 596 0000 00 00 00 00 		.1byte	0x7f
 597                 		.1byte	0x3
 598 0002 FF FF FF FF 		.1byte	0xc
 599 0004 01          		.1byte	0x5
 600 0004 00          		.1byte	0x0
 601 0005 01          		.p2align	2
 602 0005 7F          	.LECIE0:
 603 0006 03          	.LSFDE0:
 604 0006 0C          		.4byte	.LEFDE0-.LASFDE0
 605 0007 05          	.LASFDE0:
 606 0007 00          		.4byte	.Lframe0
 607                 		.4byte	.LFB9
 608                 		.4byte	.LFE9-.LFB9
 609                 		.p2align	2
 610 0008 00 00 00 00 	.LEFDE0:
 611                 	.LSFDE2:
 612 000a 00 00 00 00 		.4byte	.LEFDE2-.LASFDE2
 613 000c 00 00 00 00 	.LASFDE2:
 614 000e 00 00 00 00 		.4byte	.Lframe0
 615                 		.4byte	.LFB14
 616                 		.4byte	.LFE14-.LFB14
 617                 		.p2align	2
 618 0010 00 00 00 00 	.LEFDE2:
 619                 	.LSFDE4:
 620 0012 00 00 00 00 		.4byte	.LEFDE4-.LASFDE4
 621 0014 00 00 00 00 	.LASFDE4:
 622 0016 00 00 00 03 		.4byte	.Lframe0
 623                 		.4byte	.LFB15
 624                 		.4byte	.LFE15-.LFB15
 625                 		.p2align	2
 626 0018 00 00 00 00 	.LEFDE4:
 627                 	.LSFDE6:
 628 001a 00 00 00 00 		.4byte	.LEFDE6-.LASFDE6
 629 001c 00 00 00 00 	.LASFDE6:
 630 001e 00 00 00 04 		.4byte	.Lframe0
 631                 		.4byte	.LFB13
 632                 		.4byte	.LFE13-.LFB13
 633                 		.p2align	2
 634 0020 00 00 00 00 	.LEFDE6:
 635                 	.LSFDE8:
 636 0022 00 00 00 00 		.4byte	.LEFDE8-.LASFDE8
 637 0024 00 00 00 00 	.LASFDE8:
 638 0026 00 00 00 00 		.4byte	.Lframe0
 639                 		.4byte	.LFB11
 640                 		.4byte	.LFE11-.LFB11
 641                 		.1byte	0x4
 642 0028 00 00 00 00 		.4byte	.LCFI0-.LFB11
 643                 		.1byte	0xe
 644 002a 00 00 00 00 		.1byte	0x3
 645 002c 00 00 00 00 		.1byte	0x83
 646 002e 00 00 00 00 		.1byte	0x1
 647 0030 41          		.p2align	2
 648                 	.LEFDE8:
 649 0030 0E          	.LSFDE10:
 650 0031 03          		.4byte	.LEFDE10-.LASFDE10
 651 0031 83          	.LASFDE10:
 652 0032 01          		.4byte	.Lframe0
 653 0032 00 00 00    		.4byte	.LFB12
 654                 		.4byte	.LFE12-.LFB12
 655                 		.1byte	0x4
 656 0034 00 00 00 00 		.4byte	.LCFI1-.LFB12
 657                 		.1byte	0xe
 658 0036 00 00 00 00 		.1byte	0x2
 659 0038 00 00 00 00 		.1byte	0x83
 660 003a 00 00 00 00 		.1byte	0x1
 661 003c 41          		.p2align	2
 662                 	.LEFDE10:
 663 003c 0E          	.LSFDE12:
 664 003d 02          		.4byte	.LEFDE12-.LASFDE12
 665 003d 83          	.LASFDE12:
 666 003e 01          		.4byte	.Lframe0
 667 003e 00 00 00    		.4byte	.LFB10
 668                 		.4byte	.LFE10-.LFB10
 669                 		.1byte	0x4
 670 0040 00 00 00 00 		.4byte	.LCFI2-.LFB10
 671                 		.1byte	0xe
 672 0042 00 00 00 00 		.1byte	0x2
 673 0044 00 00 00 00 		.1byte	0x83
 674 0046 00 00 00 00 		.1byte	0x1
 675 0048 41          		.p2align	2
 676                 	.LEFDE12:
 677 0048 0E          	.LSFDE14:
 678 0049 02          		.4byte	.LEFDE14-.LASFDE14
 679 0049 83          	.LASFDE14:
 680 004a 01          		.4byte	.Lframe0
 681 004a 00 00 00    		.4byte	.LFB8
 682                 		.4byte	.LFE8-.LFB8
 683                 		.1byte	0x4
 684 004c 00 00 00 00 		.4byte	.LCFI3-.LFB8
 685                 		.1byte	0xe
 686 004e 00 00 00 00 		.1byte	0x2
 687 0050 00 00 00 00 		.1byte	0x83
 688 0052 00 00 00 00 		.1byte	0x1
 689 0054 41          		.p2align	2
 690                 	.LEFDE14:
 691 0054 0E          	.LSFDE16:
 692 0055 02          		.4byte	.LEFDE16-.LASFDE16
 693 0055 83          	.LASFDE16:
 694 0056 01          		.4byte	.Lframe0
 695 0056 00 00 00    		.4byte	.LFB4
 696                 		.4byte	.LFE4-.LFB4
 697                 		.1byte	0x4
 698 0058 00 00 00 00 		.4byte	.LCFI4-.LFB4
 699                 		.1byte	0xe
 700 005a 00 00 00 00 		.1byte	0x1
 701 005c 00 00 00 00 		.1byte	0x83
 702 005e 00 00 00 00 		.1byte	0x1
 703 0060 41          		.p2align	2
 704                 	.LEFDE16:
 705 0060 0E          	.LSFDE18:
 706 0061 01          		.4byte	.LEFDE18-.LASFDE18
 707 0061 83          	.LASFDE18:
 708 0062 01          		.4byte	.Lframe0
 709 0062 00 00 00    		.4byte	.LFB7
 710                 		.4byte	.LFE7-.LFB7
 711                 		.1byte	0x4
 712 0064 00 00 00 00 		.4byte	.LCFI5-.LFB7
 713                 		.1byte	0xe
 714 0066 00 00 00 00 		.1byte	0x5
 715 0068 00 00 00 00 		.1byte	0x83
 716 006a 00 00 00 00 		.1byte	0x1
 717 006c 41          		.p2align	2
 718                 	.LEFDE18:
 719 006c 0E          	.LSFDE20:
 720 006d 05          		.4byte	.LEFDE20-.LASFDE20
 721 006d 83          	.LASFDE20:
 722 006e 01          		.4byte	.Lframe0
 723 006e 00 00 00    		.4byte	.LFB6
 724                 		.4byte	.LFE6-.LFB6
 725                 		.p2align	2
 726 0070 00 00 00 00 	.LEFDE20:
 727                 	.LSFDE22:
 728 0072 00 00 00 00 		.4byte	.LEFDE22-.LASFDE22
 729 0074 00 00 00 00 	.LASFDE22:
 730 0076 00 00 00 00 		.4byte	.Lframe0
 731                 		.4byte	.LFB5
 732                 		.4byte	.LFE5-.LFB5
 733                 		.1byte	0x4
 734 0078 00 00 00 00 		.4byte	.LCFI6-.LFB5
 735                 		.1byte	0xe
 736 007a 00 00 00 00 		.1byte	0x6
 737 007c 00 00 00 00 		.1byte	0x83
 738 007e 00 00 00 00 		.1byte	0x1
 739 0080 41          		.p2align	2
 740                 	.LEFDE22:
 741 0080 0E          	.LSFDE24:
 742 0081 06          		.4byte	.LEFDE24-.LASFDE24
 743 0081 83          	.LASFDE24:
 744 0082 01          		.4byte	.Lframe0
 745 0082 00 00 00    		.4byte	.LFB2
 746                 		.4byte	.LFE2-.LFB2
 747                 		.1byte	0x4
 748 0084 00 00 00 00 		.4byte	.LCFI7-.LFB2
 749                 		.1byte	0xe
 750 0086 00 00 00 00 		.1byte	0x3
 751 0088 00 00 00 00 		.1byte	0x83
 752 008a 00 00 00 00 		.1byte	0x1
 753 008c 41          		.p2align	2
 754                 	.LEFDE24:
 755 008c 0E          	.LSFDE26:
 756 008d 03          		.4byte	.LEFDE26-.LASFDE26
 757 008d 83          	.LASFDE26:
 758 008e 01          		.4byte	.Lframe0
 759 008e 00 00 00    		.4byte	.LFB3
 760                 		.4byte	.LFE3-.LFB3
 761                 		.1byte	0x4
 762 0090 00 00 00 00 		.4byte	.LCFI8-.LFB3
 763                 		.1byte	0xe
 764 0092 00 00 00 00 		.1byte	0x8
 765 0094 00 00 00 00 		.1byte	0x83
 766 0096 00 00 00 00 		.1byte	0x1
 767 0098 41          		.p2align	2
 768                 	.LEFDE26:
 769 0098 0E          		.text
 770 0099 08          	.Letext0:
 771 0099 83          		.section	.debug_loc,"",@progbits
 772 009a 01          	.Ldebug_loc0:
 773 009a 00 00 00    	.LLST4:
 774                 		.4byte	.LVL0
 775                 		.4byte	.LVL1
 776                 		.2byte	0x1
 777                 		.1byte	0x51
 778                 		.4byte	0x0
 779                 		.4byte	0x0
 780 0000 00 00 00 00 	.LLST5:
 781 0002 00 00 00 00 		.4byte	.LFB11
 782 0004 00 01       		.4byte	.LCFI0
 783 0005 51          		.2byte	0x1
 784 0005 00 00 00 00 		.1byte	0x55
 785 0007 00 00 00 00 		.4byte	.LCFI0
 786                 		.4byte	.LFE11
 787 0009 00 00 00 00 		.2byte	0x2
 788 000b 00 00 00 00 		.1byte	0x75
 789 000d 00 01       		.1byte	0x3
 790 000e 55          		.4byte	0x0
 791 000f 00 00 00 00 		.4byte	0x0
 792 0011 00 00 00 00 	.LLST6:
 793 0013 00 02       		.4byte	.LVL2
 794 0014 75          		.4byte	.LVL3
 795 0014 03          		.2byte	0x6
 796 0015 00 00 00 00 		.1byte	0x50
 797 0017 00 00 00 00 		.1byte	0x93
 798                 		.1byte	0x2
 799 0019 00 00 00 00 		.1byte	0x51
 800 001b 00 00 00 00 		.1byte	0x93
 801 001d 00 06       		.1byte	0x2
 802 001e 50          		.4byte	0x0
 803 001e 93          		.4byte	0x0
 804 001f 02          	.LLST7:
 805 001f 51          		.4byte	.LVL2
 806 0020 93          		.4byte	.LVL5
 807 0020 02          		.2byte	0x2
 808 0021 00 00 00 00 		.1byte	0x91
 809 0023 00 00 00 00 		.1byte	0x0
 810                 		.4byte	.LVL5
 811 0025 00 00 00 00 		.4byte	.LFE11
 812 0027 00 00 00 00 		.2byte	0x2
 813 0029 00 02       		.1byte	0x76
 814 002a 91          		.1byte	0x3
 815 002a 00          		.4byte	0x0
 816 002b 00 00 00 00 		.4byte	0x0
 817 002d 00 00 00 00 	.LLST8:
 818 002f 00 02       		.4byte	.LVL4
 819 0030 76          		.4byte	.LVL6
 820 0030 03          		.2byte	0x1
 821 0031 00 00 00 00 		.1byte	0x51
 822 0033 00 00 00 00 		.4byte	.LVL7
 823                 		.4byte	.LFE11
 824 0035 00 00 00 00 		.2byte	0x1
 825 0037 00 00 00 00 		.1byte	0x51
 826 0039 00 01       		.4byte	0x0
 827 003a 51          		.4byte	0x0
 828 003a 00 00 00 00 	.LLST9:
 829 003c 00 00 00 00 		.4byte	.LFB12
 830 003e 00 01       		.4byte	.LCFI1
 831 003f 51          		.2byte	0x1
 832 0040 00 00 00 00 		.1byte	0x55
 833 0042 00 00 00 00 		.4byte	.LCFI1
 834                 		.4byte	.LFE12
 835 0044 00 00 00 00 		.2byte	0x2
 836 0046 00 00 00 00 		.1byte	0x75
 837 0048 00 01       		.1byte	0x2
 838 0049 55          		.4byte	0x0
 839 0049 00 00 00 00 		.4byte	0x0
 840 004b 00 00 00 00 	.LLST10:
 841 004d 00 02       		.4byte	.LVL8
 842 004e 75          		.4byte	.LVL9
 843 004f 02          		.2byte	0x1
 844 004f 00 00 00 00 		.1byte	0x51
 845 0051 00 00 00 00 		.4byte	0x0
 846                 		.4byte	0x0
 847 0053 00 00 00 00 	.LLST11:
 848 0055 00 00 00 00 		.4byte	.LFB10
 849 0057 00 01       		.4byte	.LCFI2
 850 0058 51          		.2byte	0x1
 851 0059 00 00 00 00 		.1byte	0x55
 852 005b 00 00 00 00 		.4byte	.LCFI2
 853                 		.4byte	.LFE10
 854 005d 00 00 00 00 		.2byte	0x2
 855 005f 00 00 00 00 		.1byte	0x75
 856 0061 00 01       		.1byte	0x2
 857 0062 55          		.4byte	0x0
 858 0062 00 00 00 00 		.4byte	0x0
 859 0064 00 00 00 00 	.LLST12:
 860 0066 00 02       		.4byte	.LVL10
 861 0067 75          		.4byte	.LVL11
 862 0068 02          		.2byte	0x6
 863 0068 00 00 00 00 		.1byte	0x50
 864 006a 00 00 00 00 		.1byte	0x93
 865                 		.1byte	0x2
 866 006c 00 00 00 00 		.1byte	0x51
 867 006e 00 00 00 00 		.1byte	0x93
 868 0070 00 06       		.1byte	0x2
 869 0071 50          		.4byte	0x0
 870 0072 93          		.4byte	0x0
 871 0072 02          	.LLST13:
 872 0073 51          		.4byte	.LFB8
 873 0073 93          		.4byte	.LCFI3
 874 0074 02          		.2byte	0x1
 875 0074 00 00 00 00 		.1byte	0x55
 876 0076 00 00 00 00 		.4byte	.LCFI3
 877                 		.4byte	.LFE8
 878 0078 00 00 00 00 		.2byte	0x2
 879 007a 00 00 00 00 		.1byte	0x75
 880 007c 00 01       		.1byte	0x2
 881 007d 55          		.4byte	0x0
 882 007e 00 00 00 00 		.4byte	0x0
 883 0080 00 00 00 00 	.LLST14:
 884 0082 00 02       		.4byte	.LFB4
 885 0083 75          		.4byte	.LCFI4
 886 0083 02          		.2byte	0x1
 887 0084 00 00 00 00 		.1byte	0x55
 888 0086 00 00 00 00 		.4byte	.LCFI4
 889                 		.4byte	.LFE4
 890 0088 00 00 00 00 		.2byte	0x2
 891 008a 00 00 00 00 		.1byte	0x75
 892 008c 00 01       		.1byte	0x1
 893 008d 55          		.4byte	0x0
 894 008d 00 00 00 00 		.4byte	0x0
 895 008f 00 00 00 00 	.LLST15:
 896 0091 00 02       		.4byte	.LFB7
 897 0092 75          		.4byte	.LCFI5
 898 0093 01          		.2byte	0x1
 899 0093 00 00 00 00 		.1byte	0x55
 900 0095 00 00 00 00 		.4byte	.LCFI5
 901                 		.4byte	.LFE7
 902 0097 00 00 00 00 		.2byte	0x2
 903 0099 00 00 00 00 		.1byte	0x75
 904 009b 00 01       		.1byte	0x5
 905 009c 55          		.4byte	0x0
 906 009d 00 00 00 00 		.4byte	0x0
 907 009f 00 00 00 00 	.LLST16:
 908 00a1 00 02       		.4byte	.LVL12
 909 00a2 75          		.4byte	.LVL14
 910 00a2 05          		.2byte	0x6
 911 00a3 00 00 00 00 		.1byte	0x50
 912 00a5 00 00 00 00 		.1byte	0x93
 913                 		.1byte	0x2
 914 00a7 00 00 00 00 		.1byte	0x51
 915 00a9 00 00 00 00 		.1byte	0x93
 916 00ab 00 06       		.1byte	0x2
 917 00ac 50          		.4byte	0x0
 918 00ac 93          		.4byte	0x0
 919 00ad 02          	.LLST18:
 920 00ad 51          		.4byte	.LFB5
 921 00ae 93          		.4byte	.LCFI6
 922 00ae 02          		.2byte	0x1
 923 00af 00 00 00 00 		.1byte	0x55
 924 00b1 00 00 00 00 		.4byte	.LCFI6
 925                 		.4byte	.LFE5
 926 00b3 00 00 00 00 		.2byte	0x2
 927 00b5 00 00 00 00 		.1byte	0x75
 928 00b7 00 01       		.1byte	0x6
 929 00b8 55          		.4byte	0x0
 930 00b8 00 00 00 00 		.4byte	0x0
 931 00ba 00 00 00 00 	.LLST19:
 932 00bc 00 02       		.4byte	.LVL22
 933 00bd 75          		.4byte	.LVL23
 934 00be 06          		.2byte	0x1
 935 00be 00 00 00 00 		.1byte	0x51
 936 00c0 00 00 00 00 		.4byte	.LVL23
 937                 		.4byte	.LFE5
 938 00c2 00 00 00 00 		.2byte	0x2
 939 00c4 00 00 00 00 		.1byte	0x76
 940 00c6 00 01       		.1byte	0x2
 941 00c7 51          		.4byte	0x0
 942 00c8 00 00 00 00 		.4byte	0x0
 943 00ca 00 00 00 00 	.LLST20:
 944 00cc 00 02       		.4byte	.LFB2
 945 00cd 76          		.4byte	.LCFI7
 946 00cd 02          		.2byte	0x1
 947 00ce 00 00 00 00 		.1byte	0x55
 948 00d0 00 00 00 00 		.4byte	.LCFI7
 949                 		.4byte	.LFE2
 950 00d2 00 00 00 00 		.2byte	0x2
 951 00d4 00 00 00 00 		.1byte	0x75
 952 00d6 00 01       		.1byte	0x3
 953 00d7 55          		.4byte	0x0
 954 00d7 00 00 00 00 		.4byte	0x0
 955 00d9 00 00 00 00 	.LLST21:
 956 00db 00 02       		.4byte	.LVL24
 957 00dc 75          		.4byte	.LVL25
 958 00dd 03          		.2byte	0x1
 959 00dd 00 00 00 00 		.1byte	0x51
 960 00df 00 00 00 00 		.4byte	0x0
 961                 		.4byte	0x0
 962 00e1 00 00 00 00 	.LLST22:
 963 00e3 00 00 00 00 		.4byte	.LVL27
 964 00e5 00 01       		.4byte	.LVL28
 965 00e6 51          		.2byte	0x6
 966 00e7 00 00 00 00 		.1byte	0x50
 967 00e9 00 00 00 00 		.1byte	0x93
 968                 		.1byte	0x2
 969 00eb 00 00 00 00 		.1byte	0x51
 970 00ed 00 00 00 00 		.1byte	0x93
 971 00ef 00 06       		.1byte	0x2
 972 00f0 50          		.4byte	.LVL30
 973 00f0 93          		.4byte	.LVL31
 974 00f1 02          		.2byte	0x6
 975 00f1 51          		.1byte	0x50
 976 00f2 93          		.1byte	0x93
 977 00f2 02          		.1byte	0x2
 978 00f3 00 00 00 00 		.1byte	0x51
 979 00f5 00 00 00 00 		.1byte	0x93
 980 00f7 00 06       		.1byte	0x2
 981 00f8 50          		.4byte	.LVL32
 982 00f8 93          		.4byte	.LFE2
 983 00f9 02          		.2byte	0x6
 984 00f9 51          		.1byte	0x50
 985 00fa 93          		.1byte	0x93
 986 00fa 02          		.1byte	0x2
 987 00fb 00 00 00 00 		.1byte	0x51
 988 00fd 00 00 00 00 		.1byte	0x93
 989 00ff 00 06       		.1byte	0x2
 990 0100 50          		.4byte	0x0
 991 0100 93          		.4byte	0x0
 992 0101 02          	.LLST23:
 993 0101 51          		.4byte	.LFB3
 994 0102 93          		.4byte	.LCFI8
 995 0102 02          		.2byte	0x1
 996 0103 00 00 00 00 		.1byte	0x55
 997 0105 00 00 00 00 		.4byte	.LCFI8
 998                 		.4byte	.LFE3
 999 0107 00 00 00 00 		.2byte	0x2
 1000 0109 00 00 00 00 		.1byte	0x75
 1001 010b 00 01       		.1byte	0x8
 1002 010c 55          		.4byte	0x0
 1003 010c 00 00 00 00 		.4byte	0x0
 1004 010e 00 00 00 00 		.file 2 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/types.h"
 1005 0110 00 02       		.file 3 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/pio.h"
 1006 0111 75          		.file 4 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/timer.h"
 1007 0112 08          		.file 5 "hr_sensor_hw.h"
 1008 0112 00 00 00 00 		.file 6 "app_gatt.h"
 1009 0114 00 00 00 00 		.section	.debug_info
 1010                 		.4byte	0x52c
 1011                 		.2byte	0x2
 1012                 		.4byte	.Ldebug_abbrev0
 1013                 		.1byte	0x4
 1014                 		.1byte	0x1
 1015                 		.4byte	.LASF101
 1016 0000 00 00 05 2C 		.1byte	0x1
 1017 0002 00 02       		.4byte	.LASF102
 1018 0003 00 00 00 00 		.4byte	.LASF103
 1019 0005 04          		.4byte	0x0
 1020 0005 01          		.4byte	0x0
 1021 0006 00 00 00 00 		.4byte	.Ldebug_ranges0+0x0
 1022 0008 01          		.4byte	.Ldebug_line0
 1023 0008 00 00 00 00 		.1byte	0x2
 1024 000a 00 00 00 00 		.1byte	0x2
 1025 000c 00 00 00 00 		.1byte	0x8
 1026 000e 00 00 00 00 		.4byte	.LASF0
 1027 0010 00 00 00 00 		.1byte	0x3
 1028 0012 00 00 00 00 		.4byte	.LASF2
 1029 0014 02          		.1byte	0x2
 1030 0015 02          		.1byte	0x1f
 1031 0015 08          		.4byte	0x3b
 1032 0016 00 00 00 00 		.1byte	0x2
 1033 0018 03          		.1byte	0x2
 1034 0018 00 00 00 00 		.1byte	0x7
 1035 001a 02          		.4byte	.LASF1
 1036 001b 1F          		.1byte	0x3
 1037 001b 00 00 00 3B 		.4byte	.LASF3
 1038 001d 02          		.1byte	0x2
 1039 001e 02          		.1byte	0x20
 1040 001e 07          		.4byte	0x4d
 1041 001f 00 00 00 00 		.1byte	0x2
 1042 0021 03          		.1byte	0x4
 1043 0021 00 00 00 00 		.1byte	0x7
 1044 0023 02          		.4byte	.LASF4
 1045 0024 20          		.1byte	0x2
 1046 0024 00 00 00 4D 		.1byte	0x2
 1047 0026 02          		.1byte	0x6
 1048 0027 04          		.4byte	.LASF5
 1049 0027 07          		.1byte	0x2
 1050 0028 00 00 00 00 		.1byte	0x2
 1051 002a 02          		.1byte	0x5
 1052 002a 02          		.4byte	.LASF6
 1053 002b 06          		.1byte	0x2
 1054 002b 00 00 00 00 		.1byte	0x4
 1055 002d 02          		.1byte	0x5
 1056 002e 02          		.4byte	.LASF7
 1057 002e 05          		.1byte	0x2
 1058 002f 00 00 00 00 		.1byte	0x2
 1059 0031 02          		.1byte	0x7
 1060 0031 04          		.4byte	.LASF8
 1061 0032 05          		.1byte	0x4
 1062 0032 00 00 00 00 		.1byte	0x2
 1063 0034 02          		.1byte	0x3
 1064 0035 02          		.1byte	0x1b
 1065 0035 07          		.4byte	0x10f
 1066 0036 00 00 00 00 		.1byte	0x5
 1067 0038 04          		.4byte	.LASF9
 1068 0038 02          		.1byte	0x0
 1069 0039 03          		.1byte	0x5
 1070 0039 1B          		.4byte	.LASF10
 1071 003a 00 00 01 0F 		.1byte	0x1
 1072 003c 05          		.1byte	0x5
 1073 003c 00 00 00 00 		.4byte	.LASF11
 1074 003e 00          		.1byte	0x3
 1075 003f 05          		.1byte	0x5
 1076 003f 00 00 00 00 		.4byte	.LASF12
 1077 0041 01          		.1byte	0x4
 1078 0042 05          		.1byte	0x5
 1079 0042 00 00 00 00 		.4byte	.LASF13
 1080 0044 03          		.1byte	0x5
 1081 0045 05          		.1byte	0x5
 1082 0045 00 00 00 00 		.4byte	.LASF14
 1083 0047 04          		.1byte	0x6
 1084 0048 05          		.1byte	0x5
 1085 0048 00 00 00 00 		.4byte	.LASF15
 1086 004a 05          		.1byte	0x7
 1087 004b 05          		.1byte	0x5
 1088 004b 00 00 00 00 		.4byte	.LASF16
 1089 004d 06          		.1byte	0x8
 1090 004e 05          		.1byte	0x5
 1091 004e 00 00 00 00 		.4byte	.LASF17
 1092 0050 07          		.1byte	0x9
 1093 0051 05          		.1byte	0x5
 1094 0051 00 00 00 00 		.4byte	.LASF18
 1095 0053 08          		.1byte	0xa
 1096 0054 05          		.1byte	0x5
 1097 0054 00 00 00 00 		.4byte	.LASF19
 1098 0056 09          		.1byte	0xb
 1099 0057 05          		.1byte	0x5
 1100 0057 00 00 00 00 		.4byte	.LASF20
 1101 0059 0A          		.1byte	0xc
 1102 005a 05          		.1byte	0x5
 1103 005a 00 00 00 00 		.4byte	.LASF21
 1104 005c 0B          		.1byte	0xd
 1105 005d 05          		.1byte	0x5
 1106 005d 00 00 00 00 		.4byte	.LASF22
 1107 005f 0C          		.1byte	0xe
 1108 0060 05          		.1byte	0x5
 1109 0060 00 00 00 00 		.4byte	.LASF23
 1110 0062 0D          		.1byte	0xf
 1111 0063 05          		.1byte	0x5
 1112 0063 00 00 00 00 		.4byte	.LASF24
 1113 0065 0E          		.1byte	0x10
 1114 0066 05          		.1byte	0x5
 1115 0066 00 00 00 00 		.4byte	.LASF25
 1116 0068 0F          		.1byte	0x11
 1117 0069 05          		.1byte	0x5
 1118 0069 00 00 00 00 		.4byte	.LASF26
 1119 006b 10          		.1byte	0x12
 1120 006c 05          		.1byte	0x5
 1121 006c 00 00 00 00 		.4byte	.LASF27
 1122 006e 11          		.1byte	0x13
 1123 006f 05          		.1byte	0x5
 1124 006f 00 00 00 00 		.4byte	.LASF28
 1125 0071 12          		.1byte	0x14
 1126 0072 05          		.1byte	0x5
 1127 0072 00 00 00 00 		.4byte	.LASF29
 1128 0074 13          		.1byte	0x15
 1129 0075 05          		.1byte	0x5
 1130 0075 00 00 00 00 		.4byte	.LASF30
 1131 0077 14          		.1byte	0x16
 1132 0078 05          		.1byte	0x5
 1133 0078 00 00 00 00 		.4byte	.LASF31
 1134 007a 15          		.1byte	0x17
 1135 007b 05          		.1byte	0x5
 1136 007b 00 00 00 00 		.4byte	.LASF32
 1137 007d 16          		.1byte	0x18
 1138 007e 05          		.1byte	0x5
 1139 007e 00 00 00 00 		.4byte	.LASF33
 1140 0080 17          		.1byte	0x19
 1141 0081 05          		.1byte	0x0
 1142 0081 00 00 00 00 		.1byte	0x4
 1143 0083 18          		.1byte	0x2
 1144 0084 05          		.1byte	0x3
 1145 0084 00 00 00 00 		.1byte	0x90
 1146 0086 19          		.4byte	0x142
 1147 0087 00          		.1byte	0x5
 1148 0087 04          		.4byte	.LASF34
 1149 0088 02          		.1byte	0x0
 1150 0088 03          		.1byte	0x5
 1151 0089 90          		.4byte	.LASF35
 1152 0089 00 00 01 42 		.1byte	0x1
 1153 008b 05          		.1byte	0x5
 1154 008c 00 00 00 00 		.4byte	.LASF36
 1155 008e 00          		.1byte	0x3
 1156 008e 05          		.1byte	0x5
 1157 008f 00 00 00 00 		.4byte	.LASF37
 1158 0091 01          		.1byte	0x5
 1159 0091 05          		.1byte	0x5
 1160 0092 00 00 00 00 		.4byte	.LASF38
 1161 0094 03          		.1byte	0x7
 1162 0094 05          		.1byte	0x5
 1163 0095 00 00 00 00 		.4byte	.LASF39
 1164 0097 05          		.1byte	0x9
 1165 0097 05          		.1byte	0x5
 1166 0098 00 00 00 00 		.4byte	.LASF40
 1167 009a 07          		.1byte	0xd
 1168 009a 05          		.1byte	0x0
 1169 009b 00 00 00 00 		.1byte	0x4
 1170 009d 09          		.1byte	0x2
 1171 009d 05          		.1byte	0x3
 1172 009e 00 00 00 00 		.1byte	0xa7
 1173 00a0 0D          		.4byte	0x175
 1174 00a0 00          		.1byte	0x5
 1175 00a1 04          		.4byte	.LASF41
 1176 00a1 02          		.1byte	0x0
 1177 00a2 03          		.1byte	0x5
 1178 00a2 A7          		.4byte	.LASF42
 1179 00a3 00 00 01 75 		.1byte	0x1
 1180 00a5 05          		.1byte	0x5
 1181 00a5 00 00 00 00 		.4byte	.LASF43
 1182 00a7 00          		.1byte	0x3
 1183 00a8 05          		.1byte	0x5
 1184 00a8 00 00 00 00 		.4byte	.LASF44
 1185 00aa 01          		.1byte	0x5
 1186 00ab 05          		.1byte	0x5
 1187 00ab 00 00 00 00 		.4byte	.LASF45
 1188 00ad 03          		.1byte	0x7
 1189 00ae 05          		.1byte	0x5
 1190 00ae 00 00 00 00 		.4byte	.LASF46
 1191 00b0 05          		.1byte	0x9
 1192 00b1 05          		.1byte	0x5
 1193 00b1 00 00 00 00 		.4byte	.LASF47
 1194 00b3 07          		.1byte	0xd
 1195 00b4 05          		.1byte	0x0
 1196 00b4 00 00 00 00 		.1byte	0x4
 1197 00b6 09          		.1byte	0x2
 1198 00b7 05          		.1byte	0x3
 1199 00b7 00 00 00 00 		.1byte	0xb9
 1200 00b9 0D          		.4byte	0x196
 1201 00ba 00          		.1byte	0x5
 1202 00ba 04          		.4byte	.LASF48
 1203 00bb 02          		.1byte	0x0
 1204 00bb 03          		.1byte	0x5
 1205 00bc B9          		.4byte	.LASF49
 1206 00bc 00 00 01 96 		.1byte	0x1
 1207 00be 05          		.1byte	0x5
 1208 00bf 00 00 00 00 		.4byte	.LASF50
 1209 00c1 00          		.1byte	0x2
 1210 00c1 05          		.1byte	0x5
 1211 00c2 00 00 00 00 		.4byte	.LASF51
 1212 00c4 01          		.1byte	0x3
 1213 00c4 05          		.1byte	0x0
 1214 00c5 00 00 00 00 		.1byte	0x6
 1215 00c7 02          		.1byte	0x2
 1216 00c7 05          		.1byte	0x3
 1217 00c8 00 00 00 00 		.2byte	0x1a3
 1218 00ca 03          		.4byte	0x1b8
 1219 00ca 00          		.1byte	0x5
 1220 00cb 06          		.4byte	.LASF52
 1221 00cb 02          		.1byte	0x0
 1222 00cc 03          		.1byte	0x5
 1223 00cc 01 A3       		.4byte	.LASF53
 1224 00cd 00 00 01 B8 		.1byte	0x1
 1225 00cf 05          		.1byte	0x5
 1226 00d0 00 00 00 00 		.4byte	.LASF54
 1227 00d2 00          		.1byte	0x2
 1228 00d2 05          		.1byte	0x5
 1229 00d3 00 00 00 00 		.4byte	.LASF55
 1230 00d5 01          		.1byte	0x3
 1231 00d5 05          		.1byte	0x0
 1232 00d6 00 00 00 00 		.1byte	0x7
 1233 00d8 02          		.1byte	0x2
 1234 00d8 05          		.1byte	0x7
 1235 00d9 00 00 00 00 		.1byte	0x3
 1236 00db 03          		.4byte	.LASF56
 1237 00db 00          		.1byte	0x4
 1238 00dc 07          		.1byte	0x1f
 1239 00dc 02          		.4byte	0x30
 1240 00dd 07          		.1byte	0x3
 1241 00dd 03          		.4byte	.LASF57
 1242 00de 00 00 00 00 		.1byte	0x4
 1243 00e0 04          		.1byte	0x24
 1244 00e0 1F          		.4byte	0x1d1
 1245 00e1 00 00 00 30 		.1byte	0x8
 1246 00e3 03          		.1byte	0x2
 1247 00e3 00 00 00 00 		.4byte	0x1d7
 1248 00e5 04          		.1byte	0x9
 1249 00e6 24          		.1byte	0x1
 1250 00e6 00 00 01 D1 		.4byte	0x1e3
 1251 00e8 08          		.1byte	0xa
 1252 00e9 02          		.4byte	0x1e3
 1253 00e9 00 00 01 D7 		.1byte	0x0
 1254 00eb 09          		.1byte	0xb
 1255 00ec 01          		.4byte	0x1bb
 1256 00ec 00 00 01 E3 		.1byte	0x4
 1257 00ee 0A          		.1byte	0x2
 1258 00ef 00 00 01 E3 		.1byte	0x5
 1259 00f1 00          		.1byte	0x29
 1260 00f1 0B          		.4byte	0x20f
 1261 00f2 00 00 01 BB 		.1byte	0x5
 1262 00f4 04          		.4byte	.LASF58
 1263 00f4 02          		.1byte	0x0
 1264 00f5 05          		.1byte	0x5
 1265 00f5 29          		.4byte	.LASF59
 1266 00f6 00 00 02 0F 		.1byte	0x1
 1267 00f8 05          		.1byte	0x5
 1268 00f8 00 00 00 00 		.4byte	.LASF60
 1269 00fa 00          		.1byte	0x2
 1270 00fb 05          		.1byte	0x5
 1271 00fb 00 00 00 00 		.4byte	.LASF61
 1272 00fd 01          		.1byte	0x3
 1273 00fe 05          		.1byte	0x5
 1274 00fe 00 00 00 00 		.4byte	.LASF62
 1275 0100 02          		.1byte	0x4
 1276 0101 05          		.1byte	0x0
 1277 0101 00 00 00 00 		.1byte	0x3
 1278 0103 03          		.4byte	.LASF63
 1279 0104 05          		.1byte	0x5
 1280 0104 00 00 00 00 		.1byte	0x39
 1281 0106 04          		.4byte	0x1e8
 1282 0107 00          		.1byte	0xc
 1283 0107 03          		.1byte	0x8
 1284 0108 00 00 00 00 		.1byte	0x5
 1285 010a 05          		.1byte	0x3c
 1286 010a 39          		.4byte	0x25b
 1287 010b 00 00 01 E8 		.1byte	0xd
 1288 010d 0C          		.4byte	.LASF64
 1289 010d 08          		.1byte	0x5
 1290 010e 05          		.1byte	0x40
 1291 010e 3C          		.4byte	0x1bb
 1292 010f 00 00 02 5B 		.1byte	0x2
 1293 0111 0D          		.1byte	0x23
 1294 0111 00 00 00 00 		.1byte	0x0
 1295 0113 05          		.1byte	0xd
 1296 0114 40          		.4byte	.LASF65
 1297 0114 00 00 01 BB 		.1byte	0x5
 1298 0116 02          		.1byte	0x43
 1299 0117 23          		.4byte	0x20f
 1300 0117 00          		.1byte	0x2
 1301 0118 0D          		.1byte	0x23
 1302 0118 00 00 00 00 		.1byte	0x1
 1303 011a 05          		.1byte	0xd
 1304 011b 43          		.4byte	.LASF66
 1305 011b 00 00 02 0F 		.1byte	0x5
 1306 011d 02          		.1byte	0x49
 1307 011e 23          		.4byte	0x30
 1308 011e 01          		.1byte	0x2
 1309 011f 0D          		.1byte	0x23
 1310 011f 00 00 00 00 		.1byte	0x2
 1311 0121 05          		.1byte	0xd
 1312 0122 49          		.4byte	.LASF67
 1313 0122 00 00 00 30 		.1byte	0x5
 1314 0124 02          		.1byte	0x4d
 1315 0125 23          		.4byte	0x1bb
 1316 0125 02          		.1byte	0x2
 1317 0126 0D          		.1byte	0x23
 1318 0126 00 00 00 00 		.1byte	0x3
 1319 0128 05          		.1byte	0x0
 1320 0129 4D          		.1byte	0x3
 1321 0129 00 00 01 BB 		.4byte	.LASF68
 1322 012b 02          		.1byte	0x5
 1323 012c 23          		.1byte	0x4f
 1324 012c 03          		.4byte	0x21a
 1325 012d 00          		.1byte	0xc
 1326 012d 03          		.1byte	0x2
 1327 012e 00 00 00 00 		.1byte	0x5
 1328 0130 05          		.1byte	0x52
 1329 0130 4F          		.4byte	0x27d
 1330 0131 00 00 02 1A 		.1byte	0xd
 1331 0133 0C          		.4byte	.LASF56
 1332 0133 02          		.1byte	0x5
 1333 0134 05          		.1byte	0x53
 1334 0134 52          		.4byte	0x30
 1335 0135 00 00 02 7D 		.1byte	0x2
 1336 0137 0D          		.1byte	0x23
 1337 0137 00 00 00 00 		.1byte	0x0
 1338 0139 05          		.1byte	0x0
 1339 013a 53          		.1byte	0x3
 1340 013a 00 00 00 30 		.4byte	.LASF69
 1341 013c 02          		.1byte	0x5
 1342 013d 23          		.1byte	0x54
 1343 013d 00          		.4byte	0x266
 1344 013e 00          		.1byte	0x4
 1345 013e 03          		.1byte	0x2
 1346 013f 00 00 00 00 		.1byte	0x6
 1347 0141 05          		.1byte	0x46
 1348 0141 54          		.4byte	0x2d9
 1349 0142 00 00 02 66 		.1byte	0x5
 1350 0144 04          		.4byte	.LASF70
 1351 0144 02          		.1byte	0x0
 1352 0145 06          		.1byte	0x5
 1353 0145 46          		.4byte	.LASF71
 1354 0146 00 00 02 D9 		.1byte	0x1
 1355 0148 05          		.1byte	0x5
 1356 0148 00 00 00 00 		.4byte	.LASF72
 1357 014a 00          		.1byte	0x2
 1358 014b 05          		.1byte	0x5
 1359 014b 00 00 00 00 		.4byte	.LASF73
 1360 014d 01          		.1byte	0x3
 1361 014e 05          		.1byte	0x5
 1362 014e 00 00 00 00 		.4byte	.LASF74
 1363 0150 02          		.1byte	0x4
 1364 0151 05          		.1byte	0x5
 1365 0151 00 00 00 00 		.4byte	.LASF75
 1366 0153 03          		.1byte	0x5
 1367 0154 05          		.1byte	0x5
 1368 0154 00 00 00 00 		.4byte	.LASF76
 1369 0156 04          		.1byte	0x6
 1370 0157 05          		.1byte	0x5
 1371 0157 00 00 00 00 		.4byte	.LASF77
 1372 0159 05          		.1byte	0x7
 1373 015a 05          		.1byte	0x5
 1374 015a 00 00 00 00 		.4byte	.LASF78
 1375 015c 06          		.1byte	0x8
 1376 015d 05          		.1byte	0x5
 1377 015d 00 00 00 00 		.4byte	.LASF79
 1378 015f 07          		.1byte	0x9
 1379 0160 05          		.1byte	0x5
 1380 0160 00 00 00 00 		.4byte	.LASF80
 1381 0162 08          		.1byte	0xa
 1382 0163 05          		.1byte	0x5
 1383 0163 00 00 00 00 		.4byte	.LASF81
 1384 0165 09          		.1byte	0xb
 1385 0166 05          		.1byte	0x0
 1386 0166 00 00 00 00 		.1byte	0xe
 1387 0168 0A          		.1byte	0x1
 1388 0169 05          		.4byte	.LASF91
 1389 0169 00 00 00 00 		.1byte	0x1
 1390 016b 0B          		.2byte	0x227
 1391 016c 00          		.1byte	0x1
 1392 016c 0E          		.4byte	.LFB9
 1393 016d 01          		.4byte	.LFE9
 1394 016d 00 00 00 00 		.1byte	0x1
 1395 016f 01          		.1byte	0x55
 1396 0170 02 27       		.1byte	0xf
 1397 0171 01          		.1byte	0x1
 1398 0171 00 00 00 00 		.4byte	.LASF82
 1399 0173 00 00 00 00 		.1byte	0x1
 1400 0175 01          		.2byte	0x26e
 1401 0176 55          		.1byte	0x1
 1402 0176 0F          		.4byte	0x42
 1403 0177 01          		.4byte	.LFB14
 1404 0177 00 00 00 00 		.4byte	.LFE14
 1405 0179 01          		.1byte	0x1
 1406 017a 02 6E       		.1byte	0x55
 1407 017b 01          		.4byte	0x314
 1408 017b 00 00 00 42 		.1byte	0x10
 1409 017d 00 00 00 00 		.ascii "d\000"
 1410 017f 00 00 00 00 		.1byte	0x1
 1411 0181 01          		.2byte	0x270
 1412 0182 55          		.4byte	0x42
 1413 0182 00 00 03 14 		.1byte	0x0
 1414 0184 10          		.1byte	0xf
 1415 0185 64 00       		.1byte	0x1
 1416 0186 01          		.4byte	.LASF83
 1417 0186 02 70       		.1byte	0x1
 1418 0187 00 00 00 42 		.2byte	0x275
 1419 0189 00          		.1byte	0x1
 1420 018a 0F          		.4byte	0x42
 1421 018a 01          		.4byte	.LFB15
 1422 018b 00 00 00 00 		.4byte	.LFE15
 1423 018d 01          		.1byte	0x1
 1424 018d 02 75       		.1byte	0x55
 1425 018e 01          		.4byte	0x33b
 1426 018f 00 00 00 42 		.1byte	0x10
 1427 0191 00 00 00 00 		.ascii "d\000"
 1428 0193 00 00 00 00 		.1byte	0x1
 1429 0195 01          		.2byte	0x277
 1430 0195 55          		.4byte	0x42
 1431 0196 00 00 03 3B 		.1byte	0x0
 1432 0198 10          		.1byte	0x11
 1433 0198 64 00       		.1byte	0x1
 1434 0199 01          		.4byte	.LASF84
 1435 019a 02 77       		.1byte	0x1
 1436 019b 00 00 00 42 		.2byte	0x267
 1437 019d 00          		.1byte	0x1
 1438 019d 11          		.4byte	.LFB13
 1439 019e 01          		.4byte	.LFE13
 1440 019e 00 00 00 00 		.1byte	0x1
 1441 01a0 01          		.1byte	0x55
 1442 01a1 02 67       		.4byte	0x363
 1443 01a2 01          		.1byte	0x12
 1444 01a2 00 00 00 00 		.ascii "id\000"
 1445 01a4 00 00 00 00 		.1byte	0x1
 1446 01a6 01          		.2byte	0x267
 1447 01a7 55          		.4byte	0x1e3
 1448 01a7 00 00 03 63 		.4byte	.LLST4
 1449 01a9 12          		.1byte	0x0
 1450 01aa 69 64 00    		.1byte	0x13
 1451 01ab 01          		.1byte	0x1
 1452 01ac 02 67       		.4byte	.LASF85
 1453 01ad 00 00 01 E3 		.1byte	0x1
 1454 01af 00 00 00 00 		.2byte	0x252
 1455 01b1 00          		.1byte	0x1
 1456 01b1 13          		.4byte	.LFB11
 1457 01b2 01          		.4byte	.LFE11
 1458 01b2 00 00 00 00 		.4byte	.LLST5
 1459 01b4 01          		.4byte	0x3ae
 1460 01b5 02 52       		.1byte	0x14
 1461 01b6 01          		.4byte	.LASF86
 1462 01b6 00 00 00 00 		.1byte	0x1
 1463 01b8 00 00 00 00 		.2byte	0x251
 1464 01ba 00 00 00 00 		.4byte	0x42
 1465 01bc 00 00 03 AE 		.4byte	.LLST6
 1466 01be 14          		.1byte	0x14
 1467 01bf 00 00 00 00 		.4byte	.LASF87
 1468 01c1 01          		.1byte	0x1
 1469 01c1 02 51       		.2byte	0x251
 1470 01c2 00 00 00 42 		.4byte	0x1c6
 1471 01c4 00 00 00 00 		.4byte	.LLST7
 1472 01c6 14          		.1byte	0x15
 1473 01c7 00 00 00 00 		.ascii "tId\000"
 1474 01c9 01          		.1byte	0x1
 1475 01c9 02 51       		.2byte	0x254
 1476 01ca 00 00 01 C6 		.4byte	0x1e3
 1477 01cc 00 00 00 00 		.4byte	.LLST8
 1478 01ce 15          		.1byte	0x0
 1479 01cf 74 49 64 00 		.1byte	0x13
 1480 01d1 01          		.1byte	0x1
 1481 01d1 02 54       		.4byte	.LASF88
 1482 01d2 00 00 01 E3 		.1byte	0x1
 1483 01d4 00 00 00 00 		.2byte	0x25e
 1484 01d6 00          		.1byte	0x1
 1485 01d7 13          		.4byte	.LFB12
 1486 01d7 01          		.4byte	.LFE12
 1487 01d8 00 00 00 00 		.4byte	.LLST9
 1488 01da 01          		.4byte	0x3d8
 1489 01da 02 5E       		.1byte	0x12
 1490 01db 01          		.ascii "id\000"
 1491 01dc 00 00 00 00 		.1byte	0x1
 1492 01de 00 00 00 00 		.2byte	0x25e
 1493 01e0 00 00 00 00 		.4byte	0x1e3
 1494 01e2 00 00 03 D8 		.4byte	.LLST10
 1495 01e4 12          		.1byte	0x0
 1496 01e4 69 64 00    		.1byte	0x13
 1497 01e6 01          		.1byte	0x1
 1498 01e6 02 5E       		.4byte	.LASF89
 1499 01e7 00 00 01 E3 		.1byte	0x1
 1500 01e9 00 00 00 00 		.2byte	0x239
 1501 01eb 00          		.1byte	0x1
 1502 01ec 13          		.4byte	.LFB10
 1503 01ec 01          		.4byte	.LFE10
 1504 01ed 00 00 00 00 		.4byte	.LLST11
 1505 01ef 01          		.4byte	0x403
 1506 01ef 02 39       		.1byte	0x14
 1507 01f0 01          		.4byte	.LASF90
 1508 01f1 00 00 00 00 		.1byte	0x1
 1509 01f3 00 00 00 00 		.2byte	0x238
 1510 01f5 00 00 00 00 		.4byte	0x42
 1511 01f7 00 00 04 03 		.4byte	.LLST12
 1512 01f9 14          		.1byte	0x0
 1513 01f9 00 00 00 00 		.1byte	0x16
 1514 01fb 01          		.1byte	0x1
 1515 01fc 02 38       		.4byte	.LASF92
 1516 01fd 00 00 00 42 		.1byte	0x1
 1517 01ff 00 00 00 00 		.2byte	0x20e
 1518 0201 00          		.1byte	0x1
 1519 0201 16          		.4byte	.LFB8
 1520 0202 01          		.4byte	.LFE8
 1521 0202 00 00 00 00 		.4byte	.LLST13
 1522 0204 01          		.1byte	0x16
 1523 0205 02 0E       		.1byte	0x1
 1524 0206 01          		.4byte	.LASF93
 1525 0206 00 00 00 00 		.1byte	0x1
 1526 0208 00 00 00 00 		.2byte	0x145
 1527 020a 00 00 00 00 		.1byte	0x1
 1528 020c 16          		.4byte	.LFB4
 1529 020d 01          		.4byte	.LFE4
 1530 020d 00 00 00 00 		.4byte	.LLST14
 1531 020f 01          		.1byte	0x13
 1532 0210 01 45       		.1byte	0x1
 1533 0211 01          		.4byte	.LASF94
 1534 0211 00 00 00 00 		.1byte	0x1
 1535 0213 00 00 00 00 		.2byte	0x1c9
 1536 0215 00 00 00 00 		.1byte	0x1
 1537 0217 13          		.4byte	.LFB7
 1538 0218 01          		.4byte	.LFE7
 1539 0218 00 00 00 00 		.4byte	.LLST15
 1540 021a 01          		.4byte	0x466
 1541 021b 01 C9       		.1byte	0x14
 1542 021c 01          		.4byte	.LASF90
 1543 021c 00 00 00 00 		.1byte	0x1
 1544 021e 00 00 00 00 		.2byte	0x1c8
 1545 0220 00 00 00 00 		.4byte	0x42
 1546 0222 00 00 04 66 		.4byte	.LLST16
 1547 0224 14          		.1byte	0x17
 1548 0225 00 00 00 00 		.4byte	.LASF95
 1549 0227 01          		.1byte	0x1
 1550 0227 01 C8       		.2byte	0x1cb
 1551 0228 00 00 00 42 		.4byte	0x42
 1552 022a 00 00 00 00 		.1byte	0x0
 1553 022c 17          		.1byte	0x18
 1554 022d 00 00 00 00 		.1byte	0x1
 1555 022f 01          		.4byte	.LASF104
 1556 022f 01 CB       		.1byte	0x1
 1557 0230 00 00 00 42 		.2byte	0x1b0
 1558 0232 00          		.1byte	0x1
 1559 0233 18          		.4byte	0x42
 1560 0233 01          		.4byte	.LFB6
 1561 0234 00 00 00 00 		.4byte	.LFE6
 1562 0236 01          		.1byte	0x1
 1563 0236 01 B0       		.1byte	0x55
 1564 0237 01          		.1byte	0x13
 1565 0238 00 00 00 42 		.1byte	0x1
 1566 023a 00 00 00 00 		.4byte	.LASF96
 1567 023c 00 00 00 00 		.1byte	0x1
 1568 023e 01          		.2byte	0x15d
 1569 023e 55          		.1byte	0x1
 1570 023f 13          		.4byte	.LFB5
 1571 023f 01          		.4byte	.LFE5
 1572 0240 00 00 00 00 		.4byte	.LLST18
 1573 0242 01          		.4byte	0x4be
 1574 0242 01 5D       		.1byte	0x14
 1575 0243 01          		.4byte	.LASF65
 1576 0244 00 00 00 00 		.1byte	0x1
 1577 0246 00 00 00 00 		.2byte	0x15c
 1578 0248 00 00 00 00 		.4byte	0x20f
 1579 024a 00 00 04 BE 		.4byte	.LLST19
 1580 024c 14          		.1byte	0x19
 1581 024c 00 00 00 00 		.4byte	.LASF97
 1582 024e 01          		.1byte	0x1
 1583 024f 01 5C       		.2byte	0x15f
 1584 0250 00 00 02 0F 		.4byte	0x42
 1585 0252 00 00 00 00 		.1byte	0x8
 1586 0254 19          		.1byte	0x76
 1587 0254 00 00 00 00 		.1byte	0x3
 1588 0256 01          		.1byte	0x93
 1589 0257 01 5F       		.1byte	0x1
 1590 0258 00 00 00 42 		.1byte	0x76
 1591 025a 08          		.1byte	0x4
 1592 025a 76          		.1byte	0x93
 1593 025b 03          		.1byte	0x1
 1594 025b 93          		.1byte	0x0
 1595 025c 01          		.1byte	0x1a
 1596 025c 76          		.4byte	.LASF105
 1597 025d 04          		.1byte	0x1
 1598 025d 93          		.1byte	0x85
 1599 025e 01          		.1byte	0x1
 1600 025e 00          		.4byte	.LFB2
 1601 025f 1A          		.4byte	.LFE2
 1602 025f 00 00 00 00 		.4byte	.LLST20
 1603 0261 01          		.4byte	0x4f5
 1604 0262 85          		.1byte	0x1b
 1605 0262 01          		.ascii "tid\000"
 1606 0263 00 00 00 00 		.1byte	0x1
 1607 0265 00 00 00 00 		.1byte	0x84
 1608 0267 00 00 00 00 		.4byte	0x1bb
 1609 0269 00 00 04 F5 		.4byte	.LLST21
 1610 026b 1B          		.1byte	0x1c
 1611 026b 74 69 64 00 		.4byte	.LASF97
 1612 026d 01          		.1byte	0x1
 1613 026e 84          		.1byte	0x86
 1614 026e 00 00 01 BB 		.4byte	0x42
 1615 0270 00 00 00 00 		.4byte	.LLST22
 1616 0272 1C          		.1byte	0x0
 1617 0273 00 00 00 00 		.1byte	0x16
 1618 0275 01          		.1byte	0x1
 1619 0275 86          		.4byte	.LASF98
 1620 0276 00 00 00 42 		.1byte	0x1
 1621 0278 00 00 00 00 		.2byte	0x103
 1622 027a 00          		.1byte	0x1
 1623 027a 16          		.4byte	.LFB3
 1624 027b 01          		.4byte	.LFE3
 1625 027b 00 00 00 00 		.4byte	.LLST23
 1626 027d 01          		.1byte	0x1d
 1627 027e 01 03       		.4byte	.LASF99
 1628 027f 01          		.1byte	0x1
 1629 027f 00 00 00 00 		.1byte	0x6d
 1630 0281 00 00 00 00 		.4byte	0x25b
 1631 0283 00 00 00 00 		.1byte	0x1
 1632 0285 1D          		.1byte	0x5
 1633 0286 00 00 00 00 		.1byte	0x3
 1634 0288 01          		.4byte	g_app_hw_data
 1635 0288 6D          		.1byte	0x1d
 1636 0289 00 00 02 5B 		.4byte	.LASF100
 1637 028b 01          		.1byte	0x1
 1638 028b 05          		.1byte	0x70
 1639 028c 03          		.4byte	0x27d
 1640 028c 00 00 00 00 		.1byte	0x1
 1641 028e 1D          		.1byte	0x5
 1642 028f 00 00 00 00 		.1byte	0x3
 1643 0291 01          		.4byte	g_dimmer_data
 1644 0291 70          		.1byte	0x0
 1645 0292 00 00 02 7D 		.section	.debug_abbrev
 1646 0294 01          		.1byte	0x1
 1647 0294 05          		.1byte	0x11
 1648 0295 03          		.1byte	0x1
 1649 0295 00 00 00 00 		.1byte	0x25
 1650 0297 00          		.1byte	0xe
 1651                 		.1byte	0x13
 1652 0000 01          		.1byte	0xb
 1653 0000 11          		.1byte	0x3
 1654 0001 01          		.1byte	0xe
 1655 0001 25          		.1byte	0x1b
 1656 0002 0E          		.1byte	0xe
 1657 0002 13          		.1byte	0x11
 1658 0003 0B          		.1byte	0x1
 1659 0003 03          		.1byte	0x52
 1660 0004 0E          		.1byte	0x1
 1661 0004 1B          		.1byte	0x55
 1662 0005 0E          		.1byte	0x6
 1663 0005 11          		.1byte	0x10
 1664 0006 01          		.1byte	0x6
 1665 0006 52          		.1byte	0x0
 1666 0007 01          		.1byte	0x0
 1667 0007 55          		.1byte	0x2
 1668 0008 06          		.1byte	0x24
 1669 0008 10          		.1byte	0x0
 1670 0009 06          		.1byte	0xb
 1671 0009 00          		.1byte	0xb
 1672 000a 00          		.1byte	0x3e
 1673 000a 02          		.1byte	0xb
 1674 000b 24          		.1byte	0x3
 1675 000b 00          		.1byte	0xe
 1676 000c 0B          		.1byte	0x0
 1677 000c 0B          		.1byte	0x0
 1678 000d 3E          		.1byte	0x3
 1679 000d 0B          		.1byte	0x16
 1680 000e 03          		.1byte	0x0
 1681 000e 0E          		.1byte	0x3
 1682 000f 00          		.1byte	0xe
 1683 000f 00          		.1byte	0x3a
 1684 0010 03          		.1byte	0xb
 1685 0010 16          		.1byte	0x3b
 1686 0011 00          		.1byte	0xb
 1687 0011 03          		.1byte	0x49
 1688 0012 0E          		.1byte	0x13
 1689 0012 3A          		.1byte	0x0
 1690 0013 0B          		.1byte	0x0
 1691 0013 3B          		.1byte	0x4
 1692 0014 0B          		.1byte	0x4
 1693 0014 49          		.1byte	0x1
 1694 0015 13          		.1byte	0xb
 1695 0015 00          		.1byte	0xb
 1696 0016 00          		.1byte	0x3a
 1697 0016 04          		.1byte	0xb
 1698 0017 04          		.1byte	0x3b
 1699 0017 01          		.1byte	0xb
 1700 0018 0B          		.1byte	0x1
 1701 0018 0B          		.1byte	0x13
 1702 0019 3A          		.1byte	0x0
 1703 0019 0B          		.1byte	0x0
 1704 001a 3B          		.1byte	0x5
 1705 001a 0B          		.1byte	0x28
 1706 001b 01          		.1byte	0x0
 1707 001b 13          		.1byte	0x3
 1708 001c 00          		.1byte	0xe
 1709 001c 00          		.1byte	0x1c
 1710 001d 05          		.1byte	0xd
 1711 001d 28          		.1byte	0x0
 1712 001e 00          		.1byte	0x0
 1713 001e 03          		.1byte	0x6
 1714 001f 0E          		.1byte	0x4
 1715 001f 1C          		.1byte	0x1
 1716 0020 0D          		.1byte	0xb
 1717 0020 00          		.1byte	0xb
 1718 0021 00          		.1byte	0x3a
 1719 0021 06          		.1byte	0xb
 1720 0022 04          		.1byte	0x3b
 1721 0022 01          		.1byte	0x5
 1722 0023 0B          		.1byte	0x1
 1723 0023 0B          		.1byte	0x13
 1724 0024 3A          		.1byte	0x0
 1725 0024 0B          		.1byte	0x0
 1726 0025 3B          		.1byte	0x7
 1727 0025 05          		.1byte	0x24
 1728 0026 01          		.1byte	0x0
 1729 0026 13          		.1byte	0xb
 1730 0027 00          		.1byte	0xb
 1731 0027 00          		.1byte	0x3e
 1732 0028 07          		.1byte	0xb
 1733 0028 24          		.1byte	0x0
 1734 0029 00          		.1byte	0x0
 1735 0029 0B          		.1byte	0x8
 1736 002a 0B          		.1byte	0xf
 1737 002a 3E          		.1byte	0x0
 1738 002b 0B          		.1byte	0xb
 1739 002b 00          		.1byte	0xb
 1740 002c 00          		.1byte	0x49
 1741 002c 08          		.1byte	0x13
 1742 002d 0F          		.1byte	0x0
 1743 002d 00          		.1byte	0x0
 1744 002e 0B          		.1byte	0x9
 1745 002e 0B          		.1byte	0x15
 1746 002f 49          		.1byte	0x1
 1747 002f 13          		.1byte	0x27
 1748 0030 00          		.1byte	0xc
 1749 0030 00          		.1byte	0x1
 1750 0031 09          		.1byte	0x13
 1751 0031 15          		.1byte	0x0
 1752 0032 01          		.1byte	0x0
 1753 0032 27          		.1byte	0xa
 1754 0033 0C          		.1byte	0x5
 1755 0033 01          		.1byte	0x0
 1756 0034 13          		.1byte	0x49
 1757 0034 00          		.1byte	0x13
 1758 0035 00          		.1byte	0x0
 1759 0035 0A          		.1byte	0x0
 1760 0036 05          		.1byte	0xb
 1761 0036 00          		.1byte	0x26
 1762 0037 49          		.1byte	0x0
 1763 0037 13          		.1byte	0x49
 1764 0038 00          		.1byte	0x13
 1765 0038 00          		.1byte	0x0
 1766 0039 0B          		.1byte	0x0
 1767 0039 26          		.1byte	0xc
 1768 003a 00          		.1byte	0x13
 1769 003a 49          		.1byte	0x1
 1770 003b 13          		.1byte	0xb
 1771 003b 00          		.1byte	0xb
 1772 003c 00          		.1byte	0x3a
 1773 003c 0C          		.1byte	0xb
 1774 003d 13          		.1byte	0x3b
 1775 003d 01          		.1byte	0xb
 1776 003e 0B          		.1byte	0x1
 1777 003e 0B          		.1byte	0x13
 1778 003f 3A          		.1byte	0x0
 1779 003f 0B          		.1byte	0x0
 1780 0040 3B          		.1byte	0xd
 1781 0040 0B          		.1byte	0xd
 1782 0041 01          		.1byte	0x0
 1783 0041 13          		.1byte	0x3
 1784 0042 00          		.1byte	0xe
 1785 0042 00          		.1byte	0x3a
 1786 0043 0D          		.1byte	0xb
 1787 0043 0D          		.1byte	0x3b
 1788 0044 00          		.1byte	0xb
 1789 0044 03          		.1byte	0x49
 1790 0045 0E          		.1byte	0x13
 1791 0045 3A          		.1byte	0x38
 1792 0046 0B          		.1byte	0xa
 1793 0046 3B          		.1byte	0x0
 1794 0047 0B          		.1byte	0x0
 1795 0047 49          		.1byte	0xe
 1796 0048 13          		.1byte	0x2e
 1797 0048 38          		.1byte	0x0
 1798 0049 0A          		.1byte	0x3f
 1799 0049 00          		.1byte	0xc
 1800 004a 00          		.1byte	0x3
 1801 004a 0E          		.1byte	0xe
 1802 004b 2E          		.1byte	0x3a
 1803 004b 00          		.1byte	0xb
 1804 004c 3F          		.1byte	0x3b
 1805 004c 0C          		.1byte	0x5
 1806 004d 03          		.1byte	0x27
 1807 004d 0E          		.1byte	0xc
 1808 004e 3A          		.1byte	0x11
 1809 004e 0B          		.1byte	0x1
 1810 004f 3B          		.1byte	0x12
 1811 004f 05          		.1byte	0x1
 1812 0050 27          		.1byte	0x40
 1813 0050 0C          		.1byte	0xa
 1814 0051 11          		.1byte	0x0
 1815 0051 01          		.1byte	0x0
 1816 0052 12          		.1byte	0xf
 1817 0052 01          		.1byte	0x2e
 1818 0053 40          		.1byte	0x1
 1819 0053 0A          		.1byte	0x3f
 1820 0054 00          		.1byte	0xc
 1821 0054 00          		.1byte	0x3
 1822 0055 0F          		.1byte	0xe
 1823 0055 2E          		.1byte	0x3a
 1824 0056 01          		.1byte	0xb
 1825 0056 3F          		.1byte	0x3b
 1826 0057 0C          		.1byte	0x5
 1827 0057 03          		.1byte	0x27
 1828 0058 0E          		.1byte	0xc
 1829 0058 3A          		.1byte	0x49
 1830 0059 0B          		.1byte	0x13
 1831 0059 3B          		.1byte	0x11
 1832 005a 05          		.1byte	0x1
 1833 005a 27          		.1byte	0x12
 1834 005b 0C          		.1byte	0x1
 1835 005b 49          		.1byte	0x40
 1836 005c 13          		.1byte	0xa
 1837 005c 11          		.1byte	0x1
 1838 005d 01          		.1byte	0x13
 1839 005d 12          		.1byte	0x0
 1840 005e 01          		.1byte	0x0
 1841 005e 40          		.1byte	0x10
 1842 005f 0A          		.1byte	0x34
 1843 005f 01          		.1byte	0x0
 1844 0060 13          		.1byte	0x3
 1845 0060 00          		.1byte	0x8
 1846 0061 00          		.1byte	0x3a
 1847 0061 10          		.1byte	0xb
 1848 0062 34          		.1byte	0x3b
 1849 0062 00          		.1byte	0x5
 1850 0063 03          		.1byte	0x49
 1851 0063 08          		.1byte	0x13
 1852 0064 3A          		.1byte	0x0
 1853 0064 0B          		.1byte	0x0
 1854 0065 3B          		.1byte	0x11
 1855 0065 05          		.1byte	0x2e
 1856 0066 49          		.1byte	0x1
 1857 0066 13          		.1byte	0x3f
 1858 0067 00          		.1byte	0xc
 1859 0067 00          		.1byte	0x3
 1860 0068 11          		.1byte	0xe
 1861 0068 2E          		.1byte	0x3a
 1862 0069 01          		.1byte	0xb
 1863 0069 3F          		.1byte	0x3b
 1864 006a 0C          		.1byte	0x5
 1865 006a 03          		.1byte	0x27
 1866 006b 0E          		.1byte	0xc
 1867 006b 3A          		.1byte	0x11
 1868 006c 0B          		.1byte	0x1
 1869 006c 3B          		.1byte	0x12
 1870 006d 05          		.1byte	0x1
 1871 006d 27          		.1byte	0x40
 1872 006e 0C          		.1byte	0xa
 1873 006e 11          		.1byte	0x1
 1874 006f 01          		.1byte	0x13
 1875 006f 12          		.1byte	0x0
 1876 0070 01          		.1byte	0x0
 1877 0070 40          		.1byte	0x12
 1878 0071 0A          		.1byte	0x5
 1879 0071 01          		.1byte	0x0
 1880 0072 13          		.1byte	0x3
 1881 0072 00          		.1byte	0x8
 1882 0073 00          		.1byte	0x3a
 1883 0073 12          		.1byte	0xb
 1884 0074 05          		.1byte	0x3b
 1885 0074 00          		.1byte	0x5
 1886 0075 03          		.1byte	0x49
 1887 0075 08          		.1byte	0x13
 1888 0076 3A          		.1byte	0x2
 1889 0076 0B          		.1byte	0x6
 1890 0077 3B          		.1byte	0x0
 1891 0077 05          		.1byte	0x0
 1892 0078 49          		.1byte	0x13
 1893 0078 13          		.1byte	0x2e
 1894 0079 02          		.1byte	0x1
 1895 0079 06          		.1byte	0x3f
 1896 007a 00          		.1byte	0xc
 1897 007a 00          		.1byte	0x3
 1898 007b 13          		.1byte	0xe
 1899 007b 2E          		.1byte	0x3a
 1900 007c 01          		.1byte	0xb
 1901 007c 3F          		.1byte	0x3b
 1902 007d 0C          		.1byte	0x5
 1903 007d 03          		.1byte	0x27
 1904 007e 0E          		.1byte	0xc
 1905 007e 3A          		.1byte	0x11
 1906 007f 0B          		.1byte	0x1
 1907 007f 3B          		.1byte	0x12
 1908 0080 05          		.1byte	0x1
 1909 0080 27          		.1byte	0x40
 1910 0081 0C          		.1byte	0x6
 1911 0081 11          		.1byte	0x1
 1912 0082 01          		.1byte	0x13
 1913 0082 12          		.1byte	0x0
 1914 0083 01          		.1byte	0x0
 1915 0083 40          		.1byte	0x14
 1916 0084 06          		.1byte	0x5
 1917 0084 01          		.1byte	0x0
 1918 0085 13          		.1byte	0x3
 1919 0085 00          		.1byte	0xe
 1920 0086 00          		.1byte	0x3a
 1921 0086 14          		.1byte	0xb
 1922 0087 05          		.1byte	0x3b
 1923 0087 00          		.1byte	0x5
 1924 0088 03          		.1byte	0x49
 1925 0088 0E          		.1byte	0x13
 1926 0089 3A          		.1byte	0x2
 1927 0089 0B          		.1byte	0x6
 1928 008a 3B          		.1byte	0x0
 1929 008a 05          		.1byte	0x0
 1930 008b 49          		.1byte	0x15
 1931 008b 13          		.1byte	0x34
 1932 008c 02          		.1byte	0x0
 1933 008c 06          		.1byte	0x3
 1934 008d 00          		.1byte	0x8
 1935 008d 00          		.1byte	0x3a
 1936 008e 15          		.1byte	0xb
 1937 008e 34          		.1byte	0x3b
 1938 008f 00          		.1byte	0x5
 1939 008f 03          		.1byte	0x49
 1940 0090 08          		.1byte	0x13
 1941 0090 3A          		.1byte	0x2
 1942 0091 0B          		.1byte	0x6
 1943 0091 3B          		.1byte	0x0
 1944 0092 05          		.1byte	0x0
 1945 0092 49          		.1byte	0x16
 1946 0093 13          		.1byte	0x2e
 1947 0093 02          		.1byte	0x0
 1948 0094 06          		.1byte	0x3f
 1949 0094 00          		.1byte	0xc
 1950 0095 00          		.1byte	0x3
 1951 0095 16          		.1byte	0xe
 1952 0096 2E          		.1byte	0x3a
 1953 0096 00          		.1byte	0xb
 1954 0097 3F          		.1byte	0x3b
 1955 0097 0C          		.1byte	0x5
 1956 0098 03          		.1byte	0x27
 1957 0098 0E          		.1byte	0xc
 1958 0099 3A          		.1byte	0x11
 1959 0099 0B          		.1byte	0x1
 1960 009a 3B          		.1byte	0x12
 1961 009a 05          		.1byte	0x1
 1962 009b 27          		.1byte	0x40
 1963 009b 0C          		.1byte	0x6
 1964 009c 11          		.1byte	0x0
 1965 009c 01          		.1byte	0x0
 1966 009d 12          		.1byte	0x17
 1967 009d 01          		.1byte	0x34
 1968 009e 40          		.1byte	0x0
 1969 009e 06          		.1byte	0x3
 1970 009f 00          		.1byte	0xe
 1971 009f 00          		.1byte	0x3a
 1972 00a0 17          		.1byte	0xb
 1973 00a0 34          		.1byte	0x3b
 1974 00a1 00          		.1byte	0x5
 1975 00a1 03          		.1byte	0x49
 1976 00a2 0E          		.1byte	0x13
 1977 00a2 3A          		.1byte	0x0
 1978 00a3 0B          		.1byte	0x0
 1979 00a3 3B          		.1byte	0x18
 1980 00a4 05          		.1byte	0x2e
 1981 00a4 49          		.1byte	0x0
 1982 00a5 13          		.1byte	0x3f
 1983 00a5 00          		.1byte	0xc
 1984 00a6 00          		.1byte	0x3
 1985 00a6 18          		.1byte	0xe
 1986 00a7 2E          		.1byte	0x3a
 1987 00a7 00          		.1byte	0xb
 1988 00a8 3F          		.1byte	0x3b
 1989 00a8 0C          		.1byte	0x5
 1990 00a9 03          		.1byte	0x27
 1991 00a9 0E          		.1byte	0xc
 1992 00aa 3A          		.1byte	0x49
 1993 00aa 0B          		.1byte	0x13
 1994 00ab 3B          		.1byte	0x11
 1995 00ab 05          		.1byte	0x1
 1996 00ac 27          		.1byte	0x12
 1997 00ac 0C          		.1byte	0x1
 1998 00ad 49          		.1byte	0x40
 1999 00ad 13          		.1byte	0xa
 2000 00ae 11          		.1byte	0x0
 2001 00ae 01          		.1byte	0x0
 2002 00af 12          		.1byte	0x19
 2003 00af 01          		.1byte	0x34
 2004 00b0 40          		.1byte	0x0
 2005 00b0 0A          		.1byte	0x3
 2006 00b1 00          		.1byte	0xe
 2007 00b1 00          		.1byte	0x3a
 2008 00b2 19          		.1byte	0xb
 2009 00b2 34          		.1byte	0x3b
 2010 00b3 00          		.1byte	0x5
 2011 00b3 03          		.1byte	0x49
 2012 00b4 0E          		.1byte	0x13
 2013 00b4 3A          		.1byte	0x2
 2014 00b5 0B          		.1byte	0xa
 2015 00b5 3B          		.1byte	0x0
 2016 00b6 05          		.1byte	0x0
 2017 00b6 49          		.1byte	0x1a
 2018 00b7 13          		.1byte	0x2e
 2019 00b7 02          		.1byte	0x1
 2020 00b8 0A          		.1byte	0x3
 2021 00b8 00          		.1byte	0xe
 2022 00b9 00          		.1byte	0x3a
 2023 00b9 1A          		.1byte	0xb
 2024 00ba 2E          		.1byte	0x3b
 2025 00ba 01          		.1byte	0xb
 2026 00bb 03          		.1byte	0x27
 2027 00bb 0E          		.1byte	0xc
 2028 00bc 3A          		.1byte	0x11
 2029 00bc 0B          		.1byte	0x1
 2030 00bd 3B          		.1byte	0x12
 2031 00bd 0B          		.1byte	0x1
 2032 00be 27          		.1byte	0x40
 2033 00be 0C          		.1byte	0x6
 2034 00bf 11          		.1byte	0x1
 2035 00bf 01          		.1byte	0x13
 2036 00c0 12          		.1byte	0x0
 2037 00c0 01          		.1byte	0x0
 2038 00c1 40          		.1byte	0x1b
 2039 00c1 06          		.1byte	0x5
 2040 00c2 01          		.1byte	0x0
 2041 00c2 13          		.1byte	0x3
 2042 00c3 00          		.1byte	0x8
 2043 00c3 00          		.1byte	0x3a
 2044 00c4 1B          		.1byte	0xb
 2045 00c4 05          		.1byte	0x3b
 2046 00c5 00          		.1byte	0xb
 2047 00c5 03          		.1byte	0x49
 2048 00c6 08          		.1byte	0x13
 2049 00c6 3A          		.1byte	0x2
 2050 00c7 0B          		.1byte	0x6
 2051 00c7 3B          		.1byte	0x0
 2052 00c8 0B          		.1byte	0x0
 2053 00c8 49          		.1byte	0x1c
 2054 00c9 13          		.1byte	0x34
 2055 00c9 02          		.1byte	0x0
 2056 00ca 06          		.1byte	0x3
 2057 00ca 00          		.1byte	0xe
 2058 00cb 00          		.1byte	0x3a
 2059 00cb 1C          		.1byte	0xb
 2060 00cc 34          		.1byte	0x3b
 2061 00cc 00          		.1byte	0xb
 2062 00cd 03          		.1byte	0x49
 2063 00cd 0E          		.1byte	0x13
 2064 00ce 3A          		.1byte	0x2
 2065 00ce 0B          		.1byte	0x6
 2066 00cf 3B          		.1byte	0x0
 2067 00cf 0B          		.1byte	0x0
 2068 00d0 49          		.1byte	0x1d
 2069 00d0 13          		.1byte	0x34
 2070 00d1 02          		.1byte	0x0
 2071 00d1 06          		.1byte	0x3
 2072 00d2 00          		.1byte	0xe
 2073 00d2 00          		.1byte	0x3a
 2074 00d3 1D          		.1byte	0xb
 2075 00d3 34          		.1byte	0x3b
 2076 00d4 00          		.1byte	0xb
 2077 00d4 03          		.1byte	0x49
 2078 00d5 0E          		.1byte	0x13
 2079 00d5 3A          		.1byte	0x3f
 2080 00d6 0B          		.1byte	0xc
 2081 00d6 3B          		.1byte	0x2
 2082 00d7 0B          		.1byte	0xa
 2083 00d7 49          		.1byte	0x0
 2084 00d8 13          		.1byte	0x0
 2085 00d8 3F          		.1byte	0x0
 2086 00d9 0C          		.section	.debug_pubnames,"",@progbits
 2087 00d9 02          		.4byte	0x138
 2088 00da 0A          		.2byte	0x2
 2089 00da 00          		.4byte	.Ldebug_info0
 2090 00db 00          		.4byte	0x530
 2091 00db 00          		.4byte	0x2d9
 2092                 		.ascii "HrInitSwitchData\000"
 2093 0000 00 00 01 38 		.4byte	0x2ed
 2094 0002 00 02       		.ascii "turnOffDelay\000"
 2095 0003 00 00 00 00 		.4byte	0x314
 2096 0005 00 00 05 30 		.ascii "turnOnDelay\000"
 2097 0007 00 00 02 D9 		.4byte	0x33b
 2098 0009 48 72 49 6E 		.ascii "turnLightOffTimer\000"
 2098      69 74 53 77 
 2098      69 74 63 68 
 2098      44 61 74 61 
 2098      00 
 2099 0011 00 00 02 ED 		.4byte	0x363
 2100 0013 74 75 72 6E 		.ascii "startTimer\000"
 2100      4F 66 66 44 
 2100      65 6C 61 79 
 2100      00 
 2101 001a 00 00 03 14 		.4byte	0x3ae
 2102 001c 74 75 72 6E 		.ascii "turnLightOnTimer\000"
 2102      4F 6E 44 65 
 2102      6C 61 79 00 
 2103 0022 00 00 03 3B 		.4byte	0x3d8
 2104 0024 74 75 72 6E 		.ascii "HandleSwitchPIOChangedEvent\000"
 2104      4C 69 67 68 
 2104      74 4F 66 66 
 2104      54 69 6D 65 
 2104      72 00 
 2105 002d 00 00 03 63 		.4byte	0x403
 2106 002f 73 74 61 72 		.ascii "HrInitSwitchHardware\000"
 2106      74 54 69 6D 
 2106      65 72 00 
 2107 0034 00 00 03 AE 		.4byte	0x419
 2108 0036 74 75 72 6E 		.ascii "HrHwDataInit\000"
 2108      4C 69 67 68 
 2108      74 4F 6E 54 
 2108      69 6D 65 72 
 2108      00 
 2109 003f 00 00 03 D8 		.4byte	0x42f
 2110 0041 48 61 6E 64 		.ascii "HandlePIOChangedEvent\000"
 2110      6C 65 53 77 
 2110      69 74 63 68 
 2110      50 49 4F 43 
 2110      68 61 6E 67 
 2111 004f 00 00 04 03 		.4byte	0x466
 2112 0051 48 72 49 6E 		.ascii "GetRRValue\000"
 2112      69 74 53 77 
 2112      69 74 63 68 
 2112      48 61 72 64 
 2112      77 61 72 65 
 2113 005b 00 00 04 19 		.4byte	0x47e
 2114 005d 48 72 48 77 		.ascii "SoundBuzzer\000"
 2114      44 61 74 61 
 2114      49 6E 69 74 
 2114      00 
 2115 0064 00 00 04 2F 		.4byte	0x4f5
 2116 0066 48 61 6E 64 		.ascii "HrInitHardware\000"
 2116      6C 65 50 49 
 2116      4F 43 68 61 
 2116      6E 67 65 64 
 2116      45 76 65 6E 
 2117 0071 00 00 04 66 		.4byte	0x50b
 2118 0073 47 65 74 52 		.ascii "g_app_hw_data\000"
 2118      52 56 61 6C 
 2118      75 65 00 
 2119 0078 00 00 04 7E 		.4byte	0x51d
 2120 007a 53 6F 75 6E 		.ascii "g_dimmer_data\000"
 2120      64 42 75 7A 
 2120      7A 65 72 00 
 2121 0080 00 00 04 F5 		.4byte	0x0
 2122 0082 48 72 49 6E 		.section	.debug_aranges,"",@progbits
 2122      69 74 48 61 
 2122      72 64 77 61 
 2122      72 65 00 
 2123 008a 00 00 05 0B 		.4byte	0x84
 2124 008c 67 5F 61 70 		.2byte	0x2
 2124      70 5F 68 77 
 2124      5F 64 61 74 
 2124      61 00 
 2125 0093 00 00 05 1D 		.4byte	.Ldebug_info0
 2126 0095 67 5F 64 69 		.1byte	0x4
 2126      6D 6D 65 72 
 2126      5F 64 61 74 
 2126      61 00 
 2127 009c 00 00 00 00 		.1byte	0x0
 2128                 		.2byte	0x0
 2129 0000 00 00 00 84 		.2byte	0x0
 2130 0002 00 02       		.4byte	.LFB9
 2131 0003 00 00 00 00 		.4byte	.LFE9-.LFB9
 2132 0005 04          		.4byte	.LFB14
 2133 0005 00          		.4byte	.LFE14-.LFB14
 2134 0006 00 00       		.4byte	.LFB15
 2135 0007 00 00       		.4byte	.LFE15-.LFB15
 2136 0008 00 00 00 00 		.4byte	.LFB13
 2137 000a 00 00 00 00 		.4byte	.LFE13-.LFB13
 2138 000c 00 00 00 00 		.4byte	.LFB11
 2139 000e 00 00 00 03 		.4byte	.LFE11-.LFB11
 2140 0010 00 00 00 00 		.4byte	.LFB12
 2141 0012 00 00 00 04 		.4byte	.LFE12-.LFB12
 2142 0014 00 00 00 00 		.4byte	.LFB10
 2143 0016 00 00 00 00 		.4byte	.LFE10-.LFB10
 2144 0018 00 00 00 00 		.4byte	.LFB8
 2145 001a 00 00 00 00 		.4byte	.LFE8-.LFB8
 2146 001c 00 00 00 00 		.4byte	.LFB4
 2147 001e 00 00 00 00 		.4byte	.LFE4-.LFB4
 2148 0020 00 00 00 00 		.4byte	.LFB7
 2149 0022 00 00 00 00 		.4byte	.LFE7-.LFB7
 2150 0024 00 00 00 00 		.4byte	.LFB6
 2151 0026 00 00 00 00 		.4byte	.LFE6-.LFB6
 2152 0028 00 00 00 00 		.4byte	.LFB5
 2153 002a 00 00 00 00 		.4byte	.LFE5-.LFB5
 2154 002c 00 00 00 00 		.4byte	.LFB2
 2155 002e 00 00 00 00 		.4byte	.LFE2-.LFB2
 2156 0030 00 00 00 00 		.4byte	.LFB3
 2157 0032 00 00 00 00 		.4byte	.LFE3-.LFB3
 2158 0034 00 00 00 00 		.4byte	0x0
 2159 0036 00 00 00 00 		.4byte	0x0
 2160 0038 00 00 00 00 		.section	.debug_ranges,"",@progbits
 2161 003a 00 00 00 00 	.Ldebug_ranges0:
 2162 003c 00 00 00 00 		.4byte	.Ltext0
 2163 003e 00 00 00 00 		.4byte	.Letext0
 2164 0040 00 00 00 00 		.4byte	.LFB9
 2165 0042 00 00 00 00 		.4byte	.LFE9
 2166                 		.4byte	.LFB14
 2167                 		.4byte	.LFE14
 2168 0000 00 00 00 00 		.4byte	.LFB15
 2169 0002 00 00 00 00 		.4byte	.LFE15
 2170 0004 00 00 00 00 		.4byte	.LFB13
 2171 0006 00 00 00 00 		.4byte	.LFE13
 2172 0008 00 00 00 00 		.4byte	.LFB11
 2173 000a 00 00 00 00 		.4byte	.LFE11
 2174 000c 00 00 00 00 		.4byte	.LFB12
 2175 000e 00 00 00 00 		.4byte	.LFE12
 2176 0010 00 00 00 00 		.4byte	.LFB10
 2177 0012 00 00 00 00 		.4byte	.LFE10
 2178 0014 00 00 00 00 		.4byte	.LFB8
 2179 0016 00 00 00 00 		.4byte	.LFE8
 2180 0018 00 00 00 00 		.4byte	.LFB4
 2181 001a 00 00 00 00 		.4byte	.LFE4
 2182 001c 00 00 00 00 		.4byte	.LFB7
 2183 001e 00 00 00 00 		.4byte	.LFE7
 2184 0020 00 00 00 00 		.4byte	.LFB6
 2185 0022 00 00 00 00 		.4byte	.LFE6
 2186 0024 00 00 00 00 		.4byte	.LFB5
 2187 0026 00 00 00 00 		.4byte	.LFE5
 2188 0028 00 00 00 00 		.4byte	.LFB2
 2189 002a 00 00 00 00 		.4byte	.LFE2
 2190 002c 00 00 00 00 		.4byte	.LFB3
 2191 002e 00 00 00 00 		.4byte	.LFE3
 2192 0030 00 00 00 00 		.4byte	0x0
 2193 0032 00 00 00 00 		.4byte	0x0
 2194 0034 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 2195 0036 00 00 00 00 	.LASF91:
 2196 0038 00 00 00 00 		.ascii "HrInitSwitchData\000"
 2197 003a 00 00 00 00 	.LASF33:
 2198 003c 00 00 00 00 		.ascii "pio_mode_ana_mon_clk_pio\000"
 2199 003e 00 00 00 00 	.LASF92:
 2200                 		.ascii "HrInitSwitchHardware\000"
 2201                 	.LASF21:
 2202 0000 48 72 49 6E 		.ascii "pio_mode_radio_rx_en\000"
 2202      69 74 53 77 
 2202      69 74 63 68 
 2202      44 61 74 61 
 2202      00 
 2203                 	.LASF80:
 2204 0008 70 69 6F 5F 		.ascii "app_panic_invalid_state\000"
 2204      6D 6F 64 65 
 2204      5F 61 6E 61 
 2204      5F 6D 6F 6E 
 2204      5F 63 6C 6B 
 2205                 	.LASF65:
 2206 0015 48 72 49 6E 		.ascii "beep_type\000"
 2206      69 74 53 77 
 2206      69 74 63 68 
 2206      48 61 72 64 
 2206      77 61 72 65 
 2207                 	.LASF29:
 2208 001f 70 69 6F 5F 		.ascii "pio_mode_i2c_data\000"
 2208      6D 6F 64 65 
 2208      5F 72 61 64 
 2208      69 6F 5F 72 
 2208      78 5F 65 6E 
 2209                 	.LASF20:
 2210 002a 61 70 70 5F 		.ascii "pio_mode_uart\000"
 2210      70 61 6E 69 
 2210      63 5F 69 6E 
 2210      76 61 6C 69 
 2210      64 5F 73 74 
 2211                 	.LASF6:
 2212 0036 62 65 65 70 		.ascii "short int\000"
 2212      5F 74 79 70 
 2212      65 00 
 2213                 	.LASF90:
 2214 003b 70 69 6F 5F 		.ascii "pio_changed\000"
 2214      6D 6F 64 65 
 2214      5F 69 32 63 
 2214      5F 64 61 74 
 2214      61 00 
 2215                 	.LASF60:
 2216 0044 70 69 6F 5F 		.ascii "buzzer_beep_long\000"
 2216      6D 6F 64 65 
 2216      5F 75 61 72 
 2216      74 00 
 2217                 	.LASF88:
 2218 004b 73 68 6F 72 		.ascii "turnLightOnTimer\000"
 2218      74 20 69 6E 
 2218      74 00 
 2219                 	.LASF41:
 2220 0050 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_no_pulls\000"
 2220      63 68 61 6E 
 2220      67 65 64 00 
 2221                 	.LASF102:
 2222 0056 62 75 7A 7A 		.ascii "hr_sensor_hw.c\000"
 2222      65 72 5F 62 
 2222      65 65 70 5F 
 2222      6C 6F 6E 67 
 2222      00 
 2223                 	.LASF26:
 2224 005e 74 75 72 6E 		.ascii "pio_mode_pio_control_rxd\000"
 2224      4C 69 67 68 
 2224      74 4F 6E 54 
 2224      69 6D 65 72 
 2224      00 
 2225                 	.LASF47:
 2226 0067 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_sticky\000"
 2226      69 32 63 5F 
 2226      70 75 6C 6C 
 2226      5F 6D 6F 64 
 2226      65 5F 6E 6F 
 2227                 	.LASF23:
 2228 0074 68 72 5F 73 		.ascii "pio_mode_nvm_power_en\000"
 2228      65 6E 73 6F 
 2228      72 5F 68 77 
 2228      2E 63 00 
 2229                 	.LASF71:
 2230 007c 70 69 6F 5F 		.ascii "app_panic_set_advert_data\000"
 2230      6D 6F 64 65 
 2230      5F 70 69 6F 
 2230      5F 63 6F 6E 
 2230      74 72 6F 6C 
 2231                 	.LASF94:
 2232 0088 70 69 6F 5F 		.ascii "HandlePIOChangedEvent\000"
 2232      69 32 63 5F 
 2232      70 75 6C 6C 
 2232      5F 6D 6F 64 
 2232      65 5F 73 74 
 2233                 	.LASF97:
 2234 0098 70 69 6F 5F 		.ascii "beep_timer\000"
 2234      6D 6F 64 65 
 2234      5F 6E 76 6D 
 2234      5F 70 6F 77 
 2234      65 72 5F 65 
 2235                 	.LASF105:
 2236 00a3 61 70 70 5F 		.ascii "appBuzzerTimerHandler\000"
 2236      70 61 6E 69 
 2236      63 5F 73 65 
 2236      74 5F 61 64 
 2236      76 65 72 74 
 2237                 	.LASF103:
 2238 00b0 48 61 6E 64 		.ascii "C:\\Users\\hiro\\Documents\\GitHub\\heekari\\HeekariFirmware\000"
 2238      6C 65 50 49 
 2238      4F 43 68 61 
 2238      6E 67 65 64 
 2238      45 76 65 6E 
 2239                 	.LASF48:
 2240 00bb 62 65 65 70 		.ascii "pio_event_mode_disable\000"
 2240      5F 74 69 6D 
 2240      65 72 00 
 2241                 	.LASF31:
 2242 00c1 61 70 70 42 		.ascii "pio_mode_uart_flow_ctrl\000"
 2242      75 7A 7A 65 
 2242      72 54 69 6D 
 2242      65 72 48 61 
 2242      6E 64 6C 65 
 2243                 	.LASF30:
 2244 00cc 43 3A 5C 55 		.ascii "pio_mode_i2c_clock\000"
 2244      73 65 72 73 
 2244      5C 68 69 72 
 2244      6F 5C 44 6F 
 2244      63 75 6D 65 
 2245                 	.LASF66:
 2246 00e7 70 69 6F 5F 		.ascii "beep_count\000"
 2246      65 76 65 6E 
 2246      74 5F 6D 6F 
 2246      64 65 5F 64 
 2246      69 73 61 62 
 2247                 	.LASF49:
 2248 00f3 70 69 6F 5F 		.ascii "pio_event_mode_rising\000"
 2248      6D 6F 64 65 
 2248      5F 75 61 72 
 2248      74 5F 66 6C 
 2248      6F 77 5F 63 
 2249                 	.LASF45:
 2250 00ff 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_pull_up\000"
 2250      6D 6F 64 65 
 2250      5F 69 32 63 
 2250      5F 63 6C 6F 
 2250      63 6B 00 
 2251                 	.LASF34:
 2252 0108 62 65 65 70 		.ascii "pio_mode_no_pulls\000"
 2252      5F 63 6F 75 
 2252      6E 74 00 
 2253                 	.LASF79:
 2254 010e 70 69 6F 5F 		.ascii "app_panic_con_param_update\000"
 2254      65 76 65 6E 
 2254      74 5F 6D 6F 
 2254      64 65 5F 72 
 2254      69 73 69 6E 
 2255                 	.LASF54:
 2256 0119 70 69 6F 5F 		.ascii "pio_pwm_mode_open_source\000"
 2256      69 32 63 5F 
 2256      70 75 6C 6C 
 2256      5F 6D 6F 64 
 2256      65 5F 73 74 
 2257                 	.LASF89:
 2258 0129 70 69 6F 5F 		.ascii "HandleSwitchPIOChangedEvent\000"
 2258      6D 6F 64 65 
 2258      5F 6E 6F 5F 
 2258      70 75 6C 6C 
 2258      73 00 
 2259                 	.LASF82:
 2260 0132 61 70 70 5F 		.ascii "turnOffDelay\000"
 2260      70 61 6E 69 
 2260      63 5F 63 6F 
 2260      6E 5F 70 61 
 2260      72 61 6D 5F 
 2261                 	.LASF69:
 2262 0140 70 69 6F 5F 		.ascii "SWITCH_DIMMER_DATA_T\000"
 2262      70 77 6D 5F 
 2262      6D 6F 64 65 
 2262      5F 6F 70 65 
 2262      6E 5F 73 6F 
 2263                 	.LASF73:
 2264 014c 48 61 6E 64 		.ascii "app_panic_db_registration\000"
 2264      6C 65 53 77 
 2264      69 74 63 68 
 2264      50 49 4F 43 
 2264      68 61 6E 67 
 2265                 	.LASF9:
 2266 015a 74 75 72 6E 		.ascii "pio_mode_user\000"
 2266      4F 66 66 44 
 2266      65 6C 61 79 
 2266      00 
 2267                 	.LASF39:
 2268 0161 53 57 49 54 		.ascii "pio_mode_weak_sticky\000"
 2268      43 48 5F 44 
 2268      49 4D 4D 45 
 2268      52 5F 44 41 
 2268      54 41 5F 54 
 2269                 	.LASF16:
 2270 016b 61 70 70 5F 		.ascii "pio_mode_quadrature0\000"
 2270      70 61 6E 69 
 2270      63 5F 64 62 
 2270      5F 72 65 67 
 2270      69 73 74 72 
 2271                 	.LASF17:
 2272 0178 70 69 6F 5F 		.ascii "pio_mode_quadrature1\000"
 2272      6D 6F 64 65 
 2272      5F 75 73 65 
 2272      72 00 
 2273                 	.LASF18:
 2274 017f 70 69 6F 5F 		.ascii "pio_mode_quadrature2\000"
 2274      6D 6F 64 65 
 2274      5F 77 65 61 
 2274      6B 5F 73 74 
 2274      69 63 6B 79 
 2275                 	.LASF19:
 2276 018a 70 69 6F 5F 		.ascii "pio_mode_quadrature3\000"
 2276      6D 6F 64 65 
 2276      5F 71 75 61 
 2276      64 72 61 74 
 2276      75 72 65 30 
 2277                 	.LASF85:
 2278 0194 70 69 6F 5F 		.ascii "startTimer\000"
 2278      6D 6F 64 65 
 2278      5F 71 75 61 
 2278      64 72 61 74 
 2278      75 72 65 31 
 2279                 	.LASF70:
 2280 019f 70 69 6F 5F 		.ascii "app_panic_set_advert_params\000"
 2280      6D 6F 64 65 
 2280      5F 71 75 61 
 2280      64 72 61 74 
 2280      75 72 65 32 
 2281                 	.LASF96:
 2282 01a9 70 69 6F 5F 		.ascii "SoundBuzzer\000"
 2282      6D 6F 64 65 
 2282      5F 71 75 61 
 2282      64 72 61 74 
 2282      75 72 65 33 
 2283                 	.LASF0:
 2284 01b4 73 74 61 72 		.ascii "unsigned char\000"
 2284      74 54 69 6D 
 2284      65 72 00 
 2285                 	.LASF11:
 2286 01b9 61 70 70 5F 		.ascii "pio_mode_clk_req\000"
 2286      70 61 6E 69 
 2286      63 5F 73 65 
 2286      74 5F 61 64 
 2286      76 65 72 74 
 2287                 	.LASF61:
 2288 01c7 53 6F 75 6E 		.ascii "buzzer_beep_twice\000"
 2288      64 42 75 7A 
 2288      7A 65 72 00 
 2289                 	.LASF78:
 2290 01cd 75 6E 73 69 		.ascii "app_panic_add_whitelist\000"
 2290      67 6E 65 64 
 2290      20 63 68 61 
 2290      72 00 
 2291                 	.LASF43:
 2292 01d4 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_pull_up\000"
 2292      6D 6F 64 65 
 2292      5F 63 6C 6B 
 2292      5F 72 65 71 
 2292      00 
 2293                 	.LASF75:
 2294 01dd 62 75 7A 7A 		.ascii "app_panic_nvm_write\000"
 2294      65 72 5F 62 
 2294      65 65 70 5F 
 2294      74 77 69 63 
 2294      65 00 
 2295                 	.LASF5:
 2296 01e6 61 70 70 5F 		.ascii "signed char\000"
 2296      70 61 6E 69 
 2296      63 5F 61 64 
 2296      64 5F 77 68 
 2296      69 74 65 6C 
 2297                 	.LASF12:
 2298 01f2 70 69 6F 5F 		.ascii "pio_mode_pwm0\000"
 2298      69 32 63 5F 
 2298      70 75 6C 6C 
 2298      5F 6D 6F 64 
 2298      65 5F 77 65 
 2299                 	.LASF13:
 2300 0201 61 70 70 5F 		.ascii "pio_mode_pwm1\000"
 2300      70 61 6E 69 
 2300      63 5F 6E 76 
 2300      6D 5F 77 72 
 2300      69 74 65 00 
 2301                 	.LASF14:
 2302 020b 73 69 67 6E 		.ascii "pio_mode_pwm2\000"
 2302      65 64 20 63 
 2302      68 61 72 00 
 2303                 	.LASF15:
 2304 0211 70 69 6F 5F 		.ascii "pio_mode_pwm3\000"
 2304      6D 6F 64 65 
 2304      5F 70 77 6D 
 2304      30 00 
 2305                 	.LASF8:
 2306 0218 70 69 6F 5F 		.ascii "unsigned int\000"
 2306      6D 6F 64 65 
 2306      5F 70 77 6D 
 2306      31 00 
 2307                 	.LASF63:
 2308 021f 70 69 6F 5F 		.ascii "buzzer_beep_type\000"
 2308      6D 6F 64 65 
 2308      5F 70 77 6D 
 2308      32 00 
 2309                 	.LASF74:
 2310 0226 70 69 6F 5F 		.ascii "app_panic_nvm_read\000"
 2310      6D 6F 64 65 
 2310      5F 70 77 6D 
 2310      33 00 
 2311                 	.LASF55:
 2312 022d 75 6E 73 69 		.ascii "pio_pwm_mode_inverted_push_pull\000"
 2312      67 6E 65 64 
 2312      20 69 6E 74 
 2312      00 
 2313                 	.LASF1:
 2314 0234 62 75 7A 7A 		.ascii "short unsigned int\000"
 2314      65 72 5F 62 
 2314      65 65 70 5F 
 2314      74 79 70 65 
 2314      00 
 2315                 	.LASF104:
 2316 023c 61 70 70 5F 		.ascii "GetRRValue\000"
 2316      70 61 6E 69 
 2316      63 5F 6E 76 
 2316      6D 5F 72 65 
 2316      61 64 00 
 2317                 	.LASF37:
 2318 0246 70 69 6F 5F 		.ascii "pio_mode_strong_pull_down\000"
 2318      70 77 6D 5F 
 2318      6D 6F 64 65 
 2318      5F 69 6E 76 
 2318      65 72 74 65 
 2319                 	.LASF99:
 2320 0256 73 68 6F 72 		.ascii "g_app_hw_data\000"
 2320      74 20 75 6E 
 2320      73 69 67 6E 
 2320      65 64 20 69 
 2320      6E 74 00 
 2321                 	.LASF95:
 2322 025f 47 65 74 52 		.ascii "pios\000"
 2322      52 56 61 6C 
 2322      75 65 00 
 2323                 	.LASF100:
 2324 0265 70 69 6F 5F 		.ascii "g_dimmer_data\000"
 2324      6D 6F 64 65 
 2324      5F 73 74 72 
 2324      6F 6E 67 5F 
 2324      70 75 6C 6C 
 2325                 	.LASF59:
 2326 0272 67 5F 61 70 		.ascii "buzzer_beep_short\000"
 2326      70 5F 68 77 
 2326      5F 64 61 74 
 2326      61 00 
 2327                 	.LASF7:
 2328 0279 70 69 6F 73 		.ascii "long int\000"
 2328      00 
 2329                 	.LASF56:
 2330 027b 67 5F 64 69 		.ascii "timer_id\000"
 2330      6D 6D 65 72 
 2330      5F 64 61 74 
 2330      61 00 
 2331                 	.LASF36:
 2332 0282 62 75 7A 7A 		.ascii "pio_mode_weak_pull_up\000"
 2332      65 72 5F 62 
 2332      65 65 70 5F 
 2332      73 68 6F 72 
 2332      74 00 
 2333                 	.LASF57:
 2334 028b 6C 6F 6E 67 		.ascii "timer_callback_arg\000"
 2334      20 69 6E 74 
 2334      00 
 2335                 	.LASF50:
 2336 0290 74 69 6D 65 		.ascii "pio_event_mode_falling\000"
 2336      72 5F 69 64 
 2336      00 
 2337                 	.LASF87:
 2338 0294 70 69 6F 5F 		.ascii "handler\000"
 2338      6D 6F 64 65 
 2338      5F 77 65 61 
 2338      6B 5F 70 75 
 2338      6C 6C 5F 75 
 2339                 	.LASF98:
 2340 029f 74 69 6D 65 		.ascii "HrInitHardware\000"
 2340      72 5F 63 61 
 2340      6C 6C 62 61 
 2340      63 6B 5F 61 
 2340      72 67 00 
 2341                 	.LASF2:
 2342 02a9 70 69 6F 5F 		.ascii "uint16\000"
 2342      65 76 65 6E 
 2342      74 5F 6D 6F 
 2342      64 65 5F 66 
 2342      61 6C 6C 69 
 2343                 	.LASF22:
 2344 02b4 68 61 6E 64 		.ascii "pio_mode_radio_tx_en\000"
 2344      6C 65 72 00 
 2345                 	.LASF3:
 2346 02b8 48 72 49 6E 		.ascii "uint32\000"
 2346      69 74 48 61 
 2346      72 64 77 61 
 2346      72 65 00 
 2347                 	.LASF62:
 2348 02c0 75 69 6E 74 		.ascii "buzzer_beep_thrice\000"
 2348      31 36 00 
 2349                 	.LASF4:
 2350 02c3 70 69 6F 5F 		.ascii "long unsigned int\000"
 2350      6D 6F 64 65 
 2350      5F 72 61 64 
 2350      69 6F 5F 74 
 2350      78 5F 65 6E 
 2351                 	.LASF27:
 2352 02ce 75 69 6E 74 		.ascii "pio_mode_ser_flash_dout\000"
 2352      33 32 00 
 2353                 	.LASF32:
 2354 02d1 62 75 7A 7A 		.ascii "pio_mode_pio_control_timer\000"
 2354      65 72 5F 62 
 2354      65 65 70 5F 
 2354      74 68 72 69 
 2354      63 65 00 
 2355                 	.LASF84:
 2356 02db 6C 6F 6E 67 		.ascii "turnLightOffTimer\000"
 2356      20 75 6E 73 
 2356      69 67 6E 65 
 2356      64 20 69 6E 
 2356      74 00 
 2357                 	.LASF72:
 2358 02e4 70 69 6F 5F 		.ascii "app_panic_set_scan_rsp_data\000"
 2358      6D 6F 64 65 
 2358      5F 73 65 72 
 2358      5F 66 6C 61 
 2358      73 68 5F 64 
 2359                 	.LASF67:
 2360 02f0 70 69 6F 5F 		.ascii "button_press_tid\000"
 2360      6D 6F 64 65 
 2360      5F 70 69 6F 
 2360      5F 63 6F 6E 
 2360      74 72 6F 6C 
 2361                 	.LASF40:
 2362 02fd 74 75 72 6E 		.ascii "pio_mode_strong_sticky\000"
 2362      4C 69 67 68 
 2362      74 4F 66 66 
 2362      54 69 6D 65 
 2362      72 00 
 2363                 	.LASF44:
 2364 0306 61 70 70 5F 		.ascii "pio_i2c_pull_mode_strong_pull_down\000"
 2364      70 61 6E 69 
 2364      63 5F 73 65 
 2364      74 5F 73 63 
 2364      61 6E 5F 72 
 2365                 	.LASF64:
 2366 0314 62 75 74 74 		.ascii "buzzer_tid\000"
 2366      6F 6E 5F 70 
 2366      72 65 73 73 
 2366      5F 74 69 64 
 2366      00 
 2367                 	.LASF83:
 2368 031d 70 69 6F 5F 		.ascii "turnOnDelay\000"
 2368      6D 6F 64 65 
 2368      5F 73 74 72 
 2368      6F 6E 67 5F 
 2368      73 74 69 63 
 2369                 	.LASF93:
 2370 0328 70 69 6F 5F 		.ascii "HrHwDataInit\000"
 2370      69 32 63 5F 
 2370      70 75 6C 6C 
 2370      5F 6D 6F 64 
 2370      65 5F 73 74 
 2371                 	.LASF28:
 2372 033a 62 75 7A 7A 		.ascii "pio_mode_ser_flash_csb\000"
 2372      65 72 5F 74 
 2372      69 64 00 
 2373                 	.LASF24:
 2374 033f 74 75 72 6E 		.ascii "pio_mode_pio_controller\000"
 2374      4F 6E 44 65 
 2374      6C 61 79 00 
 2375                 	.LASF58:
 2376 0345 48 72 48 77 		.ascii "buzzer_beep_off\000"
 2376      44 61 74 61 
 2376      49 6E 69 74 
 2376      00 
 2377                 	.LASF52:
 2378 034c 70 69 6F 5F 		.ascii "pio_pwm_mode_push_pull\000"
 2378      6D 6F 64 65 
 2378      5F 73 65 72 
 2378      5F 66 6C 61 
 2378      73 68 5F 63 
 2379                 	.LASF10:
 2380 0357 70 69 6F 5F 		.ascii "pio_mode_edge_capture\000"
 2380      6D 6F 64 65 
 2380      5F 70 69 6F 
 2380      5F 63 6F 6E 
 2380      74 72 6F 6C 
 2381                 	.LASF42:
 2382 0363 62 75 7A 7A 		.ascii "pio_i2c_pull_mode_weak_pull_down\000"
 2382      65 72 5F 62 
 2382      65 65 70 5F 
 2382      6F 66 66 00 
 2383                 	.LASF38:
 2384 036b 70 69 6F 5F 		.ascii "pio_mode_strong_pull_up\000"
 2384      70 77 6D 5F 
 2384      6D 6F 64 65 
 2384      5F 70 75 73 
 2384      68 5F 70 75 
 2385                 	.LASF76:
 2386 0377 70 69 6F 5F 		.ascii "app_panic_read_tx_pwr_level\000"
 2386      6D 6F 64 65 
 2386      5F 65 64 67 
 2386      65 5F 63 61 
 2386      70 74 75 72 
 2387                 	.LASF35:
 2388 0382 70 69 6F 5F 		.ascii "pio_mode_weak_pull_down\000"
 2388      69 32 63 5F 
 2388      70 75 6C 6C 
 2388      5F 6D 6F 64 
 2388      65 5F 77 65 
 2389                 	.LASF46:
 2390 0392 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_sticky\000"
 2390      6D 6F 64 65 
 2390      5F 73 74 72 
 2390      6F 6E 67 5F 
 2390      70 75 6C 6C 
 2391                 	.LASF81:
 2392 039e 61 70 70 5F 		.ascii "app_panic_unexpected_beep_type\000"
 2392      70 61 6E 69 
 2392      63 5F 72 65 
 2392      61 64 5F 74 
 2392      78 5F 70 77 
 2393                 	.LASF25:
 2394 03ac 70 69 6F 5F 		.ascii "pio_mode_pio_control_txd\000"
 2394      6D 6F 64 65 
 2394      5F 77 65 61 
 2394      6B 5F 70 75 
 2394      6C 6C 5F 64 
 2395                 	.LASF53:
 2396 03b8 70 69 6F 5F 		.ascii "pio_pwm_mode_open_drain\000"
 2396      69 32 63 5F 
 2396      70 75 6C 6C 
 2396      5F 6D 6F 64 
 2396      65 5F 77 65 
 2397                 	.LASF68:
 2398 03c7 61 70 70 5F 		.ascii "APP_HW_DATA_T\000"
 2398      70 61 6E 69 
 2398      63 5F 75 6E 
 2398      65 78 70 65 
 2398      63 74 65 64 
 2399                 	.LASF51:
 2400 03d7 70 69 6F 5F 		.ascii "pio_event_mode_both\000"
 2400      6D 6F 64 65 
 2400      5F 70 69 6F 
 2400      5F 63 6F 6E 
 2400      74 72 6F 6C 
 2401                 	.LASF86:
 2402 03e3 70 69 6F 5F 		.ascii "timeout\000"
 2402      70 77 6D 5F 
 2402      6D 6F 64 65 
 2402      5F 6F 70 65 
 2402      6E 5F 64 72 
 2403                 	.LASF101:
 2404 03ef 41 50 50 5F 		.ascii "GNU C 4.3.4 CSR version 21 for xap [1468380]\000"
 2404      48 57 5F 44 
 2404      41 54 41 5F 
 2404      54 00 
 2405                 	.LASF77:
 2406 03f6 70 69 6F 5F 		.ascii "app_panic_delete_whitelist\000"
 2406      65 76 65 6E 
 2406      74 5F 6D 6F 
 2406      64 65 5F 62 
 2406      6F 74 68 00 
 2407                 		.ident	"GCC: (GNU) 4.3.4 CSR version 21 for xap [1468380]"
 2408 0400 74 69 6D 65 	...
 2408      6F 75 74 00 
