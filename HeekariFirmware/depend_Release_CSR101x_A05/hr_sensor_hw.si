   1                 		.file	"hr_sensor_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.HrInitSwitchData,"ax",@progbits
  15                 		.global	HrInitSwitchData
  16                 		.type	HrInitSwitchData, @function
  17                 	HrInitSwitchData:
  18                 	.LFB8:
  19                 		.file 1 "hr_sensor_hw.c"
   0:hr_sensor_hw.c **** /******************************************************************************
   1:hr_sensor_hw.c ****  *  Copyright (C) Cambridge Silicon Radio Limited 2012-2013
   2:hr_sensor_hw.c ****  *  Part of CSR uEnergy SDK 2.2.2
   3:hr_sensor_hw.c ****  *  Application version 2.2.2.0
   4:hr_sensor_hw.c ****  *
   5:hr_sensor_hw.c ****  *  FILE
   6:hr_sensor_hw.c ****  *      hr_sensor_hw.c
   7:hr_sensor_hw.c ****  *
   8:hr_sensor_hw.c ****  *  DESCRIPTION
   9:hr_sensor_hw.c ****  *      This file defines the Heart Rate sensors hardware specific routines.
  10:hr_sensor_hw.c ****  *
  11:hr_sensor_hw.c ****  *****************************************************************************/
  12:hr_sensor_hw.c **** 
  13:hr_sensor_hw.c **** /*============================================================================*
  14:hr_sensor_hw.c ****  *  SDK Header Files
  15:hr_sensor_hw.c ****  *============================================================================*/
  16:hr_sensor_hw.c **** 
  17:hr_sensor_hw.c **** #include <pio.h>
  18:hr_sensor_hw.c **** #include <pio_ctrlr.h>
  19:hr_sensor_hw.c **** #include <timer.h>
  20:hr_sensor_hw.c **** 
  21:hr_sensor_hw.c **** /*============================================================================*
  22:hr_sensor_hw.c ****  *  Local Header Files
  23:hr_sensor_hw.c ****  *============================================================================*/
  24:hr_sensor_hw.c **** 
  25:hr_sensor_hw.c **** #include "hr_sensor.h"
  26:hr_sensor_hw.c **** #include "hr_sensor_gatt.h"
  27:hr_sensor_hw.c **** #include "hr_sensor_hw.h"
  28:hr_sensor_hw.c **** #include "heart_rate_service.h"
  29:hr_sensor_hw.c **** #include "app_gatt_db.h"
  30:hr_sensor_hw.c **** #include "app_gatt.h"
  31:hr_sensor_hw.c **** 
  32:hr_sensor_hw.c **** /*============================================================================*
  33:hr_sensor_hw.c ****  *  Private Definitions
  34:hr_sensor_hw.c ****  *============================================================================*/
  35:hr_sensor_hw.c **** 
  36:hr_sensor_hw.c **** /* Setup PIOs
  37:hr_sensor_hw.c ****  *  PIO3    Buzzer
  38:hr_sensor_hw.c ****  *  PIO4    LED 1
  39:hr_sensor_hw.c ****  *  PIO9    On Board Input - HR Input
  40:hr_sensor_hw.c ****  *  PIO10   LED 2 (Not Used)
  41:hr_sensor_hw.c ****  *  PIO11   Button
  42:hr_sensor_hw.c ****  */
  43:hr_sensor_hw.c **** 
  44:hr_sensor_hw.c **** #define BUZZER_PIO              (3)
  45:hr_sensor_hw.c **** #define HR_INPUT_PIO            (9)
  46:hr_sensor_hw.c **** #define BUTTON_PIO              (11)
  47:hr_sensor_hw.c **** 
  48:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  49:hr_sensor_hw.c **** 
  50:hr_sensor_hw.c **** #define BUZZER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))
  51:hr_sensor_hw.c **** #define HR_INPUT_PIO_MASK       (PIO_BIT_MASK(HR_INPUT_PIO))
  52:hr_sensor_hw.c **** #define BUTTON_PIO_MASK         (PIO_BIT_MASK(BUTTON_PIO))
  53:hr_sensor_hw.c **** 
  54:hr_sensor_hw.c **** /* PIO direction */
  55:hr_sensor_hw.c **** #define PIO_DIRECTION_INPUT     (FALSE)
  56:hr_sensor_hw.c **** #define PIO_DIRECTION_OUTPUT    (TRUE)
  57:hr_sensor_hw.c **** 
  58:hr_sensor_hw.c **** /* PIO state */
  59:hr_sensor_hw.c **** #define PIO_STATE_HIGH          (TRUE)
  60:hr_sensor_hw.c **** #define PIO_STATE_LOW           (FALSE)
  61:hr_sensor_hw.c **** 
  62:hr_sensor_hw.c **** /* Extra long button press timer */
  63:hr_sensor_hw.c **** #define EXTRA_LONG_BUTTON_PRESS_TIMER \
  64:hr_sensor_hw.c ****                                 (4*SECOND)
  65:hr_sensor_hw.c **** 
  66:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
  67:hr_sensor_hw.c **** 
  68:hr_sensor_hw.c **** /* The index (0-3) of the PWM unit to be configured */
  69:hr_sensor_hw.c **** #define BUZZER_PWM_INDEX_0      (0)
  70:hr_sensor_hw.c **** 
  71:hr_sensor_hw.c **** /* PWM parameters for Buzzer */
  72:hr_sensor_hw.c **** 
  73:hr_sensor_hw.c **** /* Dull on. off and hold times */
  74:hr_sensor_hw.c **** #define DULL_BUZZ_ON_TIME       (2)    /* 60us */
  75:hr_sensor_hw.c **** #define DULL_BUZZ_OFF_TIME      (15)   /* 450us */
  76:hr_sensor_hw.c **** #define DULL_BUZZ_HOLD_TIME     (0)
  77:hr_sensor_hw.c **** 
  78:hr_sensor_hw.c **** /* Bright on, off and hold times */
  79:hr_sensor_hw.c **** #define BRIGHT_BUZZ_ON_TIME     (2)    /* 60us */
  80:hr_sensor_hw.c **** #define BRIGHT_BUZZ_OFF_TIME    (15)   /* 450us */
  81:hr_sensor_hw.c **** #define BRIGHT_BUZZ_HOLD_TIME   (0)    /* 0us */
  82:hr_sensor_hw.c **** 
  83:hr_sensor_hw.c **** #define BUZZ_RAMP_RATE          (0xFF)
  84:hr_sensor_hw.c **** 
  85:hr_sensor_hw.c **** /* TIMER values for Buzzer */
  86:hr_sensor_hw.c **** #define SHORT_BEEP_TIMER_VALUE  (100* MILLISECOND)
  87:hr_sensor_hw.c **** #define LONG_BEEP_TIMER_VALUE   (500* MILLISECOND)
  88:hr_sensor_hw.c **** #define BEEP_GAP_TIMER_VALUE    (25* MILLISECOND)
  89:hr_sensor_hw.c **** 
  90:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
  91:hr_sensor_hw.c **** 
  92:hr_sensor_hw.c **** #define DIMMER_PIO              (3)
  93:hr_sensor_hw.c **** 
  94:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  95:hr_sensor_hw.c **** 
  96:hr_sensor_hw.c **** #define DIMMER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))                                
  97:hr_sensor_hw.c **** 
  98:hr_sensor_hw.c **** /*============================================================================*
  99:hr_sensor_hw.c ****  *  Public data
 100:hr_sensor_hw.c ****  *============================================================================*/
 101:hr_sensor_hw.c **** 
 102:hr_sensor_hw.c **** /* Blood pressure application hardware data instance */
 103:hr_sensor_hw.c **** APP_HW_DATA_T                   g_app_hw_data;
 104:hr_sensor_hw.c **** 
 105:hr_sensor_hw.c **** /* Dimmer hardware data instance */
 106:hr_sensor_hw.c **** SWITCH_DIMMER_DATA_T                   g_dimmer_data;
 107:hr_sensor_hw.c **** 
 108:hr_sensor_hw.c **** /*============================================================================*
 109:hr_sensor_hw.c ****  *  Private Function Implementations
 110:hr_sensor_hw.c ****  *============================================================================*/
 111:hr_sensor_hw.c **** 
 112:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 113:hr_sensor_hw.c **** 
 114:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 115:hr_sensor_hw.c ****  *  NAME
 116:hr_sensor_hw.c ****  *      appBuzzerTimerHandler
 117:hr_sensor_hw.c ****  *
 118:hr_sensor_hw.c ****  *  DESCRIPTION
 119:hr_sensor_hw.c ****  *      This function is used to stop the Buzzer at the expiry of 
 120:hr_sensor_hw.c ****  *      timer.
 121:hr_sensor_hw.c ****  *
 122:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 123:hr_sensor_hw.c ****  *      Nothing.
 124:hr_sensor_hw.c ****  *
 125:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 126:hr_sensor_hw.c **** static void appBuzzerTimerHandler(timer_id tid)
 127:hr_sensor_hw.c **** {
 128:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 129:hr_sensor_hw.c **** 
 130:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 131:hr_sensor_hw.c **** 
 132:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 133:hr_sensor_hw.c ****     {
 134:hr_sensor_hw.c ****         case buzzer_beep_short: /* FALLTHROUGH */
 135:hr_sensor_hw.c ****         case buzzer_beep_long:
 136:hr_sensor_hw.c ****         {
 137:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 138:hr_sensor_hw.c **** 
 139:hr_sensor_hw.c ****             /* Disable buzzer */
 140:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 141:hr_sensor_hw.c ****         }
 142:hr_sensor_hw.c ****         break;
 143:hr_sensor_hw.c ****         case buzzer_beep_twice:
 144:hr_sensor_hw.c ****         {
 145:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 146:hr_sensor_hw.c ****             {
 147:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 148:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 149:hr_sensor_hw.c **** 
 150:hr_sensor_hw.c ****                 /* Disable buzzer */
 151:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 152:hr_sensor_hw.c **** 
 153:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 154:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 155:hr_sensor_hw.c ****             }
 156:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 157:hr_sensor_hw.c ****             {
 158:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 159:hr_sensor_hw.c **** 
 160:hr_sensor_hw.c ****                 /* Enable buzzer */
 161:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 162:hr_sensor_hw.c **** 
 163:hr_sensor_hw.c ****                 /* Start another short beep */
 164:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 165:hr_sensor_hw.c ****             }
 166:hr_sensor_hw.c ****             else
 167:hr_sensor_hw.c ****             {
 168:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 169:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 170:hr_sensor_hw.c **** 
 171:hr_sensor_hw.c ****                 /* Disable buzzer */
 172:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 173:hr_sensor_hw.c **** 
 174:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 175:hr_sensor_hw.c ****             }
 176:hr_sensor_hw.c ****         }
 177:hr_sensor_hw.c ****         break;
 178:hr_sensor_hw.c ****         case buzzer_beep_thrice:
 179:hr_sensor_hw.c ****         {
 180:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 181:hr_sensor_hw.c ****                g_app_hw_data.beep_count == 2)
 182:hr_sensor_hw.c ****             {
 183:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 184:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 185:hr_sensor_hw.c **** 
 186:hr_sensor_hw.c ****                 /* Disable buzzer */
 187:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 188:hr_sensor_hw.c **** 
 189:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 190:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 191:hr_sensor_hw.c ****             }
 192:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 193:hr_sensor_hw.c ****                     g_app_hw_data.beep_count == 3)
 194:hr_sensor_hw.c ****             {
 195:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 196:hr_sensor_hw.c **** 
 197:hr_sensor_hw.c ****                 /* Enable buzzer */
 198:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 199:hr_sensor_hw.c **** 
 200:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 201:hr_sensor_hw.c ****             }
 202:hr_sensor_hw.c ****             else
 203:hr_sensor_hw.c ****             {
 204:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 205:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 206:hr_sensor_hw.c **** 
 207:hr_sensor_hw.c ****                 /* Disable buzzer */
 208:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 209:hr_sensor_hw.c **** 
 210:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 211:hr_sensor_hw.c ****             }
 212:hr_sensor_hw.c ****         }
 213:hr_sensor_hw.c ****         break;
 214:hr_sensor_hw.c **** 
 215:hr_sensor_hw.c ****         default:
 216:hr_sensor_hw.c ****         {
 217:hr_sensor_hw.c ****             /* No such beep type */
 218:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 219:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 220:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 221:hr_sensor_hw.c ****              */
 222:hr_sensor_hw.c ****         }
 223:hr_sensor_hw.c ****         break;
 224:hr_sensor_hw.c ****     }
 225:hr_sensor_hw.c **** 
 226:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 227:hr_sensor_hw.c ****     {
 228:hr_sensor_hw.c ****         /* start the timer */
 229:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 230:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 231:hr_sensor_hw.c ****     }
 232:hr_sensor_hw.c **** }
 233:hr_sensor_hw.c **** 
 234:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER*/
 235:hr_sensor_hw.c **** 
 236:hr_sensor_hw.c **** /*============================================================================*
 237:hr_sensor_hw.c ****  *  Public Function Implementations
 238:hr_sensor_hw.c ****  *============================================================================*/
 239:hr_sensor_hw.c **** 
 240:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 241:hr_sensor_hw.c ****  *  NAME
 242:hr_sensor_hw.c ****  *      HrInitHardware 
 243:hr_sensor_hw.c ****  *
 244:hr_sensor_hw.c ****  *  DESCRIPTION
 245:hr_sensor_hw.c ****  *      This function is called to initialise heart rate hardware
 246:hr_sensor_hw.c ****  *
 247:hr_sensor_hw.c ****  *  RETURNS
 248:hr_sensor_hw.c ****  *      Nothing.
 249:hr_sensor_hw.c ****  *
 250:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 251:hr_sensor_hw.c **** 
 252:hr_sensor_hw.c **** extern void HrInitHardware(void)
 253:hr_sensor_hw.c **** {
 254:hr_sensor_hw.c ****     /* Setup PIOs
 255:hr_sensor_hw.c ****      * PIO3 - Buzzer
 256:hr_sensor_hw.c ****      * PIO4 - LED 1
 257:hr_sensor_hw.c ****      * PIO9 - On Board Input - HR input 
 258:hr_sensor_hw.c ****      *            when actual measurements 
 259:hr_sensor_hw.c ****      *            are enabled
 260:hr_sensor_hw.c ****      * PIO10 - LED 2 (Not Used)
 261:hr_sensor_hw.c ****      * PIO11 - Button
 262:hr_sensor_hw.c ****      */
 263:hr_sensor_hw.c **** #ifdef NO_ACTUAL_MEASUREMENT
 264:hr_sensor_hw.c **** 
 265:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 266:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 267:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 268:hr_sensor_hw.c **** 
 269:hr_sensor_hw.c ****     /* Setup button on PIO11 */
 270:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 271:hr_sensor_hw.c **** 
 272:hr_sensor_hw.c **** #else /* NO_ACTUAL_MEASUREMENT */
 273:hr_sensor_hw.c **** 
 274:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 275:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 276:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 277:hr_sensor_hw.c **** 
 278:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 279:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 280:hr_sensor_hw.c **** 
 281:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 282:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 283:hr_sensor_hw.c **** 
 284:hr_sensor_hw.c **** #endif /* ! NO_ACTUAL_MEASUREMENT */
 285:hr_sensor_hw.c **** 
 286:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 287:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 288:hr_sensor_hw.c **** 
 289:hr_sensor_hw.c ****     /* Configure the buzzer on PIO3 */
 290:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 291:hr_sensor_hw.c ****                  DULL_BUZZ_OFF_TIME, DULL_BUZZ_HOLD_TIME, BRIGHT_BUZZ_ON_TIME,
 292:hr_sensor_hw.c ****                  BRIGHT_BUZZ_OFF_TIME, BRIGHT_BUZZ_HOLD_TIME, BUZZ_RAMP_RATE);
 293:hr_sensor_hw.c **** 
 294:hr_sensor_hw.c **** 
 295:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 296:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 297:hr_sensor_hw.c **** 
 298:hr_sensor_hw.c **** 
 299:hr_sensor_hw.c ****     /* Save power by changing the I2C pull mode to pull down.*/
 300:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 301:hr_sensor_hw.c **** 
 302:hr_sensor_hw.c ****     HrInitSwitchHardware();
 303:hr_sensor_hw.c **** }
 304:hr_sensor_hw.c **** 
 305:hr_sensor_hw.c **** 
 306:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 307:hr_sensor_hw.c ****  *  NAME
 308:hr_sensor_hw.c ****  *      HrHwDataInit
 309:hr_sensor_hw.c ****  *
 310:hr_sensor_hw.c ****  *  DESCRIPTION
 311:hr_sensor_hw.c ****  *      This function initialises HR sensor hardware data structure
 312:hr_sensor_hw.c ****  *
 313:hr_sensor_hw.c ****  *  RETURNS
 314:hr_sensor_hw.c ****  *      Nothing.
 315:hr_sensor_hw.c ****  *
 316:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 317:hr_sensor_hw.c **** 
 318:hr_sensor_hw.c **** extern void HrHwDataInit(void)
 319:hr_sensor_hw.c **** {
 320:hr_sensor_hw.c **** 
 321:hr_sensor_hw.c ****     /* Delete button press timer */
 322:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
 323:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
 324:hr_sensor_hw.c ****     HrInitSwitchData();
 325:hr_sensor_hw.c **** }
 326:hr_sensor_hw.c **** 
 327:hr_sensor_hw.c **** 
 328:hr_sensor_hw.c **** 
 329:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 330:hr_sensor_hw.c ****  *  NAME
 331:hr_sensor_hw.c ****  *      SoundBuzzer
 332:hr_sensor_hw.c ****  *
 333:hr_sensor_hw.c ****  *  DESCRIPTION
 334:hr_sensor_hw.c ****  *      This function is called to trigger beeps of different types 
 335:hr_sensor_hw.c ****  *      'buzzer_beep_type'.
 336:hr_sensor_hw.c ****  *
 337:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 338:hr_sensor_hw.c ****  *      Nothing.
 339:hr_sensor_hw.c ****  *
 340:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 341:hr_sensor_hw.c **** 
 342:hr_sensor_hw.c **** extern void SoundBuzzer(buzzer_beep_type beep_type)
 343:hr_sensor_hw.c **** {
 344:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 345:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 346:hr_sensor_hw.c **** 
 347:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 348:hr_sensor_hw.c **** 
 349:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 350:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 351:hr_sensor_hw.c **** 
 352:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 353:hr_sensor_hw.c **** 
 354:hr_sensor_hw.c ****     /* Store the beep type in some global variable. It will used on timer 
 355:hr_sensor_hw.c ****      * expiry to check the type of beeps being sounded.
 356:hr_sensor_hw.c ****      */
 357:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 358:hr_sensor_hw.c **** 
 359:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 360:hr_sensor_hw.c ****     {
 361:hr_sensor_hw.c ****         case buzzer_beep_off:
 362:hr_sensor_hw.c ****         {
 363:hr_sensor_hw.c ****             /* Don't do anything */
 364:hr_sensor_hw.c ****         }
 365:hr_sensor_hw.c ****         break;
 366:hr_sensor_hw.c **** 
 367:hr_sensor_hw.c ****         case buzzer_beep_short: /* One short beep will be sounded */
 368:hr_sensor_hw.c ****             /* FALLTHROUGH */
 369:hr_sensor_hw.c ****         case buzzer_beep_twice: /* Two short beeps will be sounded */
 370:hr_sensor_hw.c ****             /* FALLTHROUGH */
 371:hr_sensor_hw.c ****         case buzzer_beep_thrice: /* Three short beeps will be sounded */
 372:hr_sensor_hw.c ****         {
 373:hr_sensor_hw.c ****             beep_timer = SHORT_BEEP_TIMER_VALUE;
 374:hr_sensor_hw.c ****         }
 375:hr_sensor_hw.c ****         break;
 376:hr_sensor_hw.c **** 
 377:hr_sensor_hw.c ****         case buzzer_beep_long:
 378:hr_sensor_hw.c ****         {
 379:hr_sensor_hw.c ****             /* One long beep will be sounded */
 380:hr_sensor_hw.c ****             beep_timer = LONG_BEEP_TIMER_VALUE;
 381:hr_sensor_hw.c ****         }
 382:hr_sensor_hw.c ****         break;
 383:hr_sensor_hw.c **** 
 384:hr_sensor_hw.c ****         default:
 385:hr_sensor_hw.c ****         {
 386:hr_sensor_hw.c ****             /* No such beep type defined */
 387:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 388:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 389:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 390:hr_sensor_hw.c ****              */
 391:hr_sensor_hw.c ****         }
 392:hr_sensor_hw.c ****         break;
 393:hr_sensor_hw.c ****     }
 394:hr_sensor_hw.c **** 
 395:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 396:hr_sensor_hw.c ****     {
 397:hr_sensor_hw.c ****         /* Initialize beep count to zero */
 398:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 399:hr_sensor_hw.c **** 
 400:hr_sensor_hw.c ****         /* Enable buzzer */
 401:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 402:hr_sensor_hw.c **** 
 403:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 404:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 405:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 406:hr_sensor_hw.c ****     }
 407:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 408:hr_sensor_hw.c **** }
 409:hr_sensor_hw.c **** 
 410:hr_sensor_hw.c **** 
 411:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 412:hr_sensor_hw.c **** 
 413:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 414:hr_sensor_hw.c ****  *  NAME
 415:hr_sensor_hw.c ****  *      GetRRValue
 416:hr_sensor_hw.c ****  *
 417:hr_sensor_hw.c ****  *  DESCRIPTION
 418:hr_sensor_hw.c ****  *      Get RR value by reading the HR_INPUT_PIO
 419:hr_sensor_hw.c ****  *
 420:hr_sensor_hw.c ****  *  RETURNS
 421:hr_sensor_hw.c ****  *      UINT32: RR value 
 422:hr_sensor_hw.c ****  *
 423:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 424:hr_sensor_hw.c **** 
 425:hr_sensor_hw.c **** extern uint32 GetRRValue(void)
 426:hr_sensor_hw.c **** {
 427:hr_sensor_hw.c **** 
 428:hr_sensor_hw.c ****     /* handle heartrate events ie changes to HR_INPUT_PIO */
 429:hr_sensor_hw.c ****     /* value is in 30.517us (32768KHz) intervals */
 430:hr_sensor_hw.c **** 
 431:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 432:hr_sensor_hw.c **** 
 433:hr_sensor_hw.c **** }
 434:hr_sensor_hw.c **** 
 435:hr_sensor_hw.c **** #endif /* !NO_ACTUAL_MEASUREMENT */
 436:hr_sensor_hw.c **** 
 437:hr_sensor_hw.c **** 
 438:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 439:hr_sensor_hw.c ****  *  NAME
 440:hr_sensor_hw.c ****  *      HandlePIOChangedEvent
 441:hr_sensor_hw.c ****  *
 442:hr_sensor_hw.c ****  *  DESCRIPTION
 443:hr_sensor_hw.c ****  *      This function handles PIO Changed event
 444:hr_sensor_hw.c ****  *
 445:hr_sensor_hw.c ****  *  RETURNS
 446:hr_sensor_hw.c ****  *      Nothing.
 447:hr_sensor_hw.c ****  *
 448:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 449:hr_sensor_hw.c **** 
 450:hr_sensor_hw.c **** extern void HandlePIOChangedEvent(uint32 pio_changed)
 451:hr_sensor_hw.c **** {
 452:hr_sensor_hw.c ****     /* PIO changed */
 453:hr_sensor_hw.c ****     uint32 pios = PioGets();
 454:hr_sensor_hw.c **** 
 455:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 456:hr_sensor_hw.c ****     {
 457:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 458:hr_sensor_hw.c ****         {
 459:hr_sensor_hw.c ****             /* This event comes when a button is pressed */
 460:hr_sensor_hw.c **** 
 461:hr_sensor_hw.c ****             /* Start a timer for LONG_BUTTON_PRESS_TIMER seconds. If timer expi-
 462:hr_sensor_hw.c ****              * res before we receive a button release event then it was a long -
 463:hr_sensor_hw.c ****              * press and if we receive a button release pio changed event, it -
 464:hr_sensor_hw.c ****              * means it was a short press.
 465:hr_sensor_hw.c ****              */
 466:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 467:hr_sensor_hw.c **** 
 468:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 469:hr_sensor_hw.c ****                                            EXTRA_LONG_BUTTON_PRESS_TIMER,
 470:hr_sensor_hw.c ****                                            TRUE,
 471:hr_sensor_hw.c ****                                            HandleExtraLongButtonPress);
 472:hr_sensor_hw.c ****         }
 473:hr_sensor_hw.c ****         else
 474:hr_sensor_hw.c ****         {
 475:hr_sensor_hw.c ****             /* This event comes when a button is released */
 476:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 477:hr_sensor_hw.c ****             {
 478:hr_sensor_hw.c ****                 /* Timer was already running. This means it was a short button 
 479:hr_sensor_hw.c ****                  * press.
 480:hr_sensor_hw.c ****                  */
 481:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 482:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 483:hr_sensor_hw.c **** 
 484:hr_sensor_hw.c ****                 HandleShortButtonPress();
 485:hr_sensor_hw.c ****             }
 486:hr_sensor_hw.c ****         }
 487:hr_sensor_hw.c ****     }
 488:hr_sensor_hw.c ****     /* Move DIMMER_PIO_MASK directly into file if problems */
 489:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 490:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 491:hr_sensor_hw.c ****     }
 492:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 493:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 494:hr_sensor_hw.c ****     {
 495:hr_sensor_hw.c ****         /* Process the event on the falling edge and ignore the rising edge 
 496:hr_sensor_hw.c ****          * events.
 497:hr_sensor_hw.c ****          */
 498:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 499:hr_sensor_hw.c ****         {
 500:hr_sensor_hw.c ****             HandleHRInputEvent();
 501:hr_sensor_hw.c ****         }
 502:hr_sensor_hw.c ****     }
 503:hr_sensor_hw.c **** #endif
 504:hr_sensor_hw.c **** 
 505:hr_sensor_hw.c **** }
 506:hr_sensor_hw.c **** 
 507:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 508:hr_sensor_hw.c ****  *  NAME
 509:hr_sensor_hw.c ****  *      HrInitSwitchHardware 
 510:hr_sensor_hw.c ****  *
 511:hr_sensor_hw.c ****  *  DESCRIPTION
 512:hr_sensor_hw.c ****  *      This function is called to initialise switch hardware
 513:hr_sensor_hw.c ****  *
 514:hr_sensor_hw.c ****  *  RETURNS
 515:hr_sensor_hw.c ****  *      Nothing.
 516:hr_sensor_hw.c ****  *
 517:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 518:hr_sensor_hw.c **** 
 519:hr_sensor_hw.c **** extern void HrInitSwitchHardware(void)
 520:hr_sensor_hw.c **** {
 521:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
 522:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
 523:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
 524:hr_sensor_hw.c **** 
 525:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 526:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 527:hr_sensor_hw.c **** 
 528:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 529:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
 530:hr_sensor_hw.c **** }
 531:hr_sensor_hw.c **** 
 532:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 533:hr_sensor_hw.c ****  *  NAME
 534:hr_sensor_hw.c ****  *      HrHwDataInit
 535:hr_sensor_hw.c ****  *
 536:hr_sensor_hw.c ****  *  DESCRIPTION
 537:hr_sensor_hw.c ****  *      This function initialises switch hardware data structure
 538:hr_sensor_hw.c ****  *
 539:hr_sensor_hw.c ****  *  RETURNS
 540:hr_sensor_hw.c ****  *      Nothing.
 541:hr_sensor_hw.c ****  *
 542:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 543:hr_sensor_hw.c **** 
 544:hr_sensor_hw.c **** extern void HrInitSwitchData(void)
 545:hr_sensor_hw.c **** {
  20                 	 1 548 0
 546:hr_sensor_hw.c ****     /* Reset last value */
 547:hr_sensor_hw.c **** }
  21                 	bra	0,X
  22 0000 00 E2       	.LFE8:
  23                 		.size	HrInitSwitchData, .-HrInitSwitchData
  24                 		.global	__size_of_HrInitSwitchData
  25                 		.equ	__size_of_HrInitSwitchData,. - HrInitSwitchData
  26                 		.section	.text.HandleSwitchPIOChangedEvent,"ax",@progbits
  27                 		.global	HandleSwitchPIOChangedEvent
  28                 		.type	HandleSwitchPIOChangedEvent, @function
  29                 	HandleSwitchPIOChangedEvent:
  30                 	.LFB9:
  31                 		.loc 1 563 0
 548:hr_sensor_hw.c **** 
 549:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 550:hr_sensor_hw.c ****  *  NAME
 551:hr_sensor_hw.c ****  *      HandleSwitchPIOChangedEvent
 552:hr_sensor_hw.c ****  *
 553:hr_sensor_hw.c ****  *  DESCRIPTION
 554:hr_sensor_hw.c ****  *      This function handles Switch PIO Changed event
 555:hr_sensor_hw.c ****  *
 556:hr_sensor_hw.c ****  *  RETURNS
 557:hr_sensor_hw.c ****  *      Nothing.
 558:hr_sensor_hw.c ****  *
 559:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 560:hr_sensor_hw.c **** 
 561:hr_sensor_hw.c **** extern void HandleSwitchPIOChangedEvent(uint32 pio_changed)
 562:hr_sensor_hw.c **** {
  32                 	c 1 564 0
  33                 		ld	AL,#0x0000
 563:hr_sensor_hw.c ****     g_dimmer_data.last_dimmer_var = 0;
  34                 	t	AL,@g_dimmer_data
  35 0000 00 14       		.loc 1 565 0
  36 0001 00 00 00 25 		bra	0,X
 564:hr_sensor_hw.c **** }...
  37                 	E9:
  38 0003 00 E2       		.size	HandleSwitchPIOChangedEvent, .-HandleSwitchPIOChangedEvent
  39                 		.global	__size_of_HandleSwitchPIOChangedEvent
  40                 		.equ	__size_of_HandleSwitchPIOChangedEvent,. - HandleSwitchPIOChangedEvent
  41                 		.section	.text.HrInitSwitchHardware,"ax",@progbits
  42                 		.global	HrInitSwitchHardware
  43                 		.type	HrInitSwitchHardware, @function
  44                 	HrInitSwitchHardware:
  45                 	.LFB7:
  46                 		.loc 1 521 0
  47                 		enter	#0x0002
 521:hr_sensor_hw.c **** {
  48                 	oc 1 522 0
  49 0000 02 0B       		ld	AL,#0x0001
  50                 		st	AL,@(0,Y)
 522:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
  51                 		AH,#0x0000
  52 0001 01 14       		ld	AL,#0x0008
  53 0002 00 27       		bsr	PioSetModes
  54 0003 00 10       		.loc 1 523 0
  55 0004 08 14       		ld	AL,#0x0003
  56 0005 00 00 00 00 		ld	AH,#0x0000
  56      00 9C 
 523:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
  57                 	ioSetDir
  58 0008 03 14       		.loc 1 524 0
  59 0009 00 10       		ld	AL,#0x0007
  60 000a 00 00 00 00 		st	AL,@(0,Y)
  60      00 9C 
 524:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
  61                 	AH,#0x0000
  62 000d 07 14       		ld	AL,#0x0008
  63 000e 00 27       		bsr	PioSetPullModes
  64 000f 00 10       		.loc 1 527 0
  65 0010 08 14       		ld	AL,#0x0001
  66 0011 00 00 00 00 		ld	AH,#0x0000
  66      00 9C 
 527:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
  67                 	ioEnableEdgeCapture
  68 0014 01 14       		.loc 1 530 0
  69 0015 00 10       		ld	AL,#0x0003
  70 0016 00 00 00 00 		st	AL,@(0,Y)
  70      00 9C 
 530:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
  71                 	AH,#0x0000
  72 0019 03 14       		ld	AL,#0x0008
  73 001a 00 27       		bsr	PioSetEventMask
  74 001b 00 10       		.loc 1 531 0
  75 001c 08 14       		leave	#0x0002
  76 001d 00 00 00 00 	.LFE7:
  76      00 9C 
 531:hr_sensor_hw.c **** }
  77                 		HrInitSwitchHardware, .-HrInitSwitchHardware
  78 0020 02 0F       		.global	__size_of_HrInitSwitchHardware
  79                 		.equ	__size_of_HrInitSwitchHardware,. - HrInitSwitchHardware
  80                 		.section	.text.HrHwDataInit,"ax",@progbits
  81                 		.global	HrHwDataInit
  82                 		.type	HrHwDataInit, @function
  83                 	HrHwDataInit:
  84                 	.LFB4:
  85                 		.loc 1 320 0
  86                 		enter	#0x0001
  87                 	.LCFI1:
 320:hr_sensor_hw.c **** {
  88                 	 0
  89 0000 01 0B       		ld	X,#g_app_hw_data+3
  90                 		ld	AL,@(0,X)
 323:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
  91                 	r	TimerDelete
  92 0001 00 00 00 18 		.loc 1 324 0
  93 0003 00 16       		ld	AL,#0x0000
  94 0004 00 00 00 00 		ld	X,#g_app_hw_data+3
  94      00 9C 
 324:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
  95                 	AL,@(0,X)
  96 0007 00 14       		.loc 1 326 0
  97 0008 00 00 00 18 		leave	#0x0001
  98 000a 00 26       	.LFE4:
 326:hr_sensor_hw.c **** }
  99                 	ze	HrHwDataInit, .-HrHwDataInit
 100 000b 01 0F       		.global	__size_of_HrHwDataInit
 101                 		.equ	__size_of_HrHwDataInit,. - HrHwDataInit
 102                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
 103                 		.global	HandlePIOChangedEvent
 104                 		.type	HandlePIOChangedEvent, @function
 105                 	HandlePIOChangedEvent:
 106                 	.LFB6:
 107                 		.loc 1 452 0
 108                 	.LVL1:
 109                 		enter	#0x0005
 452:hr_sensor_hw.c **** {
 110                 		AH,@(0x0002,Y)
 111                 		st	AL,@(0x0003,Y)
 112 0000 05 0B       	.LVL2:
 113                 		.loc 1 454 0
 114 0001 02 23       		bsr	PioGets
 115 0002 03 27       	.LVL3:
 116                 		ld	AH,@$XAP_AL
 454:hr_sensor_hw.c ****     uint32 pios = PioGets();
 117                 		.loc 1 456 0
 118 0003 00 00 00 00 		ld	AL,@(0x0003,Y)
 118      00 9C 
 119                 		and	AL,#0x0800
 120 0006 00 00 00 11 		beq	.L10
 121                 		.loc 1 458 0
 456:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 122                 	L,@$XAP_AH
 123 0008 03 17       		and	AL,#0x0800
 124 0009 08 00 00 C4 		bne	.L11
 125 000b 00 00 00 00 		.loc 1 467 0
 125      00 F4 
 458:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 126                 	AL,@g_app_hw_data+0x0003
 127 000e 00 00 00 15 		bsr	TimerDelete
 128 0010 08 00 00 C4 	.LVL5:
 129 0012 00 00 00 00 		.loc 1 469 0
 129      00 F0 
 467:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 130                 	AL,#0x0001
 131 0015 00 00 00 15 		st	AL,@(0,Y)
 132 0017 00 00 00 00 		ld	AL,#HandleExtraLongButtonPress
 132      00 9C 
 133                 		st	AL,@(0x0001,Y)
 469:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 134                 	AH,#0x003d
 135 001a 01 14       		ld	AL,#0x0900
 136 001b 00 27       		bsr	TimerCreate
 137 001c 00 00 00 14 		st	AL,@g_app_hw_data+0x0003
 138 001e 01 27       		bra	.L13
 139 001f 3D 10       	.LVL6:
 140 0020 09 00 00 14 	.L11:
 141 0022 00 00 00 00 		.loc 1 477 0
 141      00 9C 
 142 0025 00 00 00 25 		ld	AL,@g_app_hw_data+0x0003
 143 0027 00 00 00 00 		beq	.L13
 143      00 E0 
 144                 		.loc 1 482 0
 145                 		bsr	TimerDelete
 477:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 146                 	 1 483 0
 147 002a 00 00 00 15 		ld	AL,#0x0000
 148 002c 00 00 00 00 		st	AL,@g_app_hw_data+0x0003
 148      00 F4 
 482:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 149                 	oc 1 485 0
 150 002f 00 00 00 00 		bsr	HandleShortButtonPress
 150      00 9C 
 151                 		bra	.L13
 483:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 152                 	L8:
 153 0032 00 14       	.L10:
 154 0033 00 00 00 25 		.loc 1 490 0
 485:hr_sensor_hw.c ****                 HandleShortButtonPress();
 155                 		AL,@(0x0003,Y)
 156 0035 00 00 00 00 		and	AL,#0x0008
 156      00 9C 
 157 0038 00 00 00 00 		beq	.L13
 157      00 E0 
 158                 		.loc 1 491 0
 159                 		ld	AH,@(0x0002,Y)
 490:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 160                 	:
 161 003b 03 17       		ld	AL,@(0x0003,Y)
 162 003c 08 C4       		bsr	HandleSwitchPIOChangedEvent
 163 003d 00 00 00 00 	.LVL10:
 163      00 F4 
 491:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 164                 	:
 165 0040 02 13       		.loc 1 506 0
 166                 		leave	#0x0005
 167 0041 03 17       	.LFE6:
 168 0042 00 00 00 00 		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
 168      00 9C 
 169                 		.global	__size_of_HandlePIOChangedEvent
 170                 		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
 506:hr_sensor_hw.c **** }
 171                 	on	.text.SoundBuzzer,"ax",@progbits
 172 0045 05 0F       		.global	SoundBuzzer
 173                 		.type	SoundBuzzer, @function
 174                 	SoundBuzzer:
 175                 	.LFB5:
 176                 		.loc 1 344 0
 177                 	.LVL11:
 178                 		enter	#0x0006
 179                 	.LCFI3:
 180                 		st	AL,@(0x0002,Y)
 181                 		.loc 1 348 0
 344:hr_sensor_hw.c **** {
 182                 	000
 183                 	.LVL12:
 184 0000 06 0B       		ld	AH,#0x0000
 185                 		bsr	PioEnablePWM
 186 0001 02 27       		.loc 1 350 0
 348:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 187                 	L,@g_app_hw_data
 188 0002 00 14       		bsr	TimerDelete
 189                 		.loc 1 351 0
 190 0003 00 10       		ld	AL,#0x0000
 191 0004 00 00 00 00 		st	AL,@g_app_hw_data
 191      00 9C 
 350:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 192                 	 1 353 0
 193 0007 00 00 00 15 		st	AL,@g_app_hw_data+0x0002
 194 0009 00 00 00 00 		.loc 1 358 0
 194      00 9C 
 351:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 195                 		AL,@(0x0002,Y)
 196 000c 00 14       		st	AL,@g_app_hw_data+0x0001
 197 000d 00 00 00 25 		.loc 1 360 0
 353:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 198                 	p	AL,#0x0005
 199 000f 00 00 00 25 		bcc	.L15
 358:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 200                 	d	AL,#0x0001
 201 0011 02 17       		asl	@(0x0002,Y)
 202 0012 00 00 00 25 		ld	AH,@$XAP_AL
 360:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 203                 	d	AL,#0x001b
 204 0014 05 84       		bne	.L22
 205 0015 00 00 00 00 		ld	AL,@$XAP_AH
 205      00 F8 
 206 0018 01 14       		and	AL,#0x0004
 207 0019 02 A3       		beq	.L15
 208 001a 00 00 00 11 		ld	AL,#0x0007
 209 001c 1B C4       		st	AL,@(0x0003,Y)
 210 001d 00 00 00 00 		ld	AL,#0xa120
 210      00 F0 
 211 0020 00 00 00 15 		bra	.L21
 212 0022 04 C4       	.L15:
 213 0023 00 00 00 00 		.loc 1 388 0
 213      00 F4 
 214 0026 07 14       		ld	AL,#0x000b
 215 0027 03 27       		bsr	ReportPanic
 216 0028 A1 00 20 14 	.L22:
 217 002a 00 00 00 00 		ld	AL,#0x0001
 217      00 E0 
 218                 		st	AL,@(0x0003,Y)
 388:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 219                 	L21:
 220 002d 0B 14       		st	AL,@(0x0004,Y)
 221 002e 00 00 00 00 		.loc 1 396 0
 221      00 9C 
 222                 		tst	@g_app_hw_data+0x0001
 223 0031 01 14       		beq	.L20
 224 0032 03 27       		.loc 1 399 0
 225 0033 87 00 A0 14 		ld	AL,#0x0000
 226                 		st	AL,@g_app_hw_data+0x0002
 227 0035 04 27       		.loc 1 402 0
 396:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 228                 	x0001
 229 0036 00 00 00 99 		bsr	PioEnablePWM
 230 0038 00 00 00 00 		.loc 1 404 0
 230      00 F4 
 399:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 231                 		AL,@g_app_hw_data
 232 003b 00 14       		bsr	TimerDelete
 233 003c 00 00 00 25 		.loc 1 405 0
 402:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 234                 		AL,#0x0001
 235 003e 01 10       		st	AL,@(0,Y)
 236 003f 00 00 00 00 		ld	AL,#appBuzzerTimerHandler
 236      00 9C 
 404:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 237                 		AL,@(0x0001,Y)
 238 0042 00 00 00 15 		ld	AH,@(0x0003,Y)
 239 0044 00 00 00 00 		ld	AL,@(0x0004,Y)
 239      00 9C 
 405:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 240                 	r	TimerCreate
 241 0047 01 14       		st	AL,@g_app_hw_data
 242 0048 00 27       	.L20:
 243 0049 00 00 00 14 		.loc 1 409 0
 244 004b 01 27       		leave	#0x0006
 245 004c 03 13       	.LFE5:
 246 004d 04 17       		.size	SoundBuzzer, .-SoundBuzzer
 247 004e 00 00 00 00 		.global	__size_of_SoundBuzzer
 247      00 9C 
 248 0051 00 00 00 25 		.equ	__size_of_SoundBuzzer,. - SoundBuzzer
 249                 		.section	.text.appBuzzerTimerHandler,"ax",@progbits
 409:hr_sensor_hw.c **** }
 250                 	BuzzerTimerHandler, @function
 251 0053 06 0F       	appBuzzerTimerHandler:
 252                 	.LFB2:
 253                 		.loc 1 128 0
 254                 	.LVL13:
 255                 		enter	#0x0003
 256                 	.LCFI4:
 257                 		.loc 1 131 0
 258                 		ld	AL,#0x0000
 259                 	.LVL14:
 128:hr_sensor_hw.c **** {
 260                 	app_hw_data
 261                 		.loc 1 133 0
 262 0000 03 0B       		ld	AL,@g_app_hw_data+0x0001
 263                 		cmp	AL,#0x0003
 131:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 264                 		.L26
 265 0001 00 14       		cmp	AL,#0x0004
 266                 		bcc	.L28
 267 0002 00 00 00 25 		cmp	AL,#0x0001
 133:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 268                 		.L24
 269 0004 00 00 00 15 		bra	.L43
 270 0006 03 84       	.L28:
 271 0007 00 00 00 00 		cmp	AL,#0x0004
 271      00 F4 
 272 000a 04 84       		bne	.L24
 273 000b 00 00 00 00 		bra	.L44
 273      00 F8 
 274 000e 01 84       	.L43:
 275 000f 00 00 00 00 		.loc 1 138 0
 275      00 FC 
 276 0012 00 00 00 00 		ld	X,#0x0000
 276      00 E0 
 277                 		st	X,@g_app_hw_data+0x0001
 278 0015 04 84       		.loc 1 141 0
 279 0016 00 00 00 00 		ld	AL,#0x0000
 279      00 F0 
 280 0019 00 00 00 00 		ld	AH,#0x0000
 280      00 E0 
 281                 		bra	.L41
 138:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 282                 	146 0
 283 001c 00 18       		ld	AL,@g_app_hw_data+0x0002
 284 001d 00 00 00 29 		bne	.L30
 141:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 285                 	oc 1 149 0
 286 001f 00 14       		ld	AL,#0x0001
 287 0020 00 10       		bra	.L40
 288 0021 00 00 00 00 	.L30:
 288      00 E0 
 289                 		.loc 1 157 0
 146:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 290                 	AL,#0x0001
 291 0024 00 00 00 15 		bne	.L35
 292 0026 00 00 00 00 		.loc 1 159 0
 292      00 F0 
 149:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 293                 		X,#0x0002
 294 0029 01 14       		st	X,@g_app_hw_data+0x0002
 295 002a 00 00 00 00 		bra	.L42
 295      00 E0 
 296                 	.L44:
 157:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 297                 	c 1 181 0
 298 002d 01 84       		ld	AL,@g_app_hw_data+0x0002
 299 002e 00 00 00 00 		beq	.L32
 299      00 F0 
 159:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 300                 	p	AL,#0x0002
 301 0031 02 18       		bne	.L33
 302 0032 00 00 00 29 	.L32:
 303 0034 00 00 00 00 		.loc 1 185 0
 303      00 E0 
 304                 		add	AL,#0x0001
 181:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 305                 	
 306 0037 00 00 00 15 		st	AL,@g_app_hw_data+0x0002
 307 0039 00 00 00 00 		.loc 1 188 0
 307      00 F4 
 308 003c 02 84       		ld	AL,#0x0000
 309 003d 00 00 00 00 		ld	AH,#0x0000
 309      00 F0 
 310                 		bsr	PioEnablePWM
 185:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 311                 	H,#0x0000
 312 0040 01 34       	.LVL15:
 313                 		ld	AL,#0x61a8
 314 0041 00 00 00 25 	.LVL16:
 188:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 315                 		.L29
 316 0043 00 14       	.LVL17:
 317 0044 00 10       	.L33:
 318 0045 00 00 00 00 		.loc 1 193 0
 318      00 9C 
 319 0048 00 10       		cmp	AL,#0x0001
 320                 		beq	.L34
 321 0049 62 00 A8 14 		cmp	AL,#0x0003
 322                 		bne	.L35
 323 004b 00 00 00 00 	.L34:
 323      00 E0 
 324                 		.loc 1 196 0
 325                 		add	AL,#0x0001
 193:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 326                 	pp_hw_data+0x0002
 327 004e 01 84       	.L42:
 328 004f 00 00 00 00 		.loc 1 199 0
 328      00 F4 
 329 0052 03 84       		ld	AL,#0x0000
 330 0053 00 00 00 00 		ld	AH,#0x0001
 330      00 F0 
 331                 	.L41:
 196:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 332                 	ioEnablePWM
 333 0056 01 34       		bra	.L39
 334 0057 00 00 00 25 	.L35:
 335                 		.loc 1 206 0
 199:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 336                 	AL,#0x0000
 337 0059 00 14       		st	AL,@g_app_hw_data+0x0002
 338 005a 01 10       		.loc 1 209 0
 339                 		ld	AH,#0x0000
 340 005b 00 00 00 00 		bsr	PioEnablePWM
 340      00 9C 
 341 005e 00 00 00 00 		.loc 1 211 0
 341      00 E0 
 342                 		ld	X,#0x0000
 206:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 343                 	g_app_hw_data+0x0001
 344 0061 00 14       		bra	.L39
 345 0062 00 00 00 25 	.L24:
 209:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 346                 	oc 1 219 0
 347 0064 00 10       		ld	AL,#0x000b
 348 0065 00 00 00 00 		bsr	ReportPanic
 348      00 9C 
 211:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 349                 	9:
 350 0068 00 18       		ld	AH,#0x0001
 351 0069 00 00 00 29 	.LVL18:
 352 006b 00 00 00 00 		ld	AL,#0x86a0
 352      00 E0 
 353                 	.LVL19:
 219:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 354                 	
 355 006e 0B 14       		.loc 1 227 0
 356 006f 00 00 00 00 		tst	@g_app_hw_data+0x0001
 356      00 9C 
 357                 		beq	.L37
 358 0072 01 10       		.loc 1 230 0
 359                 		ld	X,#0x0001
 360 0073 87 00 A0 14 		st	X,@(0,Y)
 361                 		ld	X,#appBuzzerTimerHandler
 362                 		st	X,@(0x0001,Y)
 227:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 363                 	erCreate
 364 0075 00 00 00 99 	.LVL20:
 365 0077 00 00 00 00 		st	AL,@g_app_hw_data
 365      00 F4 
 230:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 366                 	L21:
 367 007a 01 18       	.L37:
 368 007b 00 2B       		.loc 1 233 0
 369 007c 00 00 00 18 		leave	#0x0003
 370 007e 01 2B       	.LFE2:
 371 007f 00 00 00 00 		.size	appBuzzerTimerHandler, .-appBuzzerTimerHandler
 371      00 9C 
 372                 		.equ	__size_of_appBuzzerTimerHandler,. - appBuzzerTimerHandler
 373 0082 00 00 00 25 		.section	.text.HrInitHardware,"ax",@progbits
 374                 		.global	HrInitHardware
 375                 		.type	HrInitHardware, @function
 233:hr_sensor_hw.c **** }
 376                 	ware:
 377 0084 03 0F       	.LFB3:
 378                 		.loc 1 254 0
 379                 		enter	#0x0008
 380                 	.LCFI5:
 381                 		.loc 1 266 0
 382                 		ld	AL,#0x0000
 383                 		st	AL,@(0,Y)
 384                 		ld	AH,#0x0000
 385                 		ld	AL,#0x0800
 254:hr_sensor_hw.c **** {
 386                 	tModes
 387 0000 08 0B       		.loc 1 267 0
 388                 		ld	AL,#0x000b
 266:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 389                 		AH,#0x0000
 390 0001 00 14       		bsr	PioSetDir
 391 0002 00 27       		.loc 1 268 0
 392 0003 00 10       		ld	AL,#0x0007
 393 0004 08 00 00 14 		st	AL,@(0,Y)
 394 0006 00 00 00 00 		ld	AH,#0x0000
 394      00 9C 
 267:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 395                 	,#0x0800
 396 0009 0B 14       		bsr	PioSetPullModes
 397 000a 00 10       		.loc 1 271 0
 398 000b 00 00 00 00 		ld	AL,#0x0003
 398      00 9C 
 268:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 399                 	AL,@(0,Y)
 400 000e 07 14       		ld	AH,#0x0000
 401 000f 00 27       		ld	AL,#0x0800
 402 0010 00 10       		bsr	PioSetEventMask
 403 0011 08 00 00 14 		.loc 1 288 0
 404 0013 00 00 00 00 		ld	AL,#0x0004
 404      00 9C 
 271:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 405                 	,@(0,Y)
 406 0016 03 14       		ld	AH,#0x0000
 407 0017 00 27       		ld	AL,#0x0008
 408 0018 00 10       		bsr	PioSetModes
 409 0019 08 00 00 14 		.loc 1 291 0
 410 001b 00 00 00 00 		ld	AL,#0x0002
 410      00 9C 
 288:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 411                 	,@(0,Y)
 412 001e 04 14       		ld	AL,#0x000f
 413 001f 00 27       		st	AL,@(0x0001,Y)
 414 0020 00 10       		ld	AL,#0x0000
 415 0021 08 14       		st	AL,@(0x0002,Y)
 416 0022 00 00 00 00 		ld	AL,#0x0002
 416      00 9C 
 291:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 417                 	,@(0x0003,Y)
 418 0025 02 14       		ld	AL,#0x000f
 419 0026 00 27       		st	AL,@(0x0004,Y)
 420 0027 0F 14       		ld	AL,#0x0000
 421 0028 01 27       		st	AL,@(0x0005,Y)
 422 0029 00 14       		ld	AL,#0x00ff
 423 002a 02 27       		st	AL,@(0x0006,Y)
 424 002b 02 14       		ld	AL,#0x0000
 425 002c 03 27       		ld	AH,#0x0000
 426 002d 0F 14       		bsr	PioConfigPWM
 427 002e 04 27       		.loc 1 296 0
 428 002f 00 14       		ld	AL,#0x0000
 429 0030 05 27       		ld	AH,#0x0000
 430 0031 01 00 FF 14 		bsr	PioEnablePWM
 431 0033 06 27       		.loc 1 301 0
 432 0034 00 14       		ld	AL,#0x0005
 433 0035 00 10       		bsr	PioSetI2CPullMode
 434 0036 00 00 00 00 		.loc 1 303 0
 434      00 9C 
 296:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 435                 	ardware
 436 0039 00 14       		.loc 1 304 0
 437 003a 00 10       		leave	#0x0008
 438 003b 00 00 00 00 	.LFE3:
 438      00 9C 
 301:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 439                 	ze	HrInitHardware, .-HrInitHardware
 440 003e 05 14       		.global	__size_of_HrInitHardware
 441 003f 00 00 00 00 		.equ	__size_of_HrInitHardware,. - HrInitHardware
 441      00 9C 
 303:hr_sensor_hw.c ****     HrInitSwitchHardware();
 442                 	omm g_app_hw_data, 4, 1
 443 0042 00 00 00 00 	
 443      00 9C 
 304:hr_sensor_hw.c **** }
 444                 	comm g_dimmer_data, 1, 1
 445 0045 08 0F       	
 446                 		.section	.debug_frame,"",@progbits
 447                 	.Lframe0:
 448                 		.4byte	.LECIE0-.LSCIE0
 449                 	.LSCIE0:
 450                 		.4byte	0xffffffff
 451                 		.1byte	0x1
 452                 		.ascii "\000"
 453                 		.1byte	0x1
 454                 		.1byte	0x7f
 455                 		.1byte	0x3
 456 0000 00 00 00 00 		.1byte	0xc
 457                 		.1byte	0x5
 458 0002 FF FF FF FF 		.1byte	0x0
 459 0004 01          		.p2align	2
 460 0004 00          	.LECIE0:
 461 0005 01          	.LSFDE0:
 462 0005 7F          		.4byte	.LEFDE0-.LASFDE0
 463 0006 03          	.LASFDE0:
 464 0006 0C          		.4byte	.Lframe0
 465 0007 05          		.4byte	.LFB8
 466 0007 00          		.4byte	.LFE8-.LFB8
 467                 		.p2align	2
 468                 	.LEFDE0:
 469                 	.LSFDE2:
 470 0008 00 00 00 00 		.4byte	.LEFDE2-.LASFDE2
 471                 	.LASFDE2:
 472 000a 00 00 00 00 		.4byte	.Lframe0
 473 000c 00 00 00 00 		.4byte	.LFB9
 474 000e 00 00 00 01 		.4byte	.LFE9-.LFB9
 475                 		.p2align	2
 476                 	.LEFDE2:
 477                 	.LSFDE4:
 478 0010 00 00 00 00 		.4byte	.LEFDE4-.LASFDE4
 479                 	.LASFDE4:
 480 0012 00 00 00 00 		.4byte	.Lframe0
 481 0014 00 00 00 00 		.4byte	.LFB7
 482 0016 00 00 00 00 		.4byte	.LFE7-.LFB7
 483                 		.1byte	0x4
 484                 		.4byte	.LCFI0-.LFB7
 485                 		.1byte	0xe
 486 0018 00 00 00 00 		.1byte	0x2
 487                 		.1byte	0x83
 488 001a 00 00 00 00 		.1byte	0x1
 489 001c 00 00 00 00 		.p2align	2
 490 001e 00 00 00 00 	.LEFDE4:
 491 0020 41          	.LSFDE6:
 492                 		.4byte	.LEFDE6-.LASFDE6
 493 0020 0E          	.LASFDE6:
 494 0021 02          		.4byte	.Lframe0
 495 0021 83          		.4byte	.LFB4
 496 0022 01          		.4byte	.LFE4-.LFB4
 497 0022 00 00 00    		.1byte	0x4
 498                 		.4byte	.LCFI1-.LFB4
 499                 		.1byte	0xe
 500 0024 00 00 00 00 		.1byte	0x1
 501                 		.1byte	0x83
 502 0026 00 00 00 00 		.1byte	0x1
 503 0028 00 00 00 00 		.p2align	2
 504 002a 00 00 00 00 	.LEFDE6:
 505 002c 41          	.LSFDE8:
 506                 		.4byte	.LEFDE8-.LASFDE8
 507 002c 0E          	.LASFDE8:
 508 002d 01          		.4byte	.Lframe0
 509 002d 83          		.4byte	.LFB6
 510 002e 01          		.4byte	.LFE6-.LFB6
 511 002e 00 00 00    		.1byte	0x4
 512                 		.4byte	.LCFI2-.LFB6
 513                 		.1byte	0xe
 514 0030 00 00 00 00 		.1byte	0x5
 515                 		.1byte	0x83
 516 0032 00 00 00 00 		.1byte	0x1
 517 0034 00 00 00 00 		.p2align	2
 518 0036 00 00 00 00 	.LEFDE8:
 519 0038 41          	.LSFDE10:
 520                 		.4byte	.LEFDE10-.LASFDE10
 521 0038 0E          	.LASFDE10:
 522 0039 05          		.4byte	.Lframe0
 523 0039 83          		.4byte	.LFB5
 524 003a 01          		.4byte	.LFE5-.LFB5
 525 003a 00 00 00    		.1byte	0x4
 526                 		.4byte	.LCFI3-.LFB5
 527                 		.1byte	0xe
 528 003c 00 00 00 00 		.1byte	0x6
 529                 		.1byte	0x83
 530 003e 00 00 00 00 		.1byte	0x1
 531 0040 00 00 00 00 		.p2align	2
 532 0042 00 00 00 00 	.LEFDE10:
 533 0044 41          	.LSFDE12:
 534                 		.4byte	.LEFDE12-.LASFDE12
 535 0044 0E          	.LASFDE12:
 536 0045 06          		.4byte	.Lframe0
 537 0045 83          		.4byte	.LFB2
 538 0046 01          		.4byte	.LFE2-.LFB2
 539 0046 00 00 00    		.1byte	0x4
 540                 		.4byte	.LCFI4-.LFB2
 541                 		.1byte	0xe
 542 0048 00 00 00 00 		.1byte	0x3
 543                 		.1byte	0x83
 544 004a 00 00 00 00 		.1byte	0x1
 545 004c 00 00 00 00 		.p2align	2
 546 004e 00 00 00 00 	.LEFDE12:
 547 0050 41          	.LSFDE14:
 548                 		.4byte	.LEFDE14-.LASFDE14
 549 0050 0E          	.LASFDE14:
 550 0051 03          		.4byte	.Lframe0
 551 0051 83          		.4byte	.LFB3
 552 0052 01          		.4byte	.LFE3-.LFB3
 553 0052 00 00 00    		.1byte	0x4
 554                 		.4byte	.LCFI5-.LFB3
 555                 		.1byte	0xe
 556 0054 00 00 00 00 		.1byte	0x8
 557                 		.1byte	0x83
 558 0056 00 00 00 00 		.1byte	0x1
 559 0058 00 00 00 00 		.p2align	2
 560 005a 00 00 00 00 	.LEFDE14:
 561 005c 41          		.text
 562                 	.Letext0:
 563 005c 0E          		.section	.debug_loc,"",@progbits
 564 005d 08          	.Ldebug_loc0:
 565 005d 83          	.LLST2:
 566 005e 01          		.4byte	.LFB7
 567 005e 00 00 00    		.4byte	.LCFI0
 568                 		.2byte	0x1
 569                 		.1byte	0x55
 570                 		.4byte	.LCFI0
 571                 		.4byte	.LFE7
 572                 		.2byte	0x2
 573                 		.1byte	0x75
 574 0000 00 00 00 00 		.1byte	0x2
 575 0002 00 00 00 00 		.4byte	0x0
 576 0004 00 01       		.4byte	0x0
 577 0005 55          	.LLST3:
 578 0005 00 00 00 00 		.4byte	.LFB4
 579 0007 00 00 00 00 		.4byte	.LCFI1
 580 0009 00 02       		.2byte	0x1
 581 000a 75          		.1byte	0x55
 582 000b 02          		.4byte	.LCFI1
 583 000b 00 00 00 00 		.4byte	.LFE4
 584 000d 00 00 00 00 		.2byte	0x2
 585                 		.1byte	0x75
 586 000f 00 00 00 00 		.1byte	0x1
 587 0011 00 00 00 00 		.4byte	0x0
 588 0013 00 01       		.4byte	0x0
 589 0014 55          	.LLST4:
 590 0015 00 00 00 00 		.4byte	.LFB6
 591 0017 00 00 00 00 		.4byte	.LCFI2
 592 0019 00 02       		.2byte	0x1
 593 001a 75          		.1byte	0x55
 594 001a 01          		.4byte	.LCFI2
 595 001b 00 00 00 00 		.4byte	.LFE6
 596 001d 00 00 00 00 		.2byte	0x2
 597                 		.1byte	0x75
 598 001f 00 00 00 00 		.1byte	0x5
 599 0021 00 00 00 00 		.4byte	0x0
 600 0023 00 01       		.4byte	0x0
 601 0024 55          	.LLST5:
 602 0024 00 00 00 00 		.4byte	.LVL1
 603 0026 00 00 00 00 		.4byte	.LVL3
 604 0028 00 02       		.2byte	0x6
 605 0029 75          		.1byte	0x50
 606 002a 05          		.1byte	0x93
 607 002a 00 00 00 00 		.1byte	0x2
 608 002c 00 00 00 00 		.1byte	0x51
 609                 		.1byte	0x93
 610 002e 00 00 00 00 		.1byte	0x2
 611 0030 00 00 00 00 		.4byte	0x0
 612 0032 00 06       		.4byte	0x0
 613 0033 50          	.LLST6:
 614 0034 93          		.4byte	.LFB5
 615 0034 02          		.4byte	.LCFI3
 616 0035 51          		.2byte	0x1
 617 0035 93          		.1byte	0x55
 618 0036 02          		.4byte	.LCFI3
 619 0036 00 00 00 00 		.4byte	.LFE5
 620 0038 00 00 00 00 		.2byte	0x2
 621                 		.1byte	0x75
 622 003a 00 00 00 00 		.1byte	0x6
 623 003c 00 00 00 00 		.4byte	0x0
 624 003e 00 01       		.4byte	0x0
 625 003f 55          	.LLST7:
 626 0040 00 00 00 00 		.4byte	.LVL11
 627 0042 00 00 00 00 		.4byte	.LVL12
 628 0044 00 02       		.2byte	0x1
 629 0045 75          		.1byte	0x51
 630 0045 06          		.4byte	.LVL12
 631 0046 00 00 00 00 		.4byte	.LFE5
 632 0048 00 00 00 00 		.2byte	0x2
 633                 		.1byte	0x76
 634 004a 00 00 00 00 		.1byte	0x2
 635 004c 00 00 00 00 		.4byte	0x0
 636 004e 00 01       		.4byte	0x0
 637 004f 51          	.LLST8:
 638 004f 00 00 00 00 		.4byte	.LFB2
 639 0051 00 00 00 00 		.4byte	.LCFI4
 640 0053 00 02       		.2byte	0x1
 641 0054 76          		.1byte	0x55
 642 0055 02          		.4byte	.LCFI4
 643 0055 00 00 00 00 		.4byte	.LFE2
 644 0057 00 00 00 00 		.2byte	0x2
 645                 		.1byte	0x75
 646 0059 00 00 00 00 		.1byte	0x3
 647 005b 00 00 00 00 		.4byte	0x0
 648 005d 00 01       		.4byte	0x0
 649 005e 55          	.LLST9:
 650 005f 00 00 00 00 		.4byte	.LVL13
 651 0061 00 00 00 00 		.4byte	.LVL14
 652 0063 00 02       		.2byte	0x1
 653 0064 75          		.1byte	0x51
 654 0064 03          		.4byte	0x0
 655 0065 00 00 00 00 		.4byte	0x0
 656 0067 00 00 00 00 	.LLST10:
 657                 		.4byte	.LVL16
 658 0069 00 00 00 00 		.4byte	.LVL17
 659 006b 00 00 00 00 		.2byte	0x6
 660 006d 00 01       		.1byte	0x50
 661 006e 51          		.1byte	0x93
 662 006e 00 00 00 00 		.1byte	0x2
 663 0070 00 00 00 00 		.1byte	0x51
 664                 		.1byte	0x93
 665 0072 00 00 00 00 		.1byte	0x2
 666 0074 00 00 00 00 		.4byte	.LVL19
 667 0076 00 06       		.4byte	.LVL20
 668 0077 50          		.2byte	0x6
 669 0078 93          		.1byte	0x50
 670 0078 02          		.1byte	0x93
 671 0079 51          		.1byte	0x2
 672 0079 93          		.1byte	0x51
 673 007a 02          		.1byte	0x93
 674 007a 00 00 00 00 		.1byte	0x2
 675 007c 00 00 00 00 		.4byte	.LVL21
 676 007e 00 06       		.4byte	.LFE2
 677 007f 50          		.2byte	0x6
 678 0080 93          		.1byte	0x50
 679 0080 02          		.1byte	0x93
 680 0081 51          		.1byte	0x2
 681 0081 93          		.1byte	0x51
 682 0082 02          		.1byte	0x93
 683 0082 00 00 00 00 		.1byte	0x2
 684 0084 00 00 00 00 		.4byte	0x0
 685 0086 00 06       		.4byte	0x0
 686 0087 50          	.LLST11:
 687 0088 93          		.4byte	.LFB3
 688 0088 02          		.4byte	.LCFI5
 689 0089 51          		.2byte	0x1
 690 0089 93          		.1byte	0x55
 691 008a 02          		.4byte	.LCFI5
 692 008a 00 00 00 00 		.4byte	.LFE3
 693 008c 00 00 00 00 		.2byte	0x2
 694                 		.1byte	0x75
 695 008e 00 00 00 00 		.1byte	0x8
 696 0090 00 00 00 00 		.4byte	0x0
 697 0092 00 01       		.4byte	0x0
 698 0093 55          		.file 2 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/types.h"
 699 0094 00 00 00 00 		.file 3 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/pio.h"
 700 0096 00 00 00 00 		.file 4 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/timer.h"
 701 0098 00 02       		.file 5 "hr_sensor_hw.h"
 702 0099 75          		.file 6 "app_gatt.h"
 703 0099 08          		.section	.debug_info
 704 009a 00 00 00 00 		.4byte	0x407
 705 009c 00 00 00 00 		.2byte	0x2
 706                 		.4byte	.Ldebug_abbrev0
 707                 		.1byte	0x4
 708                 		.1byte	0x1
 709                 		.4byte	.LASF93
 710                 		.1byte	0x1
 711                 		.4byte	.LASF94
 712 0000 00 00 04 07 		.4byte	.LASF95
 713 0002 00 02       		.4byte	0x0
 714 0003 00 00 00 00 		.4byte	0x0
 715 0005 04          		.4byte	.Ldebug_ranges0+0x0
 716 0005 01          		.4byte	.Ldebug_line0
 717 0006 00 00 00 00 		.1byte	0x2
 718 0008 01          		.1byte	0x2
 719 0008 00 00 00 00 		.1byte	0x8
 720 000a 00 00 00 00 		.4byte	.LASF0
 721 000c 00 00 00 00 		.1byte	0x3
 722 000e 00 00 00 00 		.4byte	.LASF2
 723 0010 00 00 00 00 		.1byte	0x2
 724 0012 00 00 00 00 		.1byte	0x1f
 725 0014 02          		.4byte	0x3b
 726 0015 02          		.1byte	0x2
 727 0015 08          		.1byte	0x2
 728 0016 00 00 00 00 		.1byte	0x7
 729 0018 03          		.4byte	.LASF1
 730 0018 00 00 00 00 		.1byte	0x3
 731 001a 02          		.4byte	.LASF3
 732 001b 1F          		.1byte	0x2
 733 001b 00 00 00 3B 		.1byte	0x20
 734 001d 02          		.4byte	0x4d
 735 001e 02          		.1byte	0x2
 736 001e 07          		.1byte	0x4
 737 001f 00 00 00 00 		.1byte	0x7
 738 0021 03          		.4byte	.LASF4
 739 0021 00 00 00 00 		.1byte	0x2
 740 0023 02          		.1byte	0x2
 741 0024 20          		.1byte	0x6
 742 0024 00 00 00 4D 		.4byte	.LASF5
 743 0026 02          		.1byte	0x2
 744 0027 04          		.1byte	0x2
 745 0027 07          		.1byte	0x5
 746 0028 00 00 00 00 		.4byte	.LASF6
 747 002a 02          		.1byte	0x2
 748 002a 02          		.1byte	0x4
 749 002b 06          		.1byte	0x5
 750 002b 00 00 00 00 		.4byte	.LASF7
 751 002d 02          		.1byte	0x2
 752 002e 02          		.1byte	0x2
 753 002e 05          		.1byte	0x7
 754 002f 00 00 00 00 		.4byte	.LASF8
 755 0031 02          		.1byte	0x4
 756 0031 04          		.1byte	0x2
 757 0032 05          		.1byte	0x3
 758 0032 00 00 00 00 		.1byte	0x1b
 759 0034 02          		.4byte	0x10f
 760 0035 02          		.1byte	0x5
 761 0035 07          		.4byte	.LASF9
 762 0036 00 00 00 00 		.1byte	0x0
 763 0038 04          		.1byte	0x5
 764 0038 02          		.4byte	.LASF10
 765 0039 03          		.1byte	0x1
 766 0039 1B          		.1byte	0x5
 767 003a 00 00 01 0F 		.4byte	.LASF11
 768 003c 05          		.1byte	0x3
 769 003c 00 00 00 00 		.1byte	0x5
 770 003e 00          		.4byte	.LASF12
 771 003f 05          		.1byte	0x4
 772 003f 00 00 00 00 		.1byte	0x5
 773 0041 01          		.4byte	.LASF13
 774 0042 05          		.1byte	0x5
 775 0042 00 00 00 00 		.1byte	0x5
 776 0044 03          		.4byte	.LASF14
 777 0045 05          		.1byte	0x6
 778 0045 00 00 00 00 		.1byte	0x5
 779 0047 04          		.4byte	.LASF15
 780 0048 05          		.1byte	0x7
 781 0048 00 00 00 00 		.1byte	0x5
 782 004a 05          		.4byte	.LASF16
 783 004b 05          		.1byte	0x8
 784 004b 00 00 00 00 		.1byte	0x5
 785 004d 06          		.4byte	.LASF17
 786 004e 05          		.1byte	0x9
 787 004e 00 00 00 00 		.1byte	0x5
 788 0050 07          		.4byte	.LASF18
 789 0051 05          		.1byte	0xa
 790 0051 00 00 00 00 		.1byte	0x5
 791 0053 08          		.4byte	.LASF19
 792 0054 05          		.1byte	0xb
 793 0054 00 00 00 00 		.1byte	0x5
 794 0056 09          		.4byte	.LASF20
 795 0057 05          		.1byte	0xc
 796 0057 00 00 00 00 		.1byte	0x5
 797 0059 0A          		.4byte	.LASF21
 798 005a 05          		.1byte	0xd
 799 005a 00 00 00 00 		.1byte	0x5
 800 005c 0B          		.4byte	.LASF22
 801 005d 05          		.1byte	0xe
 802 005d 00 00 00 00 		.1byte	0x5
 803 005f 0C          		.4byte	.LASF23
 804 0060 05          		.1byte	0xf
 805 0060 00 00 00 00 		.1byte	0x5
 806 0062 0D          		.4byte	.LASF24
 807 0063 05          		.1byte	0x10
 808 0063 00 00 00 00 		.1byte	0x5
 809 0065 0E          		.4byte	.LASF25
 810 0066 05          		.1byte	0x11
 811 0066 00 00 00 00 		.1byte	0x5
 812 0068 0F          		.4byte	.LASF26
 813 0069 05          		.1byte	0x12
 814 0069 00 00 00 00 		.1byte	0x5
 815 006b 10          		.4byte	.LASF27
 816 006c 05          		.1byte	0x13
 817 006c 00 00 00 00 		.1byte	0x5
 818 006e 11          		.4byte	.LASF28
 819 006f 05          		.1byte	0x14
 820 006f 00 00 00 00 		.1byte	0x5
 821 0071 12          		.4byte	.LASF29
 822 0072 05          		.1byte	0x15
 823 0072 00 00 00 00 		.1byte	0x5
 824 0074 13          		.4byte	.LASF30
 825 0075 05          		.1byte	0x16
 826 0075 00 00 00 00 		.1byte	0x5
 827 0077 14          		.4byte	.LASF31
 828 0078 05          		.1byte	0x17
 829 0078 00 00 00 00 		.1byte	0x5
 830 007a 15          		.4byte	.LASF32
 831 007b 05          		.1byte	0x18
 832 007b 00 00 00 00 		.1byte	0x5
 833 007d 16          		.4byte	.LASF33
 834 007e 05          		.1byte	0x19
 835 007e 00 00 00 00 		.1byte	0x0
 836 0080 17          		.1byte	0x4
 837 0081 05          		.1byte	0x2
 838 0081 00 00 00 00 		.1byte	0x3
 839 0083 18          		.1byte	0x90
 840 0084 05          		.4byte	0x142
 841 0084 00 00 00 00 		.1byte	0x5
 842 0086 19          		.4byte	.LASF34
 843 0087 00          		.1byte	0x0
 844 0087 04          		.1byte	0x5
 845 0088 02          		.4byte	.LASF35
 846 0088 03          		.1byte	0x1
 847 0089 90          		.1byte	0x5
 848 0089 00 00 01 42 		.4byte	.LASF36
 849 008b 05          		.1byte	0x3
 850 008c 00 00 00 00 		.1byte	0x5
 851 008e 00          		.4byte	.LASF37
 852 008e 05          		.1byte	0x5
 853 008f 00 00 00 00 		.1byte	0x5
 854 0091 01          		.4byte	.LASF38
 855 0091 05          		.1byte	0x7
 856 0092 00 00 00 00 		.1byte	0x5
 857 0094 03          		.4byte	.LASF39
 858 0094 05          		.1byte	0x9
 859 0095 00 00 00 00 		.1byte	0x5
 860 0097 05          		.4byte	.LASF40
 861 0097 05          		.1byte	0xd
 862 0098 00 00 00 00 		.1byte	0x0
 863 009a 07          		.1byte	0x4
 864 009a 05          		.1byte	0x2
 865 009b 00 00 00 00 		.1byte	0x3
 866 009d 09          		.1byte	0xa7
 867 009d 05          		.4byte	0x175
 868 009e 00 00 00 00 		.1byte	0x5
 869 00a0 0D          		.4byte	.LASF41
 870 00a0 00          		.1byte	0x0
 871 00a1 04          		.1byte	0x5
 872 00a1 02          		.4byte	.LASF42
 873 00a2 03          		.1byte	0x1
 874 00a2 A7          		.1byte	0x5
 875 00a3 00 00 01 75 		.4byte	.LASF43
 876 00a5 05          		.1byte	0x3
 877 00a5 00 00 00 00 		.1byte	0x5
 878 00a7 00          		.4byte	.LASF44
 879 00a8 05          		.1byte	0x5
 880 00a8 00 00 00 00 		.1byte	0x5
 881 00aa 01          		.4byte	.LASF45
 882 00ab 05          		.1byte	0x7
 883 00ab 00 00 00 00 		.1byte	0x5
 884 00ad 03          		.4byte	.LASF46
 885 00ae 05          		.1byte	0x9
 886 00ae 00 00 00 00 		.1byte	0x5
 887 00b0 05          		.4byte	.LASF47
 888 00b1 05          		.1byte	0xd
 889 00b1 00 00 00 00 		.1byte	0x0
 890 00b3 07          		.1byte	0x4
 891 00b4 05          		.1byte	0x2
 892 00b4 00 00 00 00 		.1byte	0x3
 893 00b6 09          		.1byte	0xb9
 894 00b7 05          		.4byte	0x196
 895 00b7 00 00 00 00 		.1byte	0x5
 896 00b9 0D          		.4byte	.LASF48
 897 00ba 00          		.1byte	0x0
 898 00ba 04          		.1byte	0x5
 899 00bb 02          		.4byte	.LASF49
 900 00bb 03          		.1byte	0x1
 901 00bc B9          		.1byte	0x5
 902 00bc 00 00 01 96 		.4byte	.LASF50
 903 00be 05          		.1byte	0x2
 904 00bf 00 00 00 00 		.1byte	0x5
 905 00c1 00          		.4byte	.LASF51
 906 00c1 05          		.1byte	0x3
 907 00c2 00 00 00 00 		.1byte	0x0
 908 00c4 01          		.1byte	0x6
 909 00c4 05          		.1byte	0x2
 910 00c5 00 00 00 00 		.1byte	0x3
 911 00c7 02          		.2byte	0x1a3
 912 00c7 05          		.4byte	0x1b8
 913 00c8 00 00 00 00 		.1byte	0x5
 914 00ca 03          		.4byte	.LASF52
 915 00ca 00          		.1byte	0x0
 916 00cb 06          		.1byte	0x5
 917 00cb 02          		.4byte	.LASF53
 918 00cc 03          		.1byte	0x1
 919 00cc 01 A3       		.1byte	0x5
 920 00cd 00 00 01 B8 		.4byte	.LASF54
 921 00cf 05          		.1byte	0x2
 922 00d0 00 00 00 00 		.1byte	0x5
 923 00d2 00          		.4byte	.LASF55
 924 00d2 05          		.1byte	0x3
 925 00d3 00 00 00 00 		.1byte	0x0
 926 00d5 01          		.1byte	0x7
 927 00d5 05          		.1byte	0x2
 928 00d6 00 00 00 00 		.1byte	0x7
 929 00d8 02          		.1byte	0x3
 930 00d8 05          		.4byte	.LASF56
 931 00d9 00 00 00 00 		.1byte	0x4
 932 00db 03          		.1byte	0x1f
 933 00db 00          		.4byte	0x30
 934 00dc 07          		.1byte	0x4
 935 00dc 02          		.1byte	0x2
 936 00dd 07          		.1byte	0x5
 937 00dd 03          		.1byte	0x29
 938 00de 00 00 00 00 		.4byte	0x1ed
 939 00e0 04          		.1byte	0x5
 940 00e0 1F          		.4byte	.LASF57
 941 00e1 00 00 00 30 		.1byte	0x0
 942 00e3 04          		.1byte	0x5
 943 00e3 02          		.4byte	.LASF58
 944 00e4 05          		.1byte	0x1
 945 00e4 29          		.1byte	0x5
 946 00e5 00 00 01 ED 		.4byte	.LASF59
 947 00e7 05          		.1byte	0x2
 948 00e7 00 00 00 00 		.1byte	0x5
 949 00e9 00          		.4byte	.LASF60
 950 00ea 05          		.1byte	0x3
 951 00ea 00 00 00 00 		.1byte	0x5
 952 00ec 01          		.4byte	.LASF61
 953 00ed 05          		.1byte	0x4
 954 00ed 00 00 00 00 		.1byte	0x0
 955 00ef 02          		.1byte	0x3
 956 00f0 05          		.4byte	.LASF62
 957 00f0 00 00 00 00 		.1byte	0x5
 958 00f2 03          		.1byte	0x39
 959 00f3 05          		.4byte	0x1c6
 960 00f3 00 00 00 00 		.1byte	0x8
 961 00f5 04          		.1byte	0x8
 962 00f6 00          		.1byte	0x5
 963 00f6 03          		.1byte	0x3c
 964 00f7 00 00 00 00 		.4byte	0x239
 965 00f9 05          		.1byte	0x9
 966 00f9 39          		.4byte	.LASF63
 967 00fa 00 00 01 C6 		.1byte	0x5
 968 00fc 08          		.1byte	0x40
 969 00fc 08          		.4byte	0x1bb
 970 00fd 05          		.1byte	0x2
 971 00fd 3C          		.1byte	0x23
 972 00fe 00 00 02 39 		.1byte	0x0
 973 0100 09          		.1byte	0x9
 974 0100 00 00 00 00 		.4byte	.LASF64
 975 0102 05          		.1byte	0x5
 976 0103 40          		.1byte	0x43
 977 0103 00 00 01 BB 		.4byte	0x1ed
 978 0105 02          		.1byte	0x2
 979 0106 23          		.1byte	0x23
 980 0106 00          		.1byte	0x1
 981 0107 09          		.1byte	0x9
 982 0107 00 00 00 00 		.4byte	.LASF65
 983 0109 05          		.1byte	0x5
 984 010a 43          		.1byte	0x49
 985 010a 00 00 01 ED 		.4byte	0x30
 986 010c 02          		.1byte	0x2
 987 010d 23          		.1byte	0x23
 988 010d 01          		.1byte	0x2
 989 010e 09          		.1byte	0x9
 990 010e 00 00 00 00 		.4byte	.LASF66
 991 0110 05          		.1byte	0x5
 992 0111 49          		.1byte	0x4d
 993 0111 00 00 00 30 		.4byte	0x1bb
 994 0113 02          		.1byte	0x2
 995 0114 23          		.1byte	0x23
 996 0114 02          		.1byte	0x3
 997 0115 09          		.1byte	0x0
 998 0115 00 00 00 00 		.1byte	0x3
 999 0117 05          		.4byte	.LASF67
 1000 0118 4D          		.1byte	0x5
 1001 0118 00 00 01 BB 		.1byte	0x4f
 1002 011a 02          		.4byte	0x1f8
 1003 011b 23          		.1byte	0x8
 1004 011b 03          		.1byte	0x2
 1005 011c 00          		.1byte	0x5
 1006 011c 03          		.1byte	0x52
 1007 011d 00 00 00 00 		.4byte	0x25b
 1008 011f 05          		.1byte	0x9
 1009 011f 4F          		.4byte	.LASF68
 1010 0120 00 00 01 F8 		.1byte	0x5
 1011 0122 08          		.1byte	0x53
 1012 0122 02          		.4byte	0x30
 1013 0123 05          		.1byte	0x2
 1014 0123 52          		.1byte	0x23
 1015 0124 00 00 02 5B 		.1byte	0x0
 1016 0126 09          		.1byte	0x0
 1017 0126 00 00 00 00 		.1byte	0x3
 1018 0128 05          		.4byte	.LASF69
 1019 0129 53          		.1byte	0x5
 1020 0129 00 00 00 30 		.1byte	0x54
 1021 012b 02          		.4byte	0x244
 1022 012c 23          		.1byte	0x4
 1023 012c 00          		.1byte	0x2
 1024 012d 00          		.1byte	0x6
 1025 012d 03          		.1byte	0x46
 1026 012e 00 00 00 00 		.4byte	0x2b7
 1027 0130 05          		.1byte	0x5
 1028 0130 54          		.4byte	.LASF70
 1029 0131 00 00 02 44 		.1byte	0x0
 1030 0133 04          		.1byte	0x5
 1031 0133 02          		.4byte	.LASF71
 1032 0134 06          		.1byte	0x1
 1033 0134 46          		.1byte	0x5
 1034 0135 00 00 02 B7 		.4byte	.LASF72
 1035 0137 05          		.1byte	0x2
 1036 0137 00 00 00 00 		.1byte	0x5
 1037 0139 00          		.4byte	.LASF73
 1038 013a 05          		.1byte	0x3
 1039 013a 00 00 00 00 		.1byte	0x5
 1040 013c 01          		.4byte	.LASF74
 1041 013d 05          		.1byte	0x4
 1042 013d 00 00 00 00 		.1byte	0x5
 1043 013f 02          		.4byte	.LASF75
 1044 0140 05          		.1byte	0x5
 1045 0140 00 00 00 00 		.1byte	0x5
 1046 0142 03          		.4byte	.LASF76
 1047 0143 05          		.1byte	0x6
 1048 0143 00 00 00 00 		.1byte	0x5
 1049 0145 04          		.4byte	.LASF77
 1050 0146 05          		.1byte	0x7
 1051 0146 00 00 00 00 		.1byte	0x5
 1052 0148 05          		.4byte	.LASF78
 1053 0149 05          		.1byte	0x8
 1054 0149 00 00 00 00 		.1byte	0x5
 1055 014b 06          		.4byte	.LASF79
 1056 014c 05          		.1byte	0x9
 1057 014c 00 00 00 00 		.1byte	0x5
 1058 014e 07          		.4byte	.LASF80
 1059 014f 05          		.1byte	0xa
 1060 014f 00 00 00 00 		.1byte	0x5
 1061 0151 08          		.4byte	.LASF81
 1062 0152 05          		.1byte	0xb
 1063 0152 00 00 00 00 		.1byte	0x0
 1064 0154 09          		.1byte	0xa
 1065 0155 05          		.1byte	0x1
 1066 0155 00 00 00 00 		.4byte	.LASF82
 1067 0157 0A          		.1byte	0x1
 1068 0158 05          		.2byte	0x222
 1069 0158 00 00 00 00 		.1byte	0x1
 1070 015a 0B          		.4byte	.LFB8
 1071 015b 00          		.4byte	.LFE8
 1072 015b 0A          		.1byte	0x1
 1073 015c 01          		.1byte	0x55
 1074 015c 00 00 00 00 		.1byte	0xb
 1075 015e 01          		.1byte	0x1
 1076 015f 02 22       		.4byte	.LASF85
 1077 0160 01          		.1byte	0x1
 1078 0160 00 00 00 00 		.2byte	0x233
 1079 0162 00 00 00 00 		.1byte	0x1
 1080 0164 01          		.4byte	.LFB9
 1081 0165 55          		.4byte	.LFE9
 1082 0165 0B          		.1byte	0x1
 1083 0166 01          		.1byte	0x55
 1084 0166 00 00 00 00 		.4byte	0x2f7
 1085 0168 01          		.1byte	0xc
 1086 0169 02 33       		.4byte	.LASF87
 1087 016a 01          		.1byte	0x1
 1088 016a 00 00 00 00 		.2byte	0x232
 1089 016c 00 00 00 00 		.4byte	0x42
 1090 016e 01          		.1byte	0x6
 1091 016f 55          		.1byte	0x50
 1092 016f 00 00 02 F7 		.1byte	0x93
 1093 0171 0C          		.1byte	0x2
 1094 0172 00 00 00 00 		.1byte	0x51
 1095 0174 01          		.1byte	0x93
 1096 0174 02 32       		.1byte	0x2
 1097 0175 00 00 00 42 		.1byte	0x0
 1098 0177 06          		.1byte	0xd
 1099 0178 50          		.1byte	0x1
 1100 0178 93          		.4byte	.LASF83
 1101 0179 02          		.1byte	0x1
 1102 0179 51          		.2byte	0x209
 1103 017a 93          		.1byte	0x1
 1104 017a 02          		.4byte	.LFB7
 1105 017b 00          		.4byte	.LFE7
 1106 017b 0D          		.4byte	.LLST2
 1107 017c 01          		.1byte	0xd
 1108 017c 00 00 00 00 		.1byte	0x1
 1109 017e 01          		.4byte	.LASF84
 1110 017f 02 09       		.1byte	0x1
 1111 0180 01          		.2byte	0x140
 1112 0180 00 00 00 00 		.1byte	0x1
 1113 0182 00 00 00 00 		.4byte	.LFB4
 1114 0184 00 00 00 00 		.4byte	.LFE4
 1115 0186 0D          		.4byte	.LLST3
 1116 0187 01          		.1byte	0xe
 1117 0187 00 00 00 00 		.1byte	0x1
 1118 0189 01          		.4byte	.LASF86
 1119 018a 01 40       		.1byte	0x1
 1120 018b 01          		.2byte	0x1c4
 1121 018b 00 00 00 00 		.1byte	0x1
 1122 018d 00 00 00 00 		.4byte	.LFB6
 1123 018f 00 00 00 00 		.4byte	.LFE6
 1124 0191 0E          		.4byte	.LLST4
 1125 0192 01          		.4byte	0x35a
 1126 0192 00 00 00 00 		.1byte	0xf
 1127 0194 01          		.4byte	.LASF87
 1128 0195 01 C4       		.1byte	0x1
 1129 0196 01          		.2byte	0x1c3
 1130 0196 00 00 00 00 		.4byte	0x42
 1131 0198 00 00 00 00 		.4byte	.LLST5
 1132 019a 00 00 00 00 		.1byte	0x10
 1133 019c 00 00 03 5A 		.4byte	.LASF96
 1134 019e 0F          		.1byte	0x1
 1135 019f 00 00 00 00 		.2byte	0x1c6
 1136 01a1 01          		.4byte	0x42
 1137 01a1 01 C3       		.1byte	0x0
 1138 01a2 00 00 00 42 		.1byte	0xe
 1139 01a4 00 00 00 00 		.1byte	0x1
 1140 01a6 10          		.4byte	.LASF88
 1141 01a7 00 00 00 00 		.1byte	0x1
 1142 01a9 01          		.2byte	0x158
 1143 01a9 01 C6       		.1byte	0x1
 1144 01aa 00 00 00 42 		.4byte	.LFB5
 1145 01ac 00          		.4byte	.LFE5
 1146 01ad 0E          		.4byte	.LLST6
 1147 01ad 01          		.4byte	0x39a
 1148 01ae 00 00 00 00 		.1byte	0xf
 1149 01b0 01          		.4byte	.LASF64
 1150 01b0 01 58       		.1byte	0x1
 1151 01b1 01          		.2byte	0x157
 1152 01b2 00 00 00 00 		.4byte	0x1ed
 1153 01b4 00 00 00 00 		.4byte	.LLST7
 1154 01b6 00 00 00 00 		.1byte	0x11
 1155 01b8 00 00 03 9A 		.4byte	.LASF89
 1156 01ba 0F          		.1byte	0x1
 1157 01ba 00 00 00 00 		.2byte	0x15a
 1158 01bc 01          		.4byte	0x42
 1159 01bd 01 57       		.1byte	0x8
 1160 01be 00 00 01 ED 		.1byte	0x76
 1161 01c0 00 00 00 00 		.1byte	0x3
 1162 01c2 11          		.1byte	0x93
 1163 01c2 00 00 00 00 		.1byte	0x1
 1164 01c4 01          		.1byte	0x76
 1165 01c5 01 5A       		.1byte	0x4
 1166 01c6 00 00 00 42 		.1byte	0x93
 1167 01c8 08          		.1byte	0x1
 1168 01c8 76          		.1byte	0x0
 1169 01c9 03          		.1byte	0x12
 1170 01c9 93          		.4byte	.LASF97
 1171 01ca 01          		.1byte	0x1
 1172 01ca 76          		.1byte	0x80
 1173 01cb 04          		.1byte	0x1
 1174 01cb 93          		.4byte	.LFB2
 1175 01cc 01          		.4byte	.LFE2
 1176 01cc 00          		.4byte	.LLST8
 1177 01cd 12          		.4byte	0x3d1
 1178 01cd 00 00 00 00 		.1byte	0x13
 1179 01cf 01          		.ascii "tid\000"
 1180 01d0 80          		.1byte	0x1
 1181 01d0 01          		.1byte	0x7f
 1182 01d1 00 00 00 00 		.4byte	0x1bb
 1183 01d3 00 00 00 00 		.4byte	.LLST9
 1184 01d5 00 00 00 00 		.1byte	0x14
 1185 01d7 00 00 03 D1 		.4byte	.LASF89
 1186 01d9 13          		.1byte	0x1
 1187 01d9 74 69 64 00 		.1byte	0x81
 1188 01db 01          		.4byte	0x42
 1189 01dc 7F          		.4byte	.LLST10
 1190 01dc 00 00 01 BB 		.1byte	0x0
 1191 01de 00 00 00 00 		.1byte	0x15
 1192 01e0 14          		.1byte	0x1
 1193 01e1 00 00 00 00 		.4byte	.LASF90
 1194 01e3 01          		.1byte	0x1
 1195 01e3 81          		.1byte	0xfe
 1196 01e4 00 00 00 42 		.1byte	0x1
 1197 01e6 00 00 00 00 		.4byte	.LFB3
 1198 01e8 00          		.4byte	.LFE3
 1199 01e8 15          		.4byte	.LLST11
 1200 01e9 01          		.1byte	0x16
 1201 01e9 00 00 00 00 		.4byte	.LASF91
 1202 01eb 01          		.1byte	0x1
 1203 01ec FE          		.1byte	0x68
 1204 01ec 01          		.4byte	0x239
 1205 01ed 00 00 00 00 		.1byte	0x1
 1206 01ef 00 00 00 00 		.1byte	0x5
 1207 01f1 00 00 00 00 		.1byte	0x3
 1208 01f3 16          		.4byte	g_app_hw_data
 1209 01f3 00 00 00 00 		.1byte	0x16
 1210 01f5 01          		.4byte	.LASF92
 1211 01f6 68          		.1byte	0x1
 1212 01f6 00 00 02 39 		.1byte	0x6b
 1213 01f8 01          		.4byte	0x25b
 1214 01f9 05          		.1byte	0x1
 1215 01f9 03          		.1byte	0x5
 1216 01fa 00 00 00 00 		.1byte	0x3
 1217 01fc 16          		.4byte	g_dimmer_data
 1218 01fc 00 00 00 00 		.1byte	0x0
 1219 01fe 01          		.section	.debug_abbrev
 1220 01ff 6B          		.1byte	0x1
 1221 01ff 00 00 02 5B 		.1byte	0x11
 1222 0201 01          		.1byte	0x1
 1223 0202 05          		.1byte	0x25
 1224 0202 03          		.1byte	0xe
 1225 0203 00 00 00 00 		.1byte	0x13
 1226 0205 00          		.1byte	0xb
 1227                 		.1byte	0x3
 1228 0000 01          		.1byte	0xe
 1229 0000 11          		.1byte	0x1b
 1230 0001 01          		.1byte	0xe
 1231 0001 25          		.1byte	0x11
 1232 0002 0E          		.1byte	0x1
 1233 0002 13          		.1byte	0x52
 1234 0003 0B          		.1byte	0x1
 1235 0003 03          		.1byte	0x55
 1236 0004 0E          		.1byte	0x6
 1237 0004 1B          		.1byte	0x10
 1238 0005 0E          		.1byte	0x6
 1239 0005 11          		.1byte	0x0
 1240 0006 01          		.1byte	0x0
 1241 0006 52          		.1byte	0x2
 1242 0007 01          		.1byte	0x24
 1243 0007 55          		.1byte	0x0
 1244 0008 06          		.1byte	0xb
 1245 0008 10          		.1byte	0xb
 1246 0009 06          		.1byte	0x3e
 1247 0009 00          		.1byte	0xb
 1248 000a 00          		.1byte	0x3
 1249 000a 02          		.1byte	0xe
 1250 000b 24          		.1byte	0x0
 1251 000b 00          		.1byte	0x0
 1252 000c 0B          		.1byte	0x3
 1253 000c 0B          		.1byte	0x16
 1254 000d 3E          		.1byte	0x0
 1255 000d 0B          		.1byte	0x3
 1256 000e 03          		.1byte	0xe
 1257 000e 0E          		.1byte	0x3a
 1258 000f 00          		.1byte	0xb
 1259 000f 00          		.1byte	0x3b
 1260 0010 03          		.1byte	0xb
 1261 0010 16          		.1byte	0x49
 1262 0011 00          		.1byte	0x13
 1263 0011 03          		.1byte	0x0
 1264 0012 0E          		.1byte	0x0
 1265 0012 3A          		.1byte	0x4
 1266 0013 0B          		.1byte	0x4
 1267 0013 3B          		.1byte	0x1
 1268 0014 0B          		.1byte	0xb
 1269 0014 49          		.1byte	0xb
 1270 0015 13          		.1byte	0x3a
 1271 0015 00          		.1byte	0xb
 1272 0016 00          		.1byte	0x3b
 1273 0016 04          		.1byte	0xb
 1274 0017 04          		.1byte	0x1
 1275 0017 01          		.1byte	0x13
 1276 0018 0B          		.1byte	0x0
 1277 0018 0B          		.1byte	0x0
 1278 0019 3A          		.1byte	0x5
 1279 0019 0B          		.1byte	0x28
 1280 001a 3B          		.1byte	0x0
 1281 001a 0B          		.1byte	0x3
 1282 001b 01          		.1byte	0xe
 1283 001b 13          		.1byte	0x1c
 1284 001c 00          		.1byte	0xd
 1285 001c 00          		.1byte	0x0
 1286 001d 05          		.1byte	0x0
 1287 001d 28          		.1byte	0x6
 1288 001e 00          		.1byte	0x4
 1289 001e 03          		.1byte	0x1
 1290 001f 0E          		.1byte	0xb
 1291 001f 1C          		.1byte	0xb
 1292 0020 0D          		.1byte	0x3a
 1293 0020 00          		.1byte	0xb
 1294 0021 00          		.1byte	0x3b
 1295 0021 06          		.1byte	0x5
 1296 0022 04          		.1byte	0x1
 1297 0022 01          		.1byte	0x13
 1298 0023 0B          		.1byte	0x0
 1299 0023 0B          		.1byte	0x0
 1300 0024 3A          		.1byte	0x7
 1301 0024 0B          		.1byte	0x24
 1302 0025 3B          		.1byte	0x0
 1303 0025 05          		.1byte	0xb
 1304 0026 01          		.1byte	0xb
 1305 0026 13          		.1byte	0x3e
 1306 0027 00          		.1byte	0xb
 1307 0027 00          		.1byte	0x0
 1308 0028 07          		.1byte	0x0
 1309 0028 24          		.1byte	0x8
 1310 0029 00          		.1byte	0x13
 1311 0029 0B          		.1byte	0x1
 1312 002a 0B          		.1byte	0xb
 1313 002a 3E          		.1byte	0xb
 1314 002b 0B          		.1byte	0x3a
 1315 002b 00          		.1byte	0xb
 1316 002c 00          		.1byte	0x3b
 1317 002c 08          		.1byte	0xb
 1318 002d 13          		.1byte	0x1
 1319 002d 01          		.1byte	0x13
 1320 002e 0B          		.1byte	0x0
 1321 002e 0B          		.1byte	0x0
 1322 002f 3A          		.1byte	0x9
 1323 002f 0B          		.1byte	0xd
 1324 0030 3B          		.1byte	0x0
 1325 0030 0B          		.1byte	0x3
 1326 0031 01          		.1byte	0xe
 1327 0031 13          		.1byte	0x3a
 1328 0032 00          		.1byte	0xb
 1329 0032 00          		.1byte	0x3b
 1330 0033 09          		.1byte	0xb
 1331 0033 0D          		.1byte	0x49
 1332 0034 00          		.1byte	0x13
 1333 0034 03          		.1byte	0x38
 1334 0035 0E          		.1byte	0xa
 1335 0035 3A          		.1byte	0x0
 1336 0036 0B          		.1byte	0x0
 1337 0036 3B          		.1byte	0xa
 1338 0037 0B          		.1byte	0x2e
 1339 0037 49          		.1byte	0x0
 1340 0038 13          		.1byte	0x3f
 1341 0038 38          		.1byte	0xc
 1342 0039 0A          		.1byte	0x3
 1343 0039 00          		.1byte	0xe
 1344 003a 00          		.1byte	0x3a
 1345 003a 0A          		.1byte	0xb
 1346 003b 2E          		.1byte	0x3b
 1347 003b 00          		.1byte	0x5
 1348 003c 3F          		.1byte	0x27
 1349 003c 0C          		.1byte	0xc
 1350 003d 03          		.1byte	0x11
 1351 003d 0E          		.1byte	0x1
 1352 003e 3A          		.1byte	0x12
 1353 003e 0B          		.1byte	0x1
 1354 003f 3B          		.1byte	0x40
 1355 003f 05          		.1byte	0xa
 1356 0040 27          		.1byte	0x0
 1357 0040 0C          		.1byte	0x0
 1358 0041 11          		.1byte	0xb
 1359 0041 01          		.1byte	0x2e
 1360 0042 12          		.1byte	0x1
 1361 0042 01          		.1byte	0x3f
 1362 0043 40          		.1byte	0xc
 1363 0043 0A          		.1byte	0x3
 1364 0044 00          		.1byte	0xe
 1365 0044 00          		.1byte	0x3a
 1366 0045 0B          		.1byte	0xb
 1367 0045 2E          		.1byte	0x3b
 1368 0046 01          		.1byte	0x5
 1369 0046 3F          		.1byte	0x27
 1370 0047 0C          		.1byte	0xc
 1371 0047 03          		.1byte	0x11
 1372 0048 0E          		.1byte	0x1
 1373 0048 3A          		.1byte	0x12
 1374 0049 0B          		.1byte	0x1
 1375 0049 3B          		.1byte	0x40
 1376 004a 05          		.1byte	0xa
 1377 004a 27          		.1byte	0x1
 1378 004b 0C          		.1byte	0x13
 1379 004b 11          		.1byte	0x0
 1380 004c 01          		.1byte	0x0
 1381 004c 12          		.1byte	0xc
 1382 004d 01          		.1byte	0x5
 1383 004d 40          		.1byte	0x0
 1384 004e 0A          		.1byte	0x3
 1385 004e 01          		.1byte	0xe
 1386 004f 13          		.1byte	0x3a
 1387 004f 00          		.1byte	0xb
 1388 0050 00          		.1byte	0x3b
 1389 0050 0C          		.1byte	0x5
 1390 0051 05          		.1byte	0x49
 1391 0051 00          		.1byte	0x13
 1392 0052 03          		.1byte	0x2
 1393 0052 0E          		.1byte	0xa
 1394 0053 3A          		.1byte	0x0
 1395 0053 0B          		.1byte	0x0
 1396 0054 3B          		.1byte	0xd
 1397 0054 05          		.1byte	0x2e
 1398 0055 49          		.1byte	0x0
 1399 0055 13          		.1byte	0x3f
 1400 0056 02          		.1byte	0xc
 1401 0056 0A          		.1byte	0x3
 1402 0057 00          		.1byte	0xe
 1403 0057 00          		.1byte	0x3a
 1404 0058 0D          		.1byte	0xb
 1405 0058 2E          		.1byte	0x3b
 1406 0059 00          		.1byte	0x5
 1407 0059 3F          		.1byte	0x27
 1408 005a 0C          		.1byte	0xc
 1409 005a 03          		.1byte	0x11
 1410 005b 0E          		.1byte	0x1
 1411 005b 3A          		.1byte	0x12
 1412 005c 0B          		.1byte	0x1
 1413 005c 3B          		.1byte	0x40
 1414 005d 05          		.1byte	0x6
 1415 005d 27          		.1byte	0x0
 1416 005e 0C          		.1byte	0x0
 1417 005e 11          		.1byte	0xe
 1418 005f 01          		.1byte	0x2e
 1419 005f 12          		.1byte	0x1
 1420 0060 01          		.1byte	0x3f
 1421 0060 40          		.1byte	0xc
 1422 0061 06          		.1byte	0x3
 1423 0061 00          		.1byte	0xe
 1424 0062 00          		.1byte	0x3a
 1425 0062 0E          		.1byte	0xb
 1426 0063 2E          		.1byte	0x3b
 1427 0063 01          		.1byte	0x5
 1428 0064 3F          		.1byte	0x27
 1429 0064 0C          		.1byte	0xc
 1430 0065 03          		.1byte	0x11
 1431 0065 0E          		.1byte	0x1
 1432 0066 3A          		.1byte	0x12
 1433 0066 0B          		.1byte	0x1
 1434 0067 3B          		.1byte	0x40
 1435 0067 05          		.1byte	0x6
 1436 0068 27          		.1byte	0x1
 1437 0068 0C          		.1byte	0x13
 1438 0069 11          		.1byte	0x0
 1439 0069 01          		.1byte	0x0
 1440 006a 12          		.1byte	0xf
 1441 006a 01          		.1byte	0x5
 1442 006b 40          		.1byte	0x0
 1443 006b 06          		.1byte	0x3
 1444 006c 01          		.1byte	0xe
 1445 006c 13          		.1byte	0x3a
 1446 006d 00          		.1byte	0xb
 1447 006d 00          		.1byte	0x3b
 1448 006e 0F          		.1byte	0x5
 1449 006e 05          		.1byte	0x49
 1450 006f 00          		.1byte	0x13
 1451 006f 03          		.1byte	0x2
 1452 0070 0E          		.1byte	0x6
 1453 0070 3A          		.1byte	0x0
 1454 0071 0B          		.1byte	0x0
 1455 0071 3B          		.1byte	0x10
 1456 0072 05          		.1byte	0x34
 1457 0072 49          		.1byte	0x0
 1458 0073 13          		.1byte	0x3
 1459 0073 02          		.1byte	0xe
 1460 0074 06          		.1byte	0x3a
 1461 0074 00          		.1byte	0xb
 1462 0075 00          		.1byte	0x3b
 1463 0075 10          		.1byte	0x5
 1464 0076 34          		.1byte	0x49
 1465 0076 00          		.1byte	0x13
 1466 0077 03          		.1byte	0x0
 1467 0077 0E          		.1byte	0x0
 1468 0078 3A          		.1byte	0x11
 1469 0078 0B          		.1byte	0x34
 1470 0079 3B          		.1byte	0x0
 1471 0079 05          		.1byte	0x3
 1472 007a 49          		.1byte	0xe
 1473 007a 13          		.1byte	0x3a
 1474 007b 00          		.1byte	0xb
 1475 007b 00          		.1byte	0x3b
 1476 007c 11          		.1byte	0x5
 1477 007c 34          		.1byte	0x49
 1478 007d 00          		.1byte	0x13
 1479 007d 03          		.1byte	0x2
 1480 007e 0E          		.1byte	0xa
 1481 007e 3A          		.1byte	0x0
 1482 007f 0B          		.1byte	0x0
 1483 007f 3B          		.1byte	0x12
 1484 0080 05          		.1byte	0x2e
 1485 0080 49          		.1byte	0x1
 1486 0081 13          		.1byte	0x3
 1487 0081 02          		.1byte	0xe
 1488 0082 0A          		.1byte	0x3a
 1489 0082 00          		.1byte	0xb
 1490 0083 00          		.1byte	0x3b
 1491 0083 12          		.1byte	0xb
 1492 0084 2E          		.1byte	0x27
 1493 0084 01          		.1byte	0xc
 1494 0085 03          		.1byte	0x11
 1495 0085 0E          		.1byte	0x1
 1496 0086 3A          		.1byte	0x12
 1497 0086 0B          		.1byte	0x1
 1498 0087 3B          		.1byte	0x40
 1499 0087 0B          		.1byte	0x6
 1500 0088 27          		.1byte	0x1
 1501 0088 0C          		.1byte	0x13
 1502 0089 11          		.1byte	0x0
 1503 0089 01          		.1byte	0x0
 1504 008a 12          		.1byte	0x13
 1505 008a 01          		.1byte	0x5
 1506 008b 40          		.1byte	0x0
 1507 008b 06          		.1byte	0x3
 1508 008c 01          		.1byte	0x8
 1509 008c 13          		.1byte	0x3a
 1510 008d 00          		.1byte	0xb
 1511 008d 00          		.1byte	0x3b
 1512 008e 13          		.1byte	0xb
 1513 008e 05          		.1byte	0x49
 1514 008f 00          		.1byte	0x13
 1515 008f 03          		.1byte	0x2
 1516 0090 08          		.1byte	0x6
 1517 0090 3A          		.1byte	0x0
 1518 0091 0B          		.1byte	0x0
 1519 0091 3B          		.1byte	0x14
 1520 0092 0B          		.1byte	0x34
 1521 0092 49          		.1byte	0x0
 1522 0093 13          		.1byte	0x3
 1523 0093 02          		.1byte	0xe
 1524 0094 06          		.1byte	0x3a
 1525 0094 00          		.1byte	0xb
 1526 0095 00          		.1byte	0x3b
 1527 0095 14          		.1byte	0xb
 1528 0096 34          		.1byte	0x49
 1529 0096 00          		.1byte	0x13
 1530 0097 03          		.1byte	0x2
 1531 0097 0E          		.1byte	0x6
 1532 0098 3A          		.1byte	0x0
 1533 0098 0B          		.1byte	0x0
 1534 0099 3B          		.1byte	0x15
 1535 0099 0B          		.1byte	0x2e
 1536 009a 49          		.1byte	0x0
 1537 009a 13          		.1byte	0x3f
 1538 009b 02          		.1byte	0xc
 1539 009b 06          		.1byte	0x3
 1540 009c 00          		.1byte	0xe
 1541 009c 00          		.1byte	0x3a
 1542 009d 15          		.1byte	0xb
 1543 009d 2E          		.1byte	0x3b
 1544 009e 00          		.1byte	0xb
 1545 009e 3F          		.1byte	0x27
 1546 009f 0C          		.1byte	0xc
 1547 009f 03          		.1byte	0x11
 1548 00a0 0E          		.1byte	0x1
 1549 00a0 3A          		.1byte	0x12
 1550 00a1 0B          		.1byte	0x1
 1551 00a1 3B          		.1byte	0x40
 1552 00a2 0B          		.1byte	0x6
 1553 00a2 27          		.1byte	0x0
 1554 00a3 0C          		.1byte	0x0
 1555 00a3 11          		.1byte	0x16
 1556 00a4 01          		.1byte	0x34
 1557 00a4 12          		.1byte	0x0
 1558 00a5 01          		.1byte	0x3
 1559 00a5 40          		.1byte	0xe
 1560 00a6 06          		.1byte	0x3a
 1561 00a6 00          		.1byte	0xb
 1562 00a7 00          		.1byte	0x3b
 1563 00a7 16          		.1byte	0xb
 1564 00a8 34          		.1byte	0x49
 1565 00a8 00          		.1byte	0x13
 1566 00a9 03          		.1byte	0x3f
 1567 00a9 0E          		.1byte	0xc
 1568 00aa 3A          		.1byte	0x2
 1569 00aa 0B          		.1byte	0xa
 1570 00ab 3B          		.1byte	0x0
 1571 00ab 0B          		.1byte	0x0
 1572 00ac 49          		.1byte	0x0
 1573 00ac 13          		.section	.debug_pubnames,"",@progbits
 1574 00ad 3F          		.4byte	0xce
 1575 00ad 0C          		.2byte	0x2
 1576 00ae 02          		.4byte	.Ldebug_info0
 1577 00ae 0A          		.4byte	0x40b
 1578 00af 00          		.4byte	0x2b7
 1579 00af 00          		.ascii "HrInitSwitchData\000"
 1580 00b0 00          		.4byte	0x2cb
 1581                 		.ascii "HandleSwitchPIOChangedEvent\000"
 1582 0000 00 00 00 CE 		.4byte	0x2f7
 1583 0002 00 02       		.ascii "HrInitSwitchHardware\000"
 1584 0003 00 00 00 00 		.4byte	0x30d
 1585 0005 00 00 04 0B 		.ascii "HrHwDataInit\000"
 1586 0007 00 00 02 B7 		.4byte	0x323
 1587 0009 48 72 49 6E 		.ascii "HandlePIOChangedEvent\000"
 1587      69 74 53 77 
 1587      69 74 63 68 
 1587      44 61 74 61 
 1587      00 
 1588 0011 00 00 02 CB 		.4byte	0x35a
 1589 0013 48 61 6E 64 		.ascii "SoundBuzzer\000"
 1589      6C 65 53 77 
 1589      69 74 63 68 
 1589      50 49 4F 43 
 1589      68 61 6E 67 
 1590 0021 00 00 02 F7 		.4byte	0x3d1
 1591 0023 48 72 49 6E 		.ascii "HrInitHardware\000"
 1591      69 74 53 77 
 1591      69 74 63 68 
 1591      48 61 72 64 
 1591      77 61 72 65 
 1592 002e 00 00 03 0D 		.4byte	0x3e6
 1593 0030 48 72 48 77 		.ascii "g_app_hw_data\000"
 1593      44 61 74 61 
 1593      49 6E 69 74 
 1593      00 
 1594 0036 00 00 03 23 		.4byte	0x3f8
 1595 0038 48 61 6E 64 		.ascii "g_dimmer_data\000"
 1595      6C 65 50 49 
 1595      4F 43 68 61 
 1595      6E 67 65 64 
 1595      45 76 65 6E 
 1596 0043 00 00 03 5A 		.4byte	0x0
 1597 0045 53 6F 75 6E 		.section	.debug_aranges,"",@progbits
 1597      64 42 75 7A 
 1597      7A 65 72 00 
 1598 004b 00 00 03 D1 		.4byte	0x54
 1599 004d 48 72 49 6E 		.2byte	0x2
 1599      69 74 48 61 
 1599      72 64 77 61 
 1599      72 65 00 
 1600 0055 00 00 03 E6 		.4byte	.Ldebug_info0
 1601 0057 67 5F 61 70 		.1byte	0x4
 1601      70 5F 68 77 
 1601      5F 64 61 74 
 1601      61 00 
 1602 005e 00 00 03 F8 		.1byte	0x0
 1603 0060 67 5F 64 69 		.2byte	0x0
 1603      6D 6D 65 72 
 1603      5F 64 61 74 
 1603      61 00 
 1604 0067 00 00 00 00 		.2byte	0x0
 1605                 		.4byte	.LFB8
 1606 0000 00 00 00 54 		.4byte	.LFE8-.LFB8
 1607 0002 00 02       		.4byte	.LFB9
 1608 0003 00 00 00 00 		.4byte	.LFE9-.LFB9
 1609 0005 04          		.4byte	.LFB7
 1610 0005 00          		.4byte	.LFE7-.LFB7
 1611 0006 00 00       		.4byte	.LFB4
 1612 0007 00 00       		.4byte	.LFE4-.LFB4
 1613 0008 00 00 00 00 		.4byte	.LFB6
 1614 000a 00 00 00 01 		.4byte	.LFE6-.LFB6
 1615 000c 00 00 00 00 		.4byte	.LFB5
 1616 000e 00 00 00 00 		.4byte	.LFE5-.LFB5
 1617 0010 00 00 00 00 		.4byte	.LFB2
 1618 0012 00 00 00 00 		.4byte	.LFE2-.LFB2
 1619 0014 00 00 00 00 		.4byte	.LFB3
 1620 0016 00 00 00 00 		.4byte	.LFE3-.LFB3
 1621 0018 00 00 00 00 		.4byte	0x0
 1622 001a 00 00 00 00 		.4byte	0x0
 1623 001c 00 00 00 00 		.section	.debug_ranges,"",@progbits
 1624 001e 00 00 00 00 	.Ldebug_ranges0:
 1625 0020 00 00 00 00 		.4byte	.Ltext0
 1626 0022 00 00 00 00 		.4byte	.Letext0
 1627 0024 00 00 00 00 		.4byte	.LFB8
 1628 0026 00 00 00 00 		.4byte	.LFE8
 1629 0028 00 00 00 00 		.4byte	.LFB9
 1630 002a 00 00 00 00 		.4byte	.LFE9
 1631                 		.4byte	.LFB7
 1632                 		.4byte	.LFE7
 1633 0000 00 00 00 00 		.4byte	.LFB4
 1634 0002 00 00 00 00 		.4byte	.LFE4
 1635 0004 00 00 00 00 		.4byte	.LFB6
 1636 0006 00 00 00 00 		.4byte	.LFE6
 1637 0008 00 00 00 00 		.4byte	.LFB5
 1638 000a 00 00 00 00 		.4byte	.LFE5
 1639 000c 00 00 00 00 		.4byte	.LFB2
 1640 000e 00 00 00 00 		.4byte	.LFE2
 1641 0010 00 00 00 00 		.4byte	.LFB3
 1642 0012 00 00 00 00 		.4byte	.LFE3
 1643 0014 00 00 00 00 		.4byte	0x0
 1644 0016 00 00 00 00 		.4byte	0x0
 1645 0018 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 1646 001a 00 00 00 00 	.LASF82:
 1647 001c 00 00 00 00 		.ascii "HrInitSwitchData\000"
 1648 001e 00 00 00 00 	.LASF33:
 1649 0020 00 00 00 00 		.ascii "pio_mode_ana_mon_clk_pio\000"
 1650 0022 00 00 00 00 	.LASF83:
 1651 0024 00 00 00 00 		.ascii "HrInitSwitchHardware\000"
 1652 0026 00 00 00 00 	.LASF21:
 1653                 		.ascii "pio_mode_radio_rx_en\000"
 1654                 	.LASF80:
 1655 0000 48 72 49 6E 		.ascii "app_panic_invalid_state\000"
 1655      69 74 53 77 
 1655      69 74 63 68 
 1655      44 61 74 61 
 1655      00 
 1656                 	.LASF64:
 1657 0008 70 69 6F 5F 		.ascii "beep_type\000"
 1657      6D 6F 64 65 
 1657      5F 61 6E 61 
 1657      5F 6D 6F 6E 
 1657      5F 63 6C 6B 
 1658                 	.LASF29:
 1659 0015 48 72 49 6E 		.ascii "pio_mode_i2c_data\000"
 1659      69 74 53 77 
 1659      69 74 63 68 
 1659      48 61 72 64 
 1659      77 61 72 65 
 1660                 	.LASF6:
 1661 001f 70 69 6F 5F 		.ascii "short int\000"
 1661      6D 6F 64 65 
 1661      5F 72 61 64 
 1661      69 6F 5F 72 
 1661      78 5F 65 6E 
 1662                 	.LASF87:
 1663 002a 61 70 70 5F 		.ascii "pio_changed\000"
 1663      70 61 6E 69 
 1663      63 5F 69 6E 
 1663      76 61 6C 69 
 1663      64 5F 73 74 
 1664                 	.LASF59:
 1665 0036 62 65 65 70 		.ascii "buzzer_beep_long\000"
 1665      5F 74 79 70 
 1665      65 00 
 1666                 	.LASF95:
 1667 003b 70 69 6F 5F 		.ascii "C:\\Users\\pili\\git\\heekari\\HeekariFirmware\000"
 1667      6D 6F 64 65 
 1667      5F 69 32 63 
 1667      5F 64 61 74 
 1667      61 00 
 1668                 	.LASF41:
 1669 0044 73 68 6F 72 		.ascii "pio_i2c_pull_mode_no_pulls\000"
 1669      74 20 69 6E 
 1669      74 00 
 1670                 	.LASF94:
 1671 0049 70 69 6F 5F 		.ascii "hr_sensor_hw.c\000"
 1671      63 68 61 6E 
 1671      67 65 64 00 
 1672                 	.LASF26:
 1673 004f 62 75 7A 7A 		.ascii "pio_mode_pio_control_rxd\000"
 1673      65 72 5F 62 
 1673      65 65 70 5F 
 1673      6C 6F 6E 67 
 1673      00 
 1674                 	.LASF23:
 1675 0057 43 3A 5C 55 		.ascii "pio_mode_nvm_power_en\000"
 1675      73 65 72 73 
 1675      5C 70 69 6C 
 1675      69 5C 67 69 
 1675      74 5C 68 65 
 1676                 	.LASF86:
 1677 006c 70 69 6F 5F 		.ascii "HandlePIOChangedEvent\000"
 1677      69 32 63 5F 
 1677      70 75 6C 6C 
 1677      5F 6D 6F 64 
 1677      65 5F 6E 6F 
 1678                 	.LASF89:
 1679 007a 68 72 5F 73 		.ascii "beep_timer\000"
 1679      65 6E 73 6F 
 1679      72 5F 68 77 
 1679      2E 63 00 
 1680                 	.LASF97:
 1681 0081 70 69 6F 5F 		.ascii "appBuzzerTimerHandler\000"
 1681      6D 6F 64 65 
 1681      5F 70 69 6F 
 1681      5F 63 6F 6E 
 1681      74 72 6F 6C 
 1682                 	.LASF48:
 1683 008e 70 69 6F 5F 		.ascii "pio_event_mode_disable\000"
 1683      6D 6F 64 65 
 1683      5F 6E 76 6D 
 1683      5F 70 6F 77 
 1683      65 72 5F 65 
 1684                 	.LASF31:
 1685 0099 48 61 6E 64 		.ascii "pio_mode_uart_flow_ctrl\000"
 1685      6C 65 50 49 
 1685      4F 43 68 61 
 1685      6E 67 65 64 
 1685      45 76 65 6E 
 1686                 	.LASF68:
 1687 00a4 62 65 65 70 		.ascii "last_dimmer_var\000"
 1687      5F 74 69 6D 
 1687      65 72 00 
 1688                 	.LASF30:
 1689 00a9 61 70 70 42 		.ascii "pio_mode_i2c_clock\000"
 1689      75 7A 7A 65 
 1689      72 54 69 6D 
 1689      65 72 48 61 
 1689      6E 64 6C 65 
 1690                 	.LASF65:
 1691 00b4 70 69 6F 5F 		.ascii "beep_count\000"
 1691      65 76 65 6E 
 1691      74 5F 6D 6F 
 1691      64 65 5F 64 
 1691      69 73 61 62 
 1692                 	.LASF49:
 1693 00c0 70 69 6F 5F 		.ascii "pio_event_mode_rising\000"
 1693      6D 6F 64 65 
 1693      5F 75 61 72 
 1693      74 5F 66 6C 
 1693      6F 77 5F 63 
 1694                 	.LASF45:
 1695 00cc 6C 61 73 74 		.ascii "pio_i2c_pull_mode_strong_pull_up\000"
 1695      5F 64 69 6D 
 1695      6D 65 72 5F 
 1695      76 61 72 00 
 1696                 	.LASF34:
 1697 00d4 70 69 6F 5F 		.ascii "pio_mode_no_pulls\000"
 1697      6D 6F 64 65 
 1697      5F 69 32 63 
 1697      5F 63 6C 6F 
 1697      63 6B 00 
 1698                 	.LASF79:
 1699 00dd 62 65 65 70 		.ascii "app_panic_con_param_update\000"
 1699      5F 63 6F 75 
 1699      6E 74 00 
 1700                 	.LASF54:
 1701 00e3 70 69 6F 5F 		.ascii "pio_pwm_mode_open_source\000"
 1701      65 76 65 6E 
 1701      74 5F 6D 6F 
 1701      64 65 5F 72 
 1701      69 73 69 6E 
 1702                 	.LASF85:
 1703 00ee 70 69 6F 5F 		.ascii "HandleSwitchPIOChangedEvent\000"
 1703      69 32 63 5F 
 1703      70 75 6C 6C 
 1703      5F 6D 6F 64 
 1703      65 5F 73 74 
 1704                 	.LASF47:
 1705 00fe 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_sticky\000"
 1705      6D 6F 64 65 
 1705      5F 6E 6F 5F 
 1705      70 75 6C 6C 
 1705      73 00 
 1706                 	.LASF69:
 1707 0107 61 70 70 5F 		.ascii "SWITCH_DIMMER_DATA_T\000"
 1707      70 61 6E 69 
 1707      63 5F 63 6F 
 1707      6E 5F 70 61 
 1707      72 61 6D 5F 
 1708                 	.LASF73:
 1709 0115 70 69 6F 5F 		.ascii "app_panic_db_registration\000"
 1709      70 77 6D 5F 
 1709      6D 6F 64 65 
 1709      5F 6F 70 65 
 1709      6E 5F 73 6F 
 1710                 	.LASF9:
 1711 0121 48 61 6E 64 		.ascii "pio_mode_user\000"
 1711      6C 65 53 77 
 1711      69 74 63 68 
 1711      50 49 4F 43 
 1711      68 61 6E 67 
 1712                 	.LASF39:
 1713 012f 70 69 6F 5F 		.ascii "pio_mode_weak_sticky\000"
 1713      69 32 63 5F 
 1713      70 75 6C 6C 
 1713      5F 6D 6F 64 
 1713      65 5F 73 74 
 1714                 	.LASF16:
 1715 013f 53 57 49 54 		.ascii "pio_mode_quadrature0\000"
 1715      43 48 5F 44 
 1715      49 4D 4D 45 
 1715      52 5F 44 41 
 1715      54 41 5F 54 
 1716                 	.LASF17:
 1717 014a 61 70 70 5F 		.ascii "pio_mode_quadrature1\000"
 1717      70 61 6E 69 
 1717      63 5F 64 62 
 1717      5F 72 65 67 
 1717      69 73 74 72 
 1718                 	.LASF18:
 1719 0157 70 69 6F 5F 		.ascii "pio_mode_quadrature2\000"
 1719      6D 6F 64 65 
 1719      5F 75 73 65 
 1719      72 00 
 1720                 	.LASF19:
 1721 015e 70 69 6F 5F 		.ascii "pio_mode_quadrature3\000"
 1721      6D 6F 64 65 
 1721      5F 77 65 61 
 1721      6B 5F 73 74 
 1721      69 63 6B 79 
 1722                 	.LASF70:
 1723 0168 70 69 6F 5F 		.ascii "app_panic_set_advert_params\000"
 1723      6D 6F 64 65 
 1723      5F 71 75 61 
 1723      64 72 61 74 
 1723      75 72 65 30 
 1724                 	.LASF88:
 1725 0173 70 69 6F 5F 		.ascii "SoundBuzzer\000"
 1725      6D 6F 64 65 
 1725      5F 71 75 61 
 1725      64 72 61 74 
 1725      75 72 65 31 
 1726                 	.LASF0:
 1727 017d 70 69 6F 5F 		.ascii "unsigned char\000"
 1727      6D 6F 64 65 
 1727      5F 71 75 61 
 1727      64 72 61 74 
 1727      75 72 65 32 
 1728                 	.LASF11:
 1729 0188 70 69 6F 5F 		.ascii "pio_mode_clk_req\000"
 1729      6D 6F 64 65 
 1729      5F 71 75 61 
 1729      64 72 61 74 
 1729      75 72 65 33 
 1730                 	.LASF60:
 1731 0192 61 70 70 5F 		.ascii "buzzer_beep_twice\000"
 1731      70 61 6E 69 
 1731      63 5F 73 65 
 1731      74 5F 61 64 
 1731      76 65 72 74 
 1732                 	.LASF78:
 1733 01a0 53 6F 75 6E 		.ascii "app_panic_add_whitelist\000"
 1733      64 42 75 7A 
 1733      7A 65 72 00 
 1734                 	.LASF43:
 1735 01a6 75 6E 73 69 		.ascii "pio_i2c_pull_mode_weak_pull_up\000"
 1735      67 6E 65 64 
 1735      20 63 68 61 
 1735      72 00 
 1736                 	.LASF75:
 1737 01ad 70 69 6F 5F 		.ascii "app_panic_nvm_write\000"
 1737      6D 6F 64 65 
 1737      5F 63 6C 6B 
 1737      5F 72 65 71 
 1737      00 
 1738                 	.LASF5:
 1739 01b6 62 75 7A 7A 		.ascii "signed char\000"
 1739      65 72 5F 62 
 1739      65 65 70 5F 
 1739      74 77 69 63 
 1739      65 00 
 1740                 	.LASF12:
 1741 01bf 61 70 70 5F 		.ascii "pio_mode_pwm0\000"
 1741      70 61 6E 69 
 1741      63 5F 61 64 
 1741      64 5F 77 68 
 1741      69 74 65 6C 
 1742                 	.LASF13:
 1743 01cb 70 69 6F 5F 		.ascii "pio_mode_pwm1\000"
 1743      69 32 63 5F 
 1743      70 75 6C 6C 
 1743      5F 6D 6F 64 
 1743      65 5F 77 65 
 1744                 	.LASF14:
 1745 01da 61 70 70 5F 		.ascii "pio_mode_pwm2\000"
 1745      70 61 6E 69 
 1745      63 5F 6E 76 
 1745      6D 5F 77 72 
 1745      69 74 65 00 
 1746                 	.LASF15:
 1747 01e4 73 69 67 6E 		.ascii "pio_mode_pwm3\000"
 1747      65 64 20 63 
 1747      68 61 72 00 
 1748                 	.LASF8:
 1749 01ea 70 69 6F 5F 		.ascii "unsigned int\000"
 1749      6D 6F 64 65 
 1749      5F 70 77 6D 
 1749      30 00 
 1750                 	.LASF62:
 1751 01f1 70 69 6F 5F 		.ascii "buzzer_beep_type\000"
 1751      6D 6F 64 65 
 1751      5F 70 77 6D 
 1751      31 00 
 1752                 	.LASF74:
 1753 01f8 70 69 6F 5F 		.ascii "app_panic_nvm_read\000"
 1753      6D 6F 64 65 
 1753      5F 70 77 6D 
 1753      32 00 
 1754                 	.LASF55:
 1755 01ff 70 69 6F 5F 		.ascii "pio_pwm_mode_inverted_push_pull\000"
 1755      6D 6F 64 65 
 1755      5F 70 77 6D 
 1755      33 00 
 1756                 	.LASF1:
 1757 0206 75 6E 73 69 		.ascii "short unsigned int\000"
 1757      67 6E 65 64 
 1757      20 69 6E 74 
 1757      00 
 1758                 	.LASF37:
 1759 020d 62 75 7A 7A 		.ascii "pio_mode_strong_pull_down\000"
 1759      65 72 5F 62 
 1759      65 65 70 5F 
 1759      74 79 70 65 
 1759      00 
 1760                 	.LASF91:
 1761 0215 61 70 70 5F 		.ascii "g_app_hw_data\000"
 1761      70 61 6E 69 
 1761      63 5F 6E 76 
 1761      6D 5F 72 65 
 1761      61 64 00 
 1762                 	.LASF96:
 1763 021f 70 69 6F 5F 		.ascii "pios\000"
 1763      70 77 6D 5F 
 1763      6D 6F 64 65 
 1763      5F 69 6E 76 
 1763      65 72 74 65 
 1764                 	.LASF92:
 1765 022f 73 68 6F 72 		.ascii "g_dimmer_data\000"
 1765      74 20 75 6E 
 1765      73 69 67 6E 
 1765      65 64 20 69 
 1765      6E 74 00 
 1766                 	.LASF58:
 1767 0238 70 69 6F 5F 		.ascii "buzzer_beep_short\000"
 1767      6D 6F 64 65 
 1767      5F 73 74 72 
 1767      6F 6E 67 5F 
 1767      70 75 6C 6C 
 1768                 	.LASF7:
 1769 0245 67 5F 61 70 		.ascii "long int\000"
 1769      70 5F 68 77 
 1769      5F 64 61 74 
 1769      61 00 
 1770                 	.LASF56:
 1771 024c 70 69 6F 73 		.ascii "timer_id\000"
 1771      00 
 1772                 	.LASF36:
 1773 024f 67 5F 64 69 		.ascii "pio_mode_weak_pull_up\000"
 1773      6D 6D 65 72 
 1773      5F 64 61 74 
 1773      61 00 
 1774                 	.LASF50:
 1775 0256 62 75 7A 7A 		.ascii "pio_event_mode_falling\000"
 1775      65 72 5F 62 
 1775      65 65 70 5F 
 1775      73 68 6F 72 
 1775      74 00 
 1776                 	.LASF90:
 1777 025f 6C 6F 6E 67 		.ascii "HrInitHardware\000"
 1777      20 69 6E 74 
 1777      00 
 1778                 	.LASF2:
 1779 0263 74 69 6D 65 		.ascii "uint16\000"
 1779      72 5F 69 64 
 1779      00 
 1780                 	.LASF22:
 1781 0268 70 69 6F 5F 		.ascii "pio_mode_radio_tx_en\000"
 1781      6D 6F 64 65 
 1781      5F 77 65 61 
 1781      6B 5F 70 75 
 1781      6C 6C 5F 75 
 1782                 	.LASF3:
 1783 0273 70 69 6F 5F 		.ascii "uint32\000"
 1783      65 76 65 6E 
 1783      74 5F 6D 6F 
 1783      64 65 5F 66 
 1783      61 6C 6C 69 
 1784                 	.LASF61:
 1785 027e 48 72 49 6E 		.ascii "buzzer_beep_thrice\000"
 1785      69 74 48 61 
 1785      72 64 77 61 
 1785      72 65 00 
 1786                 	.LASF4:
 1787 0286 75 69 6E 74 		.ascii "long unsigned int\000"
 1787      31 36 00 
 1788                 	.LASF27:
 1789 0289 70 69 6F 5F 		.ascii "pio_mode_ser_flash_dout\000"
 1789      6D 6F 64 65 
 1789      5F 72 61 64 
 1789      69 6F 5F 74 
 1789      78 5F 65 6E 
 1790                 	.LASF32:
 1791 0294 75 69 6E 74 		.ascii "pio_mode_pio_control_timer\000"
 1791      33 32 00 
 1792                 	.LASF72:
 1793 0297 62 75 7A 7A 		.ascii "app_panic_set_scan_rsp_data\000"
 1793      65 72 5F 62 
 1793      65 65 70 5F 
 1793      74 68 72 69 
 1793      63 65 00 
 1794                 	.LASF66:
 1795 02a1 6C 6F 6E 67 		.ascii "button_press_tid\000"
 1795      20 75 6E 73 
 1795      69 67 6E 65 
 1795      64 20 69 6E 
 1795      74 00 
 1796                 	.LASF40:
 1797 02aa 70 69 6F 5F 		.ascii "pio_mode_strong_sticky\000"
 1797      6D 6F 64 65 
 1797      5F 73 65 72 
 1797      5F 66 6C 61 
 1797      73 68 5F 64 
 1798                 	.LASF44:
 1799 02b6 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_pull_down\000"
 1799      6D 6F 64 65 
 1799      5F 70 69 6F 
 1799      5F 63 6F 6E 
 1799      74 72 6F 6C 
 1800                 	.LASF63:
 1801 02c3 61 70 70 5F 		.ascii "buzzer_tid\000"
 1801      70 61 6E 69 
 1801      63 5F 73 65 
 1801      74 5F 73 63 
 1801      61 6E 5F 72 
 1802                 	.LASF53:
 1803 02d1 62 75 74 74 		.ascii "pio_pwm_mode_open_drain\000"
 1803      6F 6E 5F 70 
 1803      72 65 73 73 
 1803      5F 74 69 64 
 1803      00 
 1804                 	.LASF84:
 1805 02da 70 69 6F 5F 		.ascii "HrHwDataInit\000"
 1805      6D 6F 64 65 
 1805      5F 73 74 72 
 1805      6F 6E 67 5F 
 1805      73 74 69 63 
 1806                 	.LASF28:
 1807 02e5 70 69 6F 5F 		.ascii "pio_mode_ser_flash_csb\000"
 1807      69 32 63 5F 
 1807      70 75 6C 6C 
 1807      5F 6D 6F 64 
 1807      65 5F 73 74 
 1808                 	.LASF24:
 1809 02f7 62 75 7A 7A 		.ascii "pio_mode_pio_controller\000"
 1809      65 72 5F 74 
 1809      69 64 00 
 1810                 	.LASF57:
 1811 02fc 70 69 6F 5F 		.ascii "buzzer_beep_off\000"
 1811      70 77 6D 5F 
 1811      6D 6F 64 65 
 1811      5F 6F 70 65 
 1811      6E 5F 64 72 
 1812                 	.LASF52:
 1813 0308 48 72 48 77 		.ascii "pio_pwm_mode_push_pull\000"
 1813      44 61 74 61 
 1813      49 6E 69 74 
 1813      00 
 1814                 	.LASF10:
 1815 030f 70 69 6F 5F 		.ascii "pio_mode_edge_capture\000"
 1815      6D 6F 64 65 
 1815      5F 73 65 72 
 1815      5F 66 6C 61 
 1815      73 68 5F 63 
 1816                 	.LASF42:
 1817 031a 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_pull_down\000"
 1817      6D 6F 64 65 
 1817      5F 70 69 6F 
 1817      5F 63 6F 6E 
 1817      74 72 6F 6C 
 1818                 	.LASF38:
 1819 0326 62 75 7A 7A 		.ascii "pio_mode_strong_pull_up\000"
 1819      65 72 5F 62 
 1819      65 65 70 5F 
 1819      6F 66 66 00 
 1820                 	.LASF71:
 1821 032e 70 69 6F 5F 		.ascii "app_panic_set_advert_data\000"
 1821      70 77 6D 5F 
 1821      6D 6F 64 65 
 1821      5F 70 75 73 
 1821      68 5F 70 75 
 1822                 	.LASF76:
 1823 033a 70 69 6F 5F 		.ascii "app_panic_read_tx_pwr_level\000"
 1823      6D 6F 64 65 
 1823      5F 65 64 67 
 1823      65 5F 63 61 
 1823      70 74 75 72 
 1824                 	.LASF35:
 1825 0345 70 69 6F 5F 		.ascii "pio_mode_weak_pull_down\000"
 1825      69 32 63 5F 
 1825      70 75 6C 6C 
 1825      5F 6D 6F 64 
 1825      65 5F 77 65 
 1826                 	.LASF46:
 1827 0355 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_sticky\000"
 1827      6D 6F 64 65 
 1827      5F 73 74 72 
 1827      6F 6E 67 5F 
 1827      70 75 6C 6C 
 1828                 	.LASF81:
 1829 0361 61 70 70 5F 		.ascii "app_panic_unexpected_beep_type\000"
 1829      70 61 6E 69 
 1829      63 5F 73 65 
 1829      74 5F 61 64 
 1829      76 65 72 74 
 1830                 	.LASF25:
 1831 036e 61 70 70 5F 		.ascii "pio_mode_pio_control_txd\000"
 1831      70 61 6E 69 
 1831      63 5F 72 65 
 1831      61 64 5F 74 
 1831      78 5F 70 77 
 1832                 	.LASF67:
 1833 037c 70 69 6F 5F 		.ascii "APP_HW_DATA_T\000"
 1833      6D 6F 64 65 
 1833      5F 77 65 61 
 1833      6B 5F 70 75 
 1833      6C 6C 5F 64 
 1834                 	.LASF51:
 1835 0388 70 69 6F 5F 		.ascii "pio_event_mode_both\000"
 1835      69 32 63 5F 
 1835      70 75 6C 6C 
 1835      5F 6D 6F 64 
 1835      65 5F 77 65 
 1836                 	.LASF20:
 1837 0397 61 70 70 5F 		.ascii "pio_mode_uart\000"
 1837      70 61 6E 69 
 1837      63 5F 75 6E 
 1837      65 78 70 65 
 1837      63 74 65 64 
 1838                 	.LASF93:
 1839 03a7 70 69 6F 5F 		.ascii "GNU C 4.3.4 CSR version 21 for xap [1468380]\000"
 1839      6D 6F 64 65 
 1839      5F 70 69 6F 
 1839      5F 63 6F 6E 
 1839      74 72 6F 6C 
 1840                 	.LASF77:
 1841 03b3 41 50 50 5F 		.ascii "app_panic_delete_whitelist\000"
 1841      48 57 5F 44 
 1841      41 54 41 5F 
 1841      54 00 
 1842                 		.ident	"GCC: (GNU) 4.3.4 CSR version 21 for xap [1468380]"
 1843 03ba 70 69 6F 5F 	...
 1843      65 76 65 6E 
 1843      74 5F 6D 6F 
 1843      64 65 5F 62 
 1843      6F 74 68 00 
