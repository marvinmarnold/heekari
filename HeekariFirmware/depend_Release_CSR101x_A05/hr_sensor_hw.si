   1                 		.file	"hr_sensor_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.HrInitSwitchData,"ax",@progbits
  15                 		.global	HrInitSwitchData
  16                 		.type	HrInitSwitchData, @function
  17                 	HrInitSwitchData:
  18                 	.LFB8:
  19                 		.file 1 "hr_sensor_hw.c"
   0:hr_sensor_hw.c **** /******************************************************************************
   1:hr_sensor_hw.c ****  *  Copyright (C) Cambridge Silicon Radio Limited 2012-2013
   2:hr_sensor_hw.c ****  *  Part of CSR uEnergy SDK 2.2.2
   3:hr_sensor_hw.c ****  *  Application version 2.2.2.0
   4:hr_sensor_hw.c ****  *
   5:hr_sensor_hw.c ****  *  FILE
   6:hr_sensor_hw.c ****  *      hr_sensor_hw.c
   7:hr_sensor_hw.c ****  *
   8:hr_sensor_hw.c ****  *  DESCRIPTION
   9:hr_sensor_hw.c ****  *      This file defines the Heart Rate sensors hardware specific routines.
  10:hr_sensor_hw.c ****  *
  11:hr_sensor_hw.c ****  *****************************************************************************/
  12:hr_sensor_hw.c **** 
  13:hr_sensor_hw.c **** /*============================================================================*
  14:hr_sensor_hw.c ****  *  SDK Header Files
  15:hr_sensor_hw.c ****  *============================================================================*/
  16:hr_sensor_hw.c **** 
  17:hr_sensor_hw.c **** #include <pio.h>
  18:hr_sensor_hw.c **** #include <pio_ctrlr.h>
  19:hr_sensor_hw.c **** #include <timer.h>
  20:hr_sensor_hw.c **** 
  21:hr_sensor_hw.c **** /*============================================================================*
  22:hr_sensor_hw.c ****  *  Local Header Files
  23:hr_sensor_hw.c ****  *============================================================================*/
  24:hr_sensor_hw.c **** 
  25:hr_sensor_hw.c **** #include "hr_sensor.h"
  26:hr_sensor_hw.c **** #include "hr_sensor_gatt.h"
  27:hr_sensor_hw.c **** #include "hr_sensor_hw.h"
  28:hr_sensor_hw.c **** #include "heart_rate_service.h"
  29:hr_sensor_hw.c **** #include "app_gatt_db.h"
  30:hr_sensor_hw.c **** #include "app_gatt.h"
  31:hr_sensor_hw.c **** 
  32:hr_sensor_hw.c **** /*============================================================================*
  33:hr_sensor_hw.c ****  *  Private Definitions
  34:hr_sensor_hw.c ****  *============================================================================*/
  35:hr_sensor_hw.c **** 
  36:hr_sensor_hw.c **** /* Setup PIOs
  37:hr_sensor_hw.c ****  *  PIO3    Buzzer
  38:hr_sensor_hw.c ****  *  PIO4    LED 1
  39:hr_sensor_hw.c ****  *  PIO9    On Board Input - HR Input
  40:hr_sensor_hw.c ****  *  PIO10   LED 2 (Not Used)
  41:hr_sensor_hw.c ****  *  PIO11   Button
  42:hr_sensor_hw.c ****  */
  43:hr_sensor_hw.c **** 
  44:hr_sensor_hw.c **** #define BUZZER_PIO              (3)
  45:hr_sensor_hw.c **** #define HR_INPUT_PIO            (9)
  46:hr_sensor_hw.c **** #define BUTTON_PIO              (11)
  47:hr_sensor_hw.c **** 
  48:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  49:hr_sensor_hw.c **** 
  50:hr_sensor_hw.c **** #define BUZZER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))
  51:hr_sensor_hw.c **** #define HR_INPUT_PIO_MASK       (PIO_BIT_MASK(HR_INPUT_PIO))
  52:hr_sensor_hw.c **** #define BUTTON_PIO_MASK         (PIO_BIT_MASK(BUTTON_PIO))
  53:hr_sensor_hw.c **** 
  54:hr_sensor_hw.c **** /* PIO direction */
  55:hr_sensor_hw.c **** #define PIO_DIRECTION_INPUT     (FALSE)
  56:hr_sensor_hw.c **** #define PIO_DIRECTION_OUTPUT    (TRUE)
  57:hr_sensor_hw.c **** 
  58:hr_sensor_hw.c **** /* PIO state */
  59:hr_sensor_hw.c **** #define PIO_STATE_HIGH          (TRUE)
  60:hr_sensor_hw.c **** #define PIO_STATE_LOW           (FALSE)
  61:hr_sensor_hw.c **** 
  62:hr_sensor_hw.c **** /* Extra long button press timer */
  63:hr_sensor_hw.c **** #define EXTRA_LONG_BUTTON_PRESS_TIMER \
  64:hr_sensor_hw.c ****                                 (4*SECOND)
  65:hr_sensor_hw.c **** 
  66:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
  67:hr_sensor_hw.c **** 
  68:hr_sensor_hw.c **** /* The index (0-3) of the PWM unit to be configured */
  69:hr_sensor_hw.c **** #define BUZZER_PWM_INDEX_0      (0)
  70:hr_sensor_hw.c **** 
  71:hr_sensor_hw.c **** /* PWM parameters for Buzzer */
  72:hr_sensor_hw.c **** 
  73:hr_sensor_hw.c **** /* Dull on. off and hold times */
  74:hr_sensor_hw.c **** #define DULL_BUZZ_ON_TIME       (2)    /* 60us */
  75:hr_sensor_hw.c **** #define DULL_BUZZ_OFF_TIME      (15)   /* 450us */
  76:hr_sensor_hw.c **** #define DULL_BUZZ_HOLD_TIME     (0)
  77:hr_sensor_hw.c **** 
  78:hr_sensor_hw.c **** /* Bright on, off and hold times */
  79:hr_sensor_hw.c **** #define BRIGHT_BUZZ_ON_TIME     (2)    /* 60us */
  80:hr_sensor_hw.c **** #define BRIGHT_BUZZ_OFF_TIME    (15)   /* 450us */
  81:hr_sensor_hw.c **** #define BRIGHT_BUZZ_HOLD_TIME   (0)    /* 0us */
  82:hr_sensor_hw.c **** 
  83:hr_sensor_hw.c **** #define BUZZ_RAMP_RATE          (0xFF)
  84:hr_sensor_hw.c **** 
  85:hr_sensor_hw.c **** /* TIMER values for Buzzer */
  86:hr_sensor_hw.c **** #define SHORT_BEEP_TIMER_VALUE  (100* MILLISECOND)
  87:hr_sensor_hw.c **** #define LONG_BEEP_TIMER_VALUE   (500* MILLISECOND)
  88:hr_sensor_hw.c **** #define BEEP_GAP_TIMER_VALUE    (25* MILLISECOND)
  89:hr_sensor_hw.c **** 
  90:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
  91:hr_sensor_hw.c **** 
  92:hr_sensor_hw.c **** #define DIMMER_PIO              (3)
  93:hr_sensor_hw.c **** 
  94:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  95:hr_sensor_hw.c **** 
  96:hr_sensor_hw.c **** #define DIMMER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))                                
  97:hr_sensor_hw.c **** 
  98:hr_sensor_hw.c **** /*============================================================================*
  99:hr_sensor_hw.c ****  *  Public data
 100:hr_sensor_hw.c ****  *============================================================================*/
 101:hr_sensor_hw.c **** 
 102:hr_sensor_hw.c **** /* Blood pressure application hardware data instance */
 103:hr_sensor_hw.c **** APP_HW_DATA_T                   g_app_hw_data;
 104:hr_sensor_hw.c **** 
 105:hr_sensor_hw.c **** /* Dimmer hardware data instance */
 106:hr_sensor_hw.c **** SWITCH_DIMMER_DATA_T                   g_dimmer_data;
 107:hr_sensor_hw.c **** 
 108:hr_sensor_hw.c **** /*============================================================================*
 109:hr_sensor_hw.c ****  *  Private Function Implementations
 110:hr_sensor_hw.c ****  *============================================================================*/
 111:hr_sensor_hw.c **** 
 112:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 113:hr_sensor_hw.c **** 
 114:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 115:hr_sensor_hw.c ****  *  NAME
 116:hr_sensor_hw.c ****  *      appBuzzerTimerHandler
 117:hr_sensor_hw.c ****  *
 118:hr_sensor_hw.c ****  *  DESCRIPTION
 119:hr_sensor_hw.c ****  *      This function is used to stop the Buzzer at the expiry of 
 120:hr_sensor_hw.c ****  *      timer.
 121:hr_sensor_hw.c ****  *
 122:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 123:hr_sensor_hw.c ****  *      Nothing.
 124:hr_sensor_hw.c ****  *
 125:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 126:hr_sensor_hw.c **** static void appBuzzerTimerHandler(timer_id tid)
 127:hr_sensor_hw.c **** {
 128:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 129:hr_sensor_hw.c **** 
 130:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 131:hr_sensor_hw.c **** 
 132:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 133:hr_sensor_hw.c ****     {
 134:hr_sensor_hw.c ****         case buzzer_beep_short: /* FALLTHROUGH */
 135:hr_sensor_hw.c ****         case buzzer_beep_long:
 136:hr_sensor_hw.c ****         {
 137:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 138:hr_sensor_hw.c **** 
 139:hr_sensor_hw.c ****             /* Disable buzzer */
 140:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 141:hr_sensor_hw.c ****         }
 142:hr_sensor_hw.c ****         break;
 143:hr_sensor_hw.c ****         case buzzer_beep_twice:
 144:hr_sensor_hw.c ****         {
 145:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 146:hr_sensor_hw.c ****             {
 147:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 148:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 149:hr_sensor_hw.c **** 
 150:hr_sensor_hw.c ****                 /* Disable buzzer */
 151:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 152:hr_sensor_hw.c **** 
 153:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 154:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 155:hr_sensor_hw.c ****             }
 156:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 157:hr_sensor_hw.c ****             {
 158:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 159:hr_sensor_hw.c **** 
 160:hr_sensor_hw.c ****                 /* Enable buzzer */
 161:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 162:hr_sensor_hw.c **** 
 163:hr_sensor_hw.c ****                 /* Start another short beep */
 164:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 165:hr_sensor_hw.c ****             }
 166:hr_sensor_hw.c ****             else
 167:hr_sensor_hw.c ****             {
 168:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 169:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 170:hr_sensor_hw.c **** 
 171:hr_sensor_hw.c ****                 /* Disable buzzer */
 172:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 173:hr_sensor_hw.c **** 
 174:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 175:hr_sensor_hw.c ****             }
 176:hr_sensor_hw.c ****         }
 177:hr_sensor_hw.c ****         break;
 178:hr_sensor_hw.c ****         case buzzer_beep_thrice:
 179:hr_sensor_hw.c ****         {
 180:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 181:hr_sensor_hw.c ****                g_app_hw_data.beep_count == 2)
 182:hr_sensor_hw.c ****             {
 183:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 184:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 185:hr_sensor_hw.c **** 
 186:hr_sensor_hw.c ****                 /* Disable buzzer */
 187:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 188:hr_sensor_hw.c **** 
 189:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 190:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 191:hr_sensor_hw.c ****             }
 192:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 193:hr_sensor_hw.c ****                     g_app_hw_data.beep_count == 3)
 194:hr_sensor_hw.c ****             {
 195:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 196:hr_sensor_hw.c **** 
 197:hr_sensor_hw.c ****                 /* Enable buzzer */
 198:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 199:hr_sensor_hw.c **** 
 200:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 201:hr_sensor_hw.c ****             }
 202:hr_sensor_hw.c ****             else
 203:hr_sensor_hw.c ****             {
 204:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 205:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 206:hr_sensor_hw.c **** 
 207:hr_sensor_hw.c ****                 /* Disable buzzer */
 208:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 209:hr_sensor_hw.c **** 
 210:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 211:hr_sensor_hw.c ****             }
 212:hr_sensor_hw.c ****         }
 213:hr_sensor_hw.c ****         break;
 214:hr_sensor_hw.c **** 
 215:hr_sensor_hw.c ****         default:
 216:hr_sensor_hw.c ****         {
 217:hr_sensor_hw.c ****             /* No such beep type */
 218:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 219:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 220:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 221:hr_sensor_hw.c ****              */
 222:hr_sensor_hw.c ****         }
 223:hr_sensor_hw.c ****         break;
 224:hr_sensor_hw.c ****     }
 225:hr_sensor_hw.c **** 
 226:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 227:hr_sensor_hw.c ****     {
 228:hr_sensor_hw.c ****         /* start the timer */
 229:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 230:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 231:hr_sensor_hw.c ****     }
 232:hr_sensor_hw.c **** }
 233:hr_sensor_hw.c **** 
 234:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER*/
 235:hr_sensor_hw.c **** 
 236:hr_sensor_hw.c **** /*============================================================================*
 237:hr_sensor_hw.c ****  *  Public Function Implementations
 238:hr_sensor_hw.c ****  *============================================================================*/
 239:hr_sensor_hw.c **** 
 240:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 241:hr_sensor_hw.c ****  *  NAME
 242:hr_sensor_hw.c ****  *      HrInitHardware 
 243:hr_sensor_hw.c ****  *
 244:hr_sensor_hw.c ****  *  DESCRIPTION
 245:hr_sensor_hw.c ****  *      This function is called to initialise heart rate hardware
 246:hr_sensor_hw.c ****  *
 247:hr_sensor_hw.c ****  *  RETURNS
 248:hr_sensor_hw.c ****  *      Nothing.
 249:hr_sensor_hw.c ****  *
 250:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 251:hr_sensor_hw.c **** 
 252:hr_sensor_hw.c **** extern void HrInitHardware(void)
 253:hr_sensor_hw.c **** {
 254:hr_sensor_hw.c ****     /* Setup PIOs
 255:hr_sensor_hw.c ****      * PIO3 - Buzzer
 256:hr_sensor_hw.c ****      * PIO4 - LED 1
 257:hr_sensor_hw.c ****      * PIO9 - On Board Input - HR input 
 258:hr_sensor_hw.c ****      *            when actual measurements 
 259:hr_sensor_hw.c ****      *            are enabled
 260:hr_sensor_hw.c ****      * PIO10 - LED 2 (Not Used)
 261:hr_sensor_hw.c ****      * PIO11 - Button
 262:hr_sensor_hw.c ****      */
 263:hr_sensor_hw.c **** #ifdef NO_ACTUAL_MEASUREMENT
 264:hr_sensor_hw.c **** 
 265:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 266:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 267:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 268:hr_sensor_hw.c **** 
 269:hr_sensor_hw.c ****     /* Setup button on PIO11 */
 270:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 271:hr_sensor_hw.c **** 
 272:hr_sensor_hw.c **** #else /* NO_ACTUAL_MEASUREMENT */
 273:hr_sensor_hw.c **** 
 274:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 275:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 276:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 277:hr_sensor_hw.c **** 
 278:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 279:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 280:hr_sensor_hw.c **** 
 281:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 282:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 283:hr_sensor_hw.c **** 
 284:hr_sensor_hw.c **** #endif /* ! NO_ACTUAL_MEASUREMENT */
 285:hr_sensor_hw.c **** 
 286:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 287:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 288:hr_sensor_hw.c **** 
 289:hr_sensor_hw.c ****     /* Configure the buzzer on PIO3 */
 290:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 291:hr_sensor_hw.c ****                  DULL_BUZZ_OFF_TIME, DULL_BUZZ_HOLD_TIME, BRIGHT_BUZZ_ON_TIME,
 292:hr_sensor_hw.c ****                  BRIGHT_BUZZ_OFF_TIME, BRIGHT_BUZZ_HOLD_TIME, BUZZ_RAMP_RATE);
 293:hr_sensor_hw.c **** 
 294:hr_sensor_hw.c **** 
 295:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 296:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 297:hr_sensor_hw.c **** 
 298:hr_sensor_hw.c **** 
 299:hr_sensor_hw.c ****     /* Save power by changing the I2C pull mode to pull down.*/
 300:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 301:hr_sensor_hw.c **** 
 302:hr_sensor_hw.c ****     HrInitSwitchHardware();
 303:hr_sensor_hw.c **** }
 304:hr_sensor_hw.c **** 
 305:hr_sensor_hw.c **** 
 306:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 307:hr_sensor_hw.c ****  *  NAME
 308:hr_sensor_hw.c ****  *      HrHwDataInit
 309:hr_sensor_hw.c ****  *
 310:hr_sensor_hw.c ****  *  DESCRIPTION
 311:hr_sensor_hw.c ****  *      This function initialises HR sensor hardware data structure
 312:hr_sensor_hw.c ****  *
 313:hr_sensor_hw.c ****  *  RETURNS
 314:hr_sensor_hw.c ****  *      Nothing.
 315:hr_sensor_hw.c ****  *
 316:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 317:hr_sensor_hw.c **** 
 318:hr_sensor_hw.c **** extern void HrHwDataInit(void)
 319:hr_sensor_hw.c **** {
 320:hr_sensor_hw.c **** 
 321:hr_sensor_hw.c ****     /* Delete button press timer */
 322:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
 323:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
 324:hr_sensor_hw.c ****     HrInitSwitchData();
 325:hr_sensor_hw.c **** }
 326:hr_sensor_hw.c **** 
 327:hr_sensor_hw.c **** 
 328:hr_sensor_hw.c **** 
 329:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 330:hr_sensor_hw.c ****  *  NAME
 331:hr_sensor_hw.c ****  *      SoundBuzzer
 332:hr_sensor_hw.c ****  *
 333:hr_sensor_hw.c ****  *  DESCRIPTION
 334:hr_sensor_hw.c ****  *      This function is called to trigger beeps of different types 
 335:hr_sensor_hw.c ****  *      'buzzer_beep_type'.
 336:hr_sensor_hw.c ****  *
 337:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 338:hr_sensor_hw.c ****  *      Nothing.
 339:hr_sensor_hw.c ****  *
 340:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 341:hr_sensor_hw.c **** 
 342:hr_sensor_hw.c **** extern void SoundBuzzer(buzzer_beep_type beep_type)
 343:hr_sensor_hw.c **** {
 344:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 345:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 346:hr_sensor_hw.c **** 
 347:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 348:hr_sensor_hw.c **** 
 349:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 350:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 351:hr_sensor_hw.c **** 
 352:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 353:hr_sensor_hw.c **** 
 354:hr_sensor_hw.c ****     /* Store the beep type in some global variable. It will used on timer 
 355:hr_sensor_hw.c ****      * expiry to check the type of beeps being sounded.
 356:hr_sensor_hw.c ****      */
 357:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 358:hr_sensor_hw.c **** 
 359:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 360:hr_sensor_hw.c ****     {
 361:hr_sensor_hw.c ****         case buzzer_beep_off:
 362:hr_sensor_hw.c ****         {
 363:hr_sensor_hw.c ****             /* Don't do anything */
 364:hr_sensor_hw.c ****         }
 365:hr_sensor_hw.c ****         break;
 366:hr_sensor_hw.c **** 
 367:hr_sensor_hw.c ****         case buzzer_beep_short: /* One short beep will be sounded */
 368:hr_sensor_hw.c ****             /* FALLTHROUGH */
 369:hr_sensor_hw.c ****         case buzzer_beep_twice: /* Two short beeps will be sounded */
 370:hr_sensor_hw.c ****             /* FALLTHROUGH */
 371:hr_sensor_hw.c ****         case buzzer_beep_thrice: /* Three short beeps will be sounded */
 372:hr_sensor_hw.c ****         {
 373:hr_sensor_hw.c ****             beep_timer = SHORT_BEEP_TIMER_VALUE;
 374:hr_sensor_hw.c ****         }
 375:hr_sensor_hw.c ****         break;
 376:hr_sensor_hw.c **** 
 377:hr_sensor_hw.c ****         case buzzer_beep_long:
 378:hr_sensor_hw.c ****         {
 379:hr_sensor_hw.c ****             /* One long beep will be sounded */
 380:hr_sensor_hw.c ****             beep_timer = LONG_BEEP_TIMER_VALUE;
 381:hr_sensor_hw.c ****         }
 382:hr_sensor_hw.c ****         break;
 383:hr_sensor_hw.c **** 
 384:hr_sensor_hw.c ****         default:
 385:hr_sensor_hw.c ****         {
 386:hr_sensor_hw.c ****             /* No such beep type defined */
 387:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 388:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 389:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 390:hr_sensor_hw.c ****              */
 391:hr_sensor_hw.c ****         }
 392:hr_sensor_hw.c ****         break;
 393:hr_sensor_hw.c ****     }
 394:hr_sensor_hw.c **** 
 395:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 396:hr_sensor_hw.c ****     {
 397:hr_sensor_hw.c ****         /* Initialize beep count to zero */
 398:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 399:hr_sensor_hw.c **** 
 400:hr_sensor_hw.c ****         /* Enable buzzer */
 401:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 402:hr_sensor_hw.c **** 
 403:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 404:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 405:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 406:hr_sensor_hw.c ****     }
 407:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 408:hr_sensor_hw.c **** }
 409:hr_sensor_hw.c **** 
 410:hr_sensor_hw.c **** 
 411:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 412:hr_sensor_hw.c **** 
 413:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 414:hr_sensor_hw.c ****  *  NAME
 415:hr_sensor_hw.c ****  *      GetRRValue
 416:hr_sensor_hw.c ****  *
 417:hr_sensor_hw.c ****  *  DESCRIPTION
 418:hr_sensor_hw.c ****  *      Get RR value by reading the HR_INPUT_PIO
 419:hr_sensor_hw.c ****  *
 420:hr_sensor_hw.c ****  *  RETURNS
 421:hr_sensor_hw.c ****  *      UINT32: RR value 
 422:hr_sensor_hw.c ****  *
 423:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 424:hr_sensor_hw.c **** 
 425:hr_sensor_hw.c **** extern uint32 GetRRValue(void)
 426:hr_sensor_hw.c **** {
 427:hr_sensor_hw.c **** 
 428:hr_sensor_hw.c ****     /* handle heartrate events ie changes to HR_INPUT_PIO */
 429:hr_sensor_hw.c ****     /* value is in 30.517us (32768KHz) intervals */
 430:hr_sensor_hw.c **** 
 431:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 432:hr_sensor_hw.c **** 
 433:hr_sensor_hw.c **** }
 434:hr_sensor_hw.c **** 
 435:hr_sensor_hw.c **** #endif /* !NO_ACTUAL_MEASUREMENT */
 436:hr_sensor_hw.c **** 
 437:hr_sensor_hw.c **** 
 438:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 439:hr_sensor_hw.c ****  *  NAME
 440:hr_sensor_hw.c ****  *      HandlePIOChangedEvent
 441:hr_sensor_hw.c ****  *
 442:hr_sensor_hw.c ****  *  DESCRIPTION
 443:hr_sensor_hw.c ****  *      This function handles PIO Changed event
 444:hr_sensor_hw.c ****  *
 445:hr_sensor_hw.c ****  *  RETURNS
 446:hr_sensor_hw.c ****  *      Nothing.
 447:hr_sensor_hw.c ****  *
 448:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 449:hr_sensor_hw.c **** 
 450:hr_sensor_hw.c **** extern void HandlePIOChangedEvent(uint32 pio_changed)
 451:hr_sensor_hw.c **** {
 452:hr_sensor_hw.c ****     /* PIO changed */
 453:hr_sensor_hw.c ****     uint32 pios = PioGets();
 454:hr_sensor_hw.c **** 
 455:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 456:hr_sensor_hw.c ****     {
 457:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 458:hr_sensor_hw.c ****         {
 459:hr_sensor_hw.c ****             /* This event comes when a button is pressed */
 460:hr_sensor_hw.c **** 
 461:hr_sensor_hw.c ****             /* Start a timer for LONG_BUTTON_PRESS_TIMER seconds. If timer expi-
 462:hr_sensor_hw.c ****              * res before we receive a button release event then it was a long -
 463:hr_sensor_hw.c ****              * press and if we receive a button release pio changed event, it -
 464:hr_sensor_hw.c ****              * means it was a short press.
 465:hr_sensor_hw.c ****              */
 466:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 467:hr_sensor_hw.c **** 
 468:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 469:hr_sensor_hw.c ****                                            EXTRA_LONG_BUTTON_PRESS_TIMER,
 470:hr_sensor_hw.c ****                                            TRUE,
 471:hr_sensor_hw.c ****                                            HandleExtraLongButtonPress);
 472:hr_sensor_hw.c ****         }
 473:hr_sensor_hw.c ****         else
 474:hr_sensor_hw.c ****         {
 475:hr_sensor_hw.c ****             /* This event comes when a button is released */
 476:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 477:hr_sensor_hw.c ****             {
 478:hr_sensor_hw.c ****                 /* Timer was already running. This means it was a short button 
 479:hr_sensor_hw.c ****                  * press.
 480:hr_sensor_hw.c ****                  */
 481:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 482:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 483:hr_sensor_hw.c **** 
 484:hr_sensor_hw.c ****                 HandleShortButtonPress();
 485:hr_sensor_hw.c ****             }
 486:hr_sensor_hw.c ****         }
 487:hr_sensor_hw.c ****     }
 488:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 489:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 490:hr_sensor_hw.c ****     {
 491:hr_sensor_hw.c ****         /* Process the event on the falling edge and ignore the rising edge 
 492:hr_sensor_hw.c ****          * events.
 493:hr_sensor_hw.c ****          */
 494:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 495:hr_sensor_hw.c ****         {
 496:hr_sensor_hw.c ****             HandleHRInputEvent();
 497:hr_sensor_hw.c ****         }
 498:hr_sensor_hw.c ****     }
 499:hr_sensor_hw.c **** #endif
 500:hr_sensor_hw.c **** 
 501:hr_sensor_hw.c **** }
 502:hr_sensor_hw.c **** 
 503:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 504:hr_sensor_hw.c ****  *  NAME
 505:hr_sensor_hw.c ****  *      HrInitSwitchHardware 
 506:hr_sensor_hw.c ****  *
 507:hr_sensor_hw.c ****  *  DESCRIPTION
 508:hr_sensor_hw.c ****  *      This function is called to initialise switch hardware
 509:hr_sensor_hw.c ****  *
 510:hr_sensor_hw.c ****  *  RETURNS
 511:hr_sensor_hw.c ****  *      Nothing.
 512:hr_sensor_hw.c ****  *
 513:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 514:hr_sensor_hw.c **** 
 515:hr_sensor_hw.c **** extern void HrInitSwitchHardware(void)
 516:hr_sensor_hw.c **** {
 517:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
 518:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
 519:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
 520:hr_sensor_hw.c **** 
 521:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 522:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 523:hr_sensor_hw.c **** 
 524:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 525:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
 526:hr_sensor_hw.c **** }
 527:hr_sensor_hw.c **** 
 528:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 529:hr_sensor_hw.c ****  *  NAME
 530:hr_sensor_hw.c ****  *      HrHwDataInit
 531:hr_sensor_hw.c ****  *
 532:hr_sensor_hw.c ****  *  DESCRIPTION
 533:hr_sensor_hw.c ****  *      This function initialises switch hardware data structure
 534:hr_sensor_hw.c ****  *
 535:hr_sensor_hw.c ****  *  RETURNS
 536:hr_sensor_hw.c ****  *      Nothing.
 537:hr_sensor_hw.c ****  *
 538:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 539:hr_sensor_hw.c **** 
 540:hr_sensor_hw.c **** extern void HrInitSwitchData(void)
 541:hr_sensor_hw.c **** {
  20                 	 1 544 0
 542:hr_sensor_hw.c ****     /* Reset last value */
 543:hr_sensor_hw.c **** }
  21                 	bra	0,X
  22 0000 00 E2       	.LFE8:
  23                 		.size	HrInitSwitchData, .-HrInitSwitchData
  24                 		.global	__size_of_HrInitSwitchData
  25                 		.equ	__size_of_HrInitSwitchData,. - HrInitSwitchData
  26                 		.section	.text.HandleSwitchPIOChangedEvent,"ax",@progbits
  27                 		.global	HandleSwitchPIOChangedEvent
  28                 		.type	HandleSwitchPIOChangedEvent, @function
  29                 	HandleSwitchPIOChangedEvent:
  30                 	.LFB9:
  31                 		.loc 1 559 0
 544:hr_sensor_hw.c **** 
 545:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 546:hr_sensor_hw.c ****  *  NAME
 547:hr_sensor_hw.c ****  *      HandleSwitchPIOChangedEvent
 548:hr_sensor_hw.c ****  *
 549:hr_sensor_hw.c ****  *  DESCRIPTION
 550:hr_sensor_hw.c ****  *      This function handles Switch PIO Changed event
 551:hr_sensor_hw.c ****  *
 552:hr_sensor_hw.c ****  *  RETURNS
 553:hr_sensor_hw.c ****  *      Nothing.
 554:hr_sensor_hw.c ****  *
 555:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 556:hr_sensor_hw.c **** 
 557:hr_sensor_hw.c **** extern void HandleSwitchPIOChangedEvent(uint32 pio_changed)
 558:hr_sensor_hw.c **** {
  32                 	c 1 560 0
  33                 		ld	AL,#0x0000
 559:hr_sensor_hw.c ****     g_dimmer_data.last_dimmer_var = 0;
  34                 	t	AL,@g_dimmer_data
  35 0000 00 14       		.loc 1 561 0
  36 0001 00 00 00 25 		bra	0,X
 560:hr_sensor_hw.c **** }...
  37                 	E9:
  38 0003 00 E2       		.size	HandleSwitchPIOChangedEvent, .-HandleSwitchPIOChangedEvent
  39                 		.global	__size_of_HandleSwitchPIOChangedEvent
  40                 		.equ	__size_of_HandleSwitchPIOChangedEvent,. - HandleSwitchPIOChangedEvent
  41                 		.section	.text.HrInitSwitchHardware,"ax",@progbits
  42                 		.global	HrInitSwitchHardware
  43                 		.type	HrInitSwitchHardware, @function
  44                 	HrInitSwitchHardware:
  45                 	.LFB7:
  46                 		.loc 1 517 0
  47                 		enter	#0x0002
 517:hr_sensor_hw.c **** {
  48                 	oc 1 518 0
  49 0000 02 0B       		ld	AL,#0x0001
  50                 		st	AL,@(0,Y)
 518:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
  51                 		AH,#0x0000
  52 0001 01 14       		ld	AL,#0x0008
  53 0002 00 27       		bsr	PioSetModes
  54 0003 00 10       		.loc 1 519 0
  55 0004 08 14       		ld	AL,#0x0003
  56 0005 00 00 00 00 		ld	AH,#0x0000
  56      00 9C 
 519:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
  57                 	ioSetDir
  58 0008 03 14       		.loc 1 520 0
  59 0009 00 10       		ld	AL,#0x0007
  60 000a 00 00 00 00 		st	AL,@(0,Y)
  60      00 9C 
 520:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
  61                 	AH,#0x0000
  62 000d 07 14       		ld	AL,#0x0008
  63 000e 00 27       		bsr	PioSetPullModes
  64 000f 00 10       		.loc 1 523 0
  65 0010 08 14       		ld	AL,#0x0001
  66 0011 00 00 00 00 		ld	AH,#0x0000
  66      00 9C 
 523:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
  67                 	ioEnableEdgeCapture
  68 0014 01 14       		.loc 1 526 0
  69 0015 00 10       		ld	AL,#0x0003
  70 0016 00 00 00 00 		st	AL,@(0,Y)
  70      00 9C 
 526:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
  71                 	AH,#0x0000
  72 0019 03 14       		ld	AL,#0x0008
  73 001a 00 27       		bsr	PioSetEventMask
  74 001b 00 10       		.loc 1 527 0
  75 001c 08 14       		leave	#0x0002
  76 001d 00 00 00 00 	.LFE7:
  76      00 9C 
 527:hr_sensor_hw.c **** }
  77                 		HrInitSwitchHardware, .-HrInitSwitchHardware
  78 0020 02 0F       		.global	__size_of_HrInitSwitchHardware
  79                 		.equ	__size_of_HrInitSwitchHardware,. - HrInitSwitchHardware
  80                 		.section	.text.HrHwDataInit,"ax",@progbits
  81                 		.global	HrHwDataInit
  82                 		.type	HrHwDataInit, @function
  83                 	HrHwDataInit:
  84                 	.LFB4:
  85                 		.loc 1 320 0
  86                 		enter	#0x0001
  87                 	.LCFI1:
 320:hr_sensor_hw.c **** {
  88                 	 0
  89 0000 01 0B       		ld	X,#g_app_hw_data+3
  90                 		ld	AL,@(0,X)
 323:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
  91                 	r	TimerDelete
  92 0001 00 00 00 18 		.loc 1 324 0
  93 0003 00 16       		ld	AL,#0x0000
  94 0004 00 00 00 00 		ld	X,#g_app_hw_data+3
  94      00 9C 
 324:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
  95                 	AL,@(0,X)
  96 0007 00 14       		.loc 1 326 0
  97 0008 00 00 00 18 		leave	#0x0001
  98 000a 00 26       	.LFE4:
 326:hr_sensor_hw.c **** }
  99                 	ze	HrHwDataInit, .-HrHwDataInit
 100 000b 01 0F       		.global	__size_of_HrHwDataInit
 101                 		.equ	__size_of_HrHwDataInit,. - HrHwDataInit
 102                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
 103                 		.global	HandlePIOChangedEvent
 104                 		.type	HandlePIOChangedEvent, @function
 105                 	HandlePIOChangedEvent:
 106                 	.LFB6:
 107                 		.loc 1 452 0
 108                 	.LVL1:
 109                 		enter	#0x0004
 452:hr_sensor_hw.c **** {
 110                 		AL,@(0x0002,Y)
 111                 	.LVL2:
 112 0000 04 0B       		.loc 1 454 0
 113                 		bsr	PioGets
 114 0001 02 27       	.LVL3:
 115                 		ld	AH,@$XAP_AL
 454:hr_sensor_hw.c ****     uint32 pios = PioGets();
 116                 	
 117 0002 00 00 00 00 		.loc 1 456 0
 117      00 9C 
 118                 		ld	AL,@(0x0002,Y)
 119 0005 00 00 00 11 		and	AL,#0x0800
 120                 		beq	.L12
 456:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 121                 	c 1 458 0
 122 0007 02 17       		ld	AL,@$XAP_AH
 123 0008 08 00 00 C4 		and	AL,#0x0800
 124 000a 00 00 00 00 		bne	.L11
 124      00 F4 
 458:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 125                 	c 1 467 0
 126 000d 00 00 00 15 		ld	AL,@g_app_hw_data+0x0003
 127 000f 08 00 00 C4 		bsr	TimerDelete
 128 0011 00 00 00 00 	.LVL5:
 128      00 F0 
 467:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 129                 	c 1 469 0
 130 0014 00 00 00 15 		ld	AL,#0x0001
 131 0016 00 00 00 00 		st	AL,@(0,Y)
 131      00 9C 
 132                 		ld	AL,#HandleExtraLongButtonPress
 469:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 133                 	AL,@(0x0001,Y)
 134 0019 01 14       		ld	AH,#0x003d
 135 001a 00 27       		ld	AL,#0x0900
 136 001b 00 00 00 14 		bsr	TimerCreate
 137 001d 01 27       		st	AL,@g_app_hw_data+0x0003
 138 001e 3D 10       		bra	.L12
 139 001f 09 00 00 14 	.LVL6:
 140 0021 00 00 00 00 	.L11:
 140      00 9C 
 141 0024 00 00 00 25 		.loc 1 477 0
 142 0026 00 00 00 00 		ld	AL,@g_app_hw_data+0x0003
 142      00 E0 
 143                 		beq	.L12
 144                 		.loc 1 482 0
 477:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 145                 	lete
 146 0029 00 00 00 15 	.LVL7:
 147 002b 00 00 00 00 		.loc 1 483 0
 147      00 F4 
 482:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 148                 		AL,#0x0000
 149 002e 00 00 00 00 		st	AL,@g_app_hw_data+0x0003
 149      00 9C 
 150                 		.loc 1 485 0
 483:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 151                 	r	HandleShortButtonPress
 152 0031 00 14       	.LVL8:
 153 0032 00 00 00 25 	.L12:
 485:hr_sensor_hw.c ****                 HandleShortButtonPress();
 154                 	oc 1 502 0
 155 0034 00 00 00 00 		leave	#0x0004
 155      00 9C 
 156                 	.LFE6:
 157                 		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
 502:hr_sensor_hw.c **** }
 158                 	obal	__size_of_HandlePIOChangedEvent
 159 0037 04 0F       		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
 160                 		.section	.text.SoundBuzzer,"ax",@progbits
 161                 		.global	SoundBuzzer
 162                 		.type	SoundBuzzer, @function
 163                 	SoundBuzzer:
 164                 	.LFB5:
 165                 		.loc 1 344 0
 166                 	.LVL9:
 167                 		enter	#0x0006
 168                 	.LCFI3:
 344:hr_sensor_hw.c **** {
 169                 	0002,Y)
 170                 		.loc 1 348 0
 171 0000 06 0B       		ld	AL,#0x0000
 172                 	.LVL10:
 173 0001 02 27       		ld	AH,#0x0000
 348:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 174                 	PioEnablePWM
 175 0002 00 14       		.loc 1 350 0
 176                 		ld	AL,@g_app_hw_data
 177 0003 00 10       		bsr	TimerDelete
 178 0004 00 00 00 00 		.loc 1 351 0
 178      00 9C 
 350:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 179                 	L,#0x0000
 180 0007 00 00 00 15 		st	AL,@g_app_hw_data
 181 0009 00 00 00 00 		.loc 1 353 0
 181      00 9C 
 351:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 182                 		AL,@g_app_hw_data+0x0002
 183 000c 00 14       		.loc 1 358 0
 184 000d 00 00 00 25 		ld	AL,@(0x0002,Y)
 353:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 185                 		AL,@g_app_hw_data+0x0001
 186 000f 00 00 00 25 		.loc 1 360 0
 358:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 187                 	mp	AL,#0x0005
 188 0011 02 17       		bcc	.L14
 189 0012 00 00 00 25 		ld	AL,#0x0001
 360:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 190                 	l	@(0x0002,Y)
 191 0014 05 84       		ld	AH,@$XAP_AL
 192 0015 00 00 00 00 		and	AL,#0x001b
 192      00 F8 
 193 0018 01 14       		bne	.L21
 194 0019 02 A3       		ld	AL,@$XAP_AH
 195 001a 00 00 00 11 		and	AL,#0x0004
 196 001c 1B C4       		beq	.L14
 197 001d 00 00 00 00 		ld	AL,#0x0007
 197      00 F0 
 198 0020 00 00 00 15 		st	AL,@(0x0003,Y)
 199 0022 04 C4       		ld	AL,#0xa120
 200 0023 00 00 00 00 		bra	.L20
 200      00 F4 
 201 0026 07 14       	.L14:
 202 0027 03 27       		.loc 1 388 0
 203 0028 A1 00 20 14 		ld	AL,#0x000b
 204 002a 00 00 00 00 		bsr	ReportPanic
 204      00 E0 
 205                 	.L21:
 388:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 206                 	st	AL,@(0x0003,Y)
 207 002d 0B 14       		ld	AL,#0x86a0
 208 002e 00 00 00 00 	.L20:
 208      00 9C 
 209                 		st	AL,@(0x0004,Y)
 210 0031 01 14       		.loc 1 396 0
 211 0032 03 27       		tst	@g_app_hw_data+0x0001
 212 0033 87 00 A0 14 		beq	.L19
 213                 		.loc 1 399 0
 214 0035 04 27       		ld	AL,#0x0000
 396:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 215                 	_app_hw_data+0x0002
 216 0036 00 00 00 99 		.loc 1 402 0
 217 0038 00 00 00 00 		ld	AH,#0x0001
 217      00 F4 
 399:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 218                 	r	PioEnablePWM
 219 003b 00 14       		.loc 1 404 0
 220 003c 00 00 00 25 		ld	AL,@g_app_hw_data
 402:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 221                 	r	TimerDelete
 222 003e 01 10       		.loc 1 405 0
 223 003f 00 00 00 00 		ld	AL,#0x0001
 223      00 9C 
 404:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 224                 		AL,@(0,Y)
 225 0042 00 00 00 15 		ld	AL,#appBuzzerTimerHandler
 226 0044 00 00 00 00 		st	AL,@(0x0001,Y)
 226      00 9C 
 405:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 227                 		AH,@(0x0003,Y)
 228 0047 01 14       		ld	AL,@(0x0004,Y)
 229 0048 00 27       		bsr	TimerCreate
 230 0049 00 00 00 14 		st	AL,@g_app_hw_data
 231 004b 01 27       	.L19:
 232 004c 03 13       		.loc 1 409 0
 233 004d 04 17       		leave	#0x0006
 234 004e 00 00 00 00 	.LFE5:
 234      00 9C 
 235 0051 00 00 00 25 		.size	SoundBuzzer, .-SoundBuzzer
 236                 		.global	__size_of_SoundBuzzer
 409:hr_sensor_hw.c **** }
 237                 	ze_of_SoundBuzzer,. - SoundBuzzer
 238 0053 06 0F       		.section	.text.appBuzzerTimerHandler,"ax",@progbits
 239                 		.type	appBuzzerTimerHandler, @function
 240                 	appBuzzerTimerHandler:
 241                 	.LFB2:
 242                 		.loc 1 128 0
 243                 	.LVL11:
 244                 		enter	#0x0003
 245                 	.LCFI4:
 246                 		.loc 1 131 0
 128:hr_sensor_hw.c **** {
 247                 	0000
 248                 	.LVL12:
 249 0000 03 0B       		st	AL,@g_app_hw_data
 250                 		.loc 1 133 0
 131:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 251                 	AL,@g_app_hw_data+0x0001
 252 0001 00 14       		cmp	AL,#0x0003
 253                 		beq	.L25
 254 0002 00 00 00 25 		cmp	AL,#0x0004
 133:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 255                 		.L27
 256 0004 00 00 00 15 		cmp	AL,#0x0001
 257 0006 03 84       		bcs	.L23
 258 0007 00 00 00 00 		bra	.L42
 258      00 F4 
 259 000a 04 84       	.L27:
 260 000b 00 00 00 00 		cmp	AL,#0x0004
 260      00 F8 
 261 000e 01 84       		bne	.L23
 262 000f 00 00 00 00 		bra	.L43
 262      00 FC 
 263 0012 00 00 00 00 	.L42:
 263      00 E0 
 264                 		.loc 1 138 0
 265 0015 04 84       		ld	X,#0x0000
 266 0016 00 00 00 00 		st	X,@g_app_hw_data+0x0001
 266      00 F0 
 267 0019 00 00 00 00 		.loc 1 141 0
 267      00 E0 
 268                 		ld	AL,#0x0000
 138:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 269                 	
 270 001c 00 18       		bra	.L40
 271 001d 00 00 00 29 	.L25:
 141:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 272                 	loc 1 146 0
 273 001f 00 14       		ld	AL,@g_app_hw_data+0x0002
 274 0020 00 10       		bne	.L29
 275 0021 00 00 00 00 		.loc 1 149 0
 275      00 E0 
 276                 		ld	AL,#0x0001
 146:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 277                 	.L39
 278 0024 00 00 00 15 	.L29:
 279 0026 00 00 00 00 		.loc 1 157 0
 279      00 F0 
 149:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 280                 	p	AL,#0x0001
 281 0029 01 14       		bne	.L34
 282 002a 00 00 00 00 		.loc 1 159 0
 282      00 E0 
 283                 		ld	X,#0x0002
 157:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 284                 	X,@g_app_hw_data+0x0002
 285 002d 01 84       		bra	.L41
 286 002e 00 00 00 00 	.L43:
 286      00 F0 
 159:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 287                 	oc 1 181 0
 288 0031 02 18       		ld	AL,@g_app_hw_data+0x0002
 289 0032 00 00 00 29 		beq	.L31
 290 0034 00 00 00 00 		cmp	AL,#0x0002
 290      00 E0 
 291                 		bne	.L32
 181:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 292                 	
 293 0037 00 00 00 15 		.loc 1 185 0
 294 0039 00 00 00 00 		add	AL,#0x0001
 294      00 F4 
 295 003c 02 84       	.L39:
 296 003d 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 296      00 F0 
 297                 		.loc 1 188 0
 185:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 298                 	L,#0x0000
 299 0040 01 34       		ld	AH,#0x0000
 300                 		bsr	PioEnablePWM
 301 0041 00 00 00 25 		ld	AH,#0x0000
 188:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 302                 	13:
 303 0043 00 14       		ld	AL,#0x61a8
 304 0044 00 10       	.LVL14:
 305 0045 00 00 00 00 		bra	.L28
 305      00 9C 
 306 0048 00 10       	.LVL15:
 307                 	.L32:
 308 0049 62 00 A8 14 		.loc 1 193 0
 309                 		cmp	AL,#0x0001
 310 004b 00 00 00 00 		beq	.L33
 310      00 E0 
 311                 		cmp	AL,#0x0003
 312                 		bne	.L34
 193:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 313                 	 1 196 0
 314 004e 01 84       		add	AL,#0x0001
 315 004f 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 315      00 F4 
 316 0052 03 84       	.L41:
 317 0053 00 00 00 00 		.loc 1 199 0
 317      00 F0 
 318                 		ld	AL,#0x0000
 196:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 319                 	,#0x0001
 320 0056 01 34       	.L40:
 321 0057 00 00 00 25 		bsr	PioEnablePWM
 322                 		bra	.L38
 199:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 323                 	:
 324 0059 00 14       		.loc 1 206 0
 325 005a 01 10       		ld	AL,#0x0000
 326                 		st	AL,@g_app_hw_data+0x0002
 327 005b 00 00 00 00 		.loc 1 209 0
 327      00 9C 
 328 005e 00 00 00 00 		ld	AH,#0x0000
 328      00 E0 
 329                 		bsr	PioEnablePWM
 206:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 330                 	 211 0
 331 0061 00 14       		ld	X,#0x0000
 332 0062 00 00 00 25 		st	X,@g_app_hw_data+0x0001
 209:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 333                 	a	.L38
 334 0064 00 10       	.L23:
 335 0065 00 00 00 00 		.loc 1 219 0
 335      00 9C 
 211:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 336                 		AL,#0x000b
 337 0068 00 18       		bsr	ReportPanic
 338 0069 00 00 00 29 	.L38:
 339 006b 00 00 00 00 		ld	AH,#0x0001
 339      00 E0 
 340                 	.LVL16:
 219:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 341                 	L,#0x86a0
 342 006e 0B 14       	.LVL17:
 343 006f 00 00 00 00 	.L28:
 343      00 9C 
 344                 		.loc 1 227 0
 345 0072 01 10       		tst	@g_app_hw_data+0x0001
 346                 		beq	.L36
 347 0073 87 00 A0 14 		.loc 1 230 0
 348                 		ld	X,#0x0001
 349                 		st	X,@(0,Y)
 227:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 350                 	pBuzzerTimerHandler
 351 0075 00 00 00 99 		st	X,@(0x0001,Y)
 352 0077 00 00 00 00 		bsr	TimerCreate
 352      00 F4 
 230:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 353                 	L18:
 354 007a 01 18       		st	AL,@g_app_hw_data
 355 007b 00 2B       	.LVL19:
 356 007c 00 00 00 18 	.L36:
 357 007e 01 2B       		.loc 1 233 0
 358 007f 00 00 00 00 		leave	#0x0003
 358      00 9C 
 359                 	.LFE2:
 360 0082 00 00 00 25 		.size	appBuzzerTimerHandler, .-appBuzzerTimerHandler
 361                 		.equ	__size_of_appBuzzerTimerHandler,. - appBuzzerTimerHandler
 362                 		.section	.text.HrInitHardware,"ax",@progbits
 233:hr_sensor_hw.c **** }
 363                 	rInitHardware
 364 0084 03 0F       		.type	HrInitHardware, @function
 365                 	HrInitHardware:
 366                 	.LFB3:
 367                 		.loc 1 254 0
 368                 		enter	#0x0008
 369                 	.LCFI5:
 370                 		.loc 1 266 0
 371                 		ld	AL,#0x0000
 372                 		st	AL,@(0,Y)
 254:hr_sensor_hw.c **** {
 373                 	0000
 374 0000 08 0B       		ld	AL,#0x0800
 375                 		bsr	PioSetModes
 266:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 376                 	oc 1 267 0
 377 0001 00 14       		ld	AL,#0x000b
 378 0002 00 27       		ld	AH,#0x0000
 379 0003 00 10       		bsr	PioSetDir
 380 0004 08 00 00 14 		.loc 1 268 0
 381 0006 00 00 00 00 		ld	AL,#0x0007
 381      00 9C 
 267:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 382                 	,@(0,Y)
 383 0009 0B 14       		ld	AH,#0x0000
 384 000a 00 10       		ld	AL,#0x0800
 385 000b 00 00 00 00 		bsr	PioSetPullModes
 385      00 9C 
 268:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 386                 	c 1 271 0
 387 000e 07 14       		ld	AL,#0x0003
 388 000f 00 27       		st	AL,@(0,Y)
 389 0010 00 10       		ld	AH,#0x0000
 390 0011 08 00 00 14 		ld	AL,#0x0800
 391 0013 00 00 00 00 		bsr	PioSetEventMask
 391      00 9C 
 271:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 392                 	1 288 0
 393 0016 03 14       		ld	AL,#0x0004
 394 0017 00 27       		st	AL,@(0,Y)
 395 0018 00 10       		ld	AH,#0x0000
 396 0019 08 00 00 14 		ld	AL,#0x0008
 397 001b 00 00 00 00 		bsr	PioSetModes
 397      00 9C 
 288:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 398                 	1 291 0
 399 001e 04 14       		ld	AL,#0x0002
 400 001f 00 27       		st	AL,@(0,Y)
 401 0020 00 10       		ld	AL,#0x000f
 402 0021 08 14       		st	AL,@(0x0001,Y)
 403 0022 00 00 00 00 		ld	AL,#0x0000
 403      00 9C 
 291:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 404                 	,@(0x0002,Y)
 405 0025 02 14       		ld	AL,#0x0002
 406 0026 00 27       		st	AL,@(0x0003,Y)
 407 0027 0F 14       		ld	AL,#0x000f
 408 0028 01 27       		st	AL,@(0x0004,Y)
 409 0029 00 14       		ld	AL,#0x0000
 410 002a 02 27       		st	AL,@(0x0005,Y)
 411 002b 02 14       		ld	AL,#0x00ff
 412 002c 03 27       		st	AL,@(0x0006,Y)
 413 002d 0F 14       		ld	AL,#0x0000
 414 002e 04 27       		ld	AH,#0x0000
 415 002f 00 14       		bsr	PioConfigPWM
 416 0030 05 27       		.loc 1 296 0
 417 0031 01 00 FF 14 		ld	AL,#0x0000
 418 0033 06 27       		ld	AH,#0x0000
 419 0034 00 14       		bsr	PioEnablePWM
 420 0035 00 10       		.loc 1 301 0
 421 0036 00 00 00 00 		ld	AL,#0x0005
 421      00 9C 
 296:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 422                 	Mode
 423 0039 00 14       		.loc 1 303 0
 424 003a 00 10       		bsr	HrInitSwitchHardware
 425 003b 00 00 00 00 		.loc 1 304 0
 425      00 9C 
 301:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 426                 	ve	#0x0008
 427 003e 05 14       	.LFE3:
 428 003f 00 00 00 00 		.size	HrInitHardware, .-HrInitHardware
 428      00 9C 
 303:hr_sensor_hw.c ****     HrInitSwitchHardware();
 429                 	lobal	__size_of_HrInitHardware
 430 0042 00 00 00 00 		.equ	__size_of_HrInitHardware,. - HrInitHardware
 430      00 9C 
 304:hr_sensor_hw.c **** }
 431                 	comm g_app_hw_data, 4, 1
 432 0045 08 0F       	
 433                 		.comm g_dimmer_data, 1, 1
 434                 	
 435                 		.section	.debug_frame,"",@progbits
 436                 	.Lframe0:
 437                 		.4byte	.LECIE0-.LSCIE0
 438                 	.LSCIE0:
 439                 		.4byte	0xffffffff
 440                 		.1byte	0x1
 441                 		.ascii "\000"
 442                 		.1byte	0x1
 443 0000 00 00 00 00 		.1byte	0x7f
 444                 		.1byte	0x3
 445 0002 FF FF FF FF 		.1byte	0xc
 446 0004 01          		.1byte	0x5
 447 0004 00          		.1byte	0x0
 448 0005 01          		.p2align	2
 449 0005 7F          	.LECIE0:
 450 0006 03          	.LSFDE0:
 451 0006 0C          		.4byte	.LEFDE0-.LASFDE0
 452 0007 05          	.LASFDE0:
 453 0007 00          		.4byte	.Lframe0
 454                 		.4byte	.LFB8
 455                 		.4byte	.LFE8-.LFB8
 456                 		.p2align	2
 457 0008 00 00 00 00 	.LEFDE0:
 458                 	.LSFDE2:
 459 000a 00 00 00 00 		.4byte	.LEFDE2-.LASFDE2
 460 000c 00 00 00 00 	.LASFDE2:
 461 000e 00 00 00 01 		.4byte	.Lframe0
 462                 		.4byte	.LFB9
 463                 		.4byte	.LFE9-.LFB9
 464                 		.p2align	2
 465 0010 00 00 00 00 	.LEFDE2:
 466                 	.LSFDE4:
 467 0012 00 00 00 00 		.4byte	.LEFDE4-.LASFDE4
 468 0014 00 00 00 00 	.LASFDE4:
 469 0016 00 00 00 00 		.4byte	.Lframe0
 470                 		.4byte	.LFB7
 471                 		.4byte	.LFE7-.LFB7
 472                 		.1byte	0x4
 473 0018 00 00 00 00 		.4byte	.LCFI0-.LFB7
 474                 		.1byte	0xe
 475 001a 00 00 00 00 		.1byte	0x2
 476 001c 00 00 00 00 		.1byte	0x83
 477 001e 00 00 00 00 		.1byte	0x1
 478 0020 41          		.p2align	2
 479                 	.LEFDE4:
 480 0020 0E          	.LSFDE6:
 481 0021 02          		.4byte	.LEFDE6-.LASFDE6
 482 0021 83          	.LASFDE6:
 483 0022 01          		.4byte	.Lframe0
 484 0022 00 00 00    		.4byte	.LFB4
 485                 		.4byte	.LFE4-.LFB4
 486                 		.1byte	0x4
 487 0024 00 00 00 00 		.4byte	.LCFI1-.LFB4
 488                 		.1byte	0xe
 489 0026 00 00 00 00 		.1byte	0x1
 490 0028 00 00 00 00 		.1byte	0x83
 491 002a 00 00 00 00 		.1byte	0x1
 492 002c 41          		.p2align	2
 493                 	.LEFDE6:
 494 002c 0E          	.LSFDE8:
 495 002d 01          		.4byte	.LEFDE8-.LASFDE8
 496 002d 83          	.LASFDE8:
 497 002e 01          		.4byte	.Lframe0
 498 002e 00 00 00    		.4byte	.LFB6
 499                 		.4byte	.LFE6-.LFB6
 500                 		.1byte	0x4
 501 0030 00 00 00 00 		.4byte	.LCFI2-.LFB6
 502                 		.1byte	0xe
 503 0032 00 00 00 00 		.1byte	0x4
 504 0034 00 00 00 00 		.1byte	0x83
 505 0036 00 00 00 00 		.1byte	0x1
 506 0038 41          		.p2align	2
 507                 	.LEFDE8:
 508 0038 0E          	.LSFDE10:
 509 0039 04          		.4byte	.LEFDE10-.LASFDE10
 510 0039 83          	.LASFDE10:
 511 003a 01          		.4byte	.Lframe0
 512 003a 00 00 00    		.4byte	.LFB5
 513                 		.4byte	.LFE5-.LFB5
 514                 		.1byte	0x4
 515 003c 00 00 00 00 		.4byte	.LCFI3-.LFB5
 516                 		.1byte	0xe
 517 003e 00 00 00 00 		.1byte	0x6
 518 0040 00 00 00 00 		.1byte	0x83
 519 0042 00 00 00 00 		.1byte	0x1
 520 0044 41          		.p2align	2
 521                 	.LEFDE10:
 522 0044 0E          	.LSFDE12:
 523 0045 06          		.4byte	.LEFDE12-.LASFDE12
 524 0045 83          	.LASFDE12:
 525 0046 01          		.4byte	.Lframe0
 526 0046 00 00 00    		.4byte	.LFB2
 527                 		.4byte	.LFE2-.LFB2
 528                 		.1byte	0x4
 529 0048 00 00 00 00 		.4byte	.LCFI4-.LFB2
 530                 		.1byte	0xe
 531 004a 00 00 00 00 		.1byte	0x3
 532 004c 00 00 00 00 		.1byte	0x83
 533 004e 00 00 00 00 		.1byte	0x1
 534 0050 41          		.p2align	2
 535                 	.LEFDE12:
 536 0050 0E          	.LSFDE14:
 537 0051 03          		.4byte	.LEFDE14-.LASFDE14
 538 0051 83          	.LASFDE14:
 539 0052 01          		.4byte	.Lframe0
 540 0052 00 00 00    		.4byte	.LFB3
 541                 		.4byte	.LFE3-.LFB3
 542                 		.1byte	0x4
 543 0054 00 00 00 00 		.4byte	.LCFI5-.LFB3
 544                 		.1byte	0xe
 545 0056 00 00 00 00 		.1byte	0x8
 546 0058 00 00 00 00 		.1byte	0x83
 547 005a 00 00 00 00 		.1byte	0x1
 548 005c 41          		.p2align	2
 549                 	.LEFDE14:
 550 005c 0E          		.text
 551 005d 08          	.Letext0:
 552 005d 83          		.section	.debug_loc,"",@progbits
 553 005e 01          	.Ldebug_loc0:
 554 005e 00 00 00    	.LLST2:
 555                 		.4byte	.LFB7
 556                 		.4byte	.LCFI0
 557                 		.2byte	0x1
 558                 		.1byte	0x55
 559                 		.4byte	.LCFI0
 560                 		.4byte	.LFE7
 561 0000 00 00 00 00 		.2byte	0x2
 562 0002 00 00 00 00 		.1byte	0x75
 563 0004 00 01       		.1byte	0x2
 564 0005 55          		.4byte	0x0
 565 0005 00 00 00 00 		.4byte	0x0
 566 0007 00 00 00 00 	.LLST3:
 567 0009 00 02       		.4byte	.LFB4
 568 000a 75          		.4byte	.LCFI1
 569 000b 02          		.2byte	0x1
 570 000b 00 00 00 00 		.1byte	0x55
 571 000d 00 00 00 00 		.4byte	.LCFI1
 572                 		.4byte	.LFE4
 573 000f 00 00 00 00 		.2byte	0x2
 574 0011 00 00 00 00 		.1byte	0x75
 575 0013 00 01       		.1byte	0x1
 576 0014 55          		.4byte	0x0
 577 0015 00 00 00 00 		.4byte	0x0
 578 0017 00 00 00 00 	.LLST4:
 579 0019 00 02       		.4byte	.LFB6
 580 001a 75          		.4byte	.LCFI2
 581 001a 01          		.2byte	0x1
 582 001b 00 00 00 00 		.1byte	0x55
 583 001d 00 00 00 00 		.4byte	.LCFI2
 584                 		.4byte	.LFE6
 585 001f 00 00 00 00 		.2byte	0x2
 586 0021 00 00 00 00 		.1byte	0x75
 587 0023 00 01       		.1byte	0x4
 588 0024 55          		.4byte	0x0
 589 0024 00 00 00 00 		.4byte	0x0
 590 0026 00 00 00 00 	.LLST5:
 591 0028 00 02       		.4byte	.LVL1
 592 0029 75          		.4byte	.LVL3
 593 002a 04          		.2byte	0x6
 594 002a 00 00 00 00 		.1byte	0x50
 595 002c 00 00 00 00 		.1byte	0x93
 596                 		.1byte	0x2
 597 002e 00 00 00 00 		.1byte	0x51
 598 0030 00 00 00 00 		.1byte	0x93
 599 0032 00 06       		.1byte	0x2
 600 0033 50          		.4byte	0x0
 601 0034 93          		.4byte	0x0
 602 0034 02          	.LLST6:
 603 0035 51          		.4byte	.LFB5
 604 0035 93          		.4byte	.LCFI3
 605 0036 02          		.2byte	0x1
 606 0036 00 00 00 00 		.1byte	0x55
 607 0038 00 00 00 00 		.4byte	.LCFI3
 608                 		.4byte	.LFE5
 609 003a 00 00 00 00 		.2byte	0x2
 610 003c 00 00 00 00 		.1byte	0x75
 611 003e 00 01       		.1byte	0x6
 612 003f 55          		.4byte	0x0
 613 0040 00 00 00 00 		.4byte	0x0
 614 0042 00 00 00 00 	.LLST7:
 615 0044 00 02       		.4byte	.LVL9
 616 0045 75          		.4byte	.LVL10
 617 0045 06          		.2byte	0x1
 618 0046 00 00 00 00 		.1byte	0x51
 619 0048 00 00 00 00 		.4byte	.LVL10
 620                 		.4byte	.LFE5
 621 004a 00 00 00 00 		.2byte	0x2
 622 004c 00 00 00 00 		.1byte	0x76
 623 004e 00 01       		.1byte	0x2
 624 004f 51          		.4byte	0x0
 625 004f 00 00 00 00 		.4byte	0x0
 626 0051 00 00 00 00 	.LLST8:
 627 0053 00 02       		.4byte	.LFB2
 628 0054 76          		.4byte	.LCFI4
 629 0055 02          		.2byte	0x1
 630 0055 00 00 00 00 		.1byte	0x55
 631 0057 00 00 00 00 		.4byte	.LCFI4
 632                 		.4byte	.LFE2
 633 0059 00 00 00 00 		.2byte	0x2
 634 005b 00 00 00 00 		.1byte	0x75
 635 005d 00 01       		.1byte	0x3
 636 005e 55          		.4byte	0x0
 637 005f 00 00 00 00 		.4byte	0x0
 638 0061 00 00 00 00 	.LLST9:
 639 0063 00 02       		.4byte	.LVL11
 640 0064 75          		.4byte	.LVL12
 641 0064 03          		.2byte	0x1
 642 0065 00 00 00 00 		.1byte	0x51
 643 0067 00 00 00 00 		.4byte	0x0
 644                 		.4byte	0x0
 645 0069 00 00 00 00 	.LLST10:
 646 006b 00 00 00 00 		.4byte	.LVL14
 647 006d 00 01       		.4byte	.LVL15
 648 006e 51          		.2byte	0x6
 649 006e 00 00 00 00 		.1byte	0x50
 650 0070 00 00 00 00 		.1byte	0x93
 651                 		.1byte	0x2
 652 0072 00 00 00 00 		.1byte	0x51
 653 0074 00 00 00 00 		.1byte	0x93
 654 0076 00 06       		.1byte	0x2
 655 0077 50          		.4byte	.LVL17
 656 0078 93          		.4byte	.LVL18
 657 0078 02          		.2byte	0x6
 658 0079 51          		.1byte	0x50
 659 0079 93          		.1byte	0x93
 660 007a 02          		.1byte	0x2
 661 007a 00 00 00 00 		.1byte	0x51
 662 007c 00 00 00 00 		.1byte	0x93
 663 007e 00 06       		.1byte	0x2
 664 007f 50          		.4byte	.LVL19
 665 0080 93          		.4byte	.LFE2
 666 0080 02          		.2byte	0x6
 667 0081 51          		.1byte	0x50
 668 0081 93          		.1byte	0x93
 669 0082 02          		.1byte	0x2
 670 0082 00 00 00 00 		.1byte	0x51
 671 0084 00 00 00 00 		.1byte	0x93
 672 0086 00 06       		.1byte	0x2
 673 0087 50          		.4byte	0x0
 674 0088 93          		.4byte	0x0
 675 0088 02          	.LLST11:
 676 0089 51          		.4byte	.LFB3
 677 0089 93          		.4byte	.LCFI5
 678 008a 02          		.2byte	0x1
 679 008a 00 00 00 00 		.1byte	0x55
 680 008c 00 00 00 00 		.4byte	.LCFI5
 681                 		.4byte	.LFE3
 682 008e 00 00 00 00 		.2byte	0x2
 683 0090 00 00 00 00 		.1byte	0x75
 684 0092 00 01       		.1byte	0x8
 685 0093 55          		.4byte	0x0
 686 0094 00 00 00 00 		.4byte	0x0
 687 0096 00 00 00 00 		.file 2 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/types.h"
 688 0098 00 02       		.file 3 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/pio.h"
 689 0099 75          		.file 4 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/timer.h"
 690 0099 08          		.file 5 "hr_sensor_hw.h"
 691 009a 00 00 00 00 		.file 6 "app_gatt.h"
 692 009c 00 00 00 00 		.section	.debug_info
 693                 		.4byte	0x407
 694                 		.2byte	0x2
 695                 		.4byte	.Ldebug_abbrev0
 696                 		.1byte	0x4
 697                 		.1byte	0x1
 698                 		.4byte	.LASF93
 699 0000 00 00 04 07 		.1byte	0x1
 700 0002 00 02       		.4byte	.LASF94
 701 0003 00 00 00 00 		.4byte	.LASF95
 702 0005 04          		.4byte	0x0
 703 0005 01          		.4byte	0x0
 704 0006 00 00 00 00 		.4byte	.Ldebug_ranges0+0x0
 705 0008 01          		.4byte	.Ldebug_line0
 706 0008 00 00 00 00 		.1byte	0x2
 707 000a 00 00 00 00 		.1byte	0x2
 708 000c 00 00 00 00 		.1byte	0x8
 709 000e 00 00 00 00 		.4byte	.LASF0
 710 0010 00 00 00 00 		.1byte	0x3
 711 0012 00 00 00 00 		.4byte	.LASF2
 712 0014 02          		.1byte	0x2
 713 0015 02          		.1byte	0x1f
 714 0015 08          		.4byte	0x3b
 715 0016 00 00 00 00 		.1byte	0x2
 716 0018 03          		.1byte	0x2
 717 0018 00 00 00 00 		.1byte	0x7
 718 001a 02          		.4byte	.LASF1
 719 001b 1F          		.1byte	0x3
 720 001b 00 00 00 3B 		.4byte	.LASF3
 721 001d 02          		.1byte	0x2
 722 001e 02          		.1byte	0x20
 723 001e 07          		.4byte	0x4d
 724 001f 00 00 00 00 		.1byte	0x2
 725 0021 03          		.1byte	0x4
 726 0021 00 00 00 00 		.1byte	0x7
 727 0023 02          		.4byte	.LASF4
 728 0024 20          		.1byte	0x2
 729 0024 00 00 00 4D 		.1byte	0x2
 730 0026 02          		.1byte	0x6
 731 0027 04          		.4byte	.LASF5
 732 0027 07          		.1byte	0x2
 733 0028 00 00 00 00 		.1byte	0x2
 734 002a 02          		.1byte	0x5
 735 002a 02          		.4byte	.LASF6
 736 002b 06          		.1byte	0x2
 737 002b 00 00 00 00 		.1byte	0x4
 738 002d 02          		.1byte	0x5
 739 002e 02          		.4byte	.LASF7
 740 002e 05          		.1byte	0x2
 741 002f 00 00 00 00 		.1byte	0x2
 742 0031 02          		.1byte	0x7
 743 0031 04          		.4byte	.LASF8
 744 0032 05          		.1byte	0x4
 745 0032 00 00 00 00 		.1byte	0x2
 746 0034 02          		.1byte	0x3
 747 0035 02          		.1byte	0x1b
 748 0035 07          		.4byte	0x10f
 749 0036 00 00 00 00 		.1byte	0x5
 750 0038 04          		.4byte	.LASF9
 751 0038 02          		.1byte	0x0
 752 0039 03          		.1byte	0x5
 753 0039 1B          		.4byte	.LASF10
 754 003a 00 00 01 0F 		.1byte	0x1
 755 003c 05          		.1byte	0x5
 756 003c 00 00 00 00 		.4byte	.LASF11
 757 003e 00          		.1byte	0x3
 758 003f 05          		.1byte	0x5
 759 003f 00 00 00 00 		.4byte	.LASF12
 760 0041 01          		.1byte	0x4
 761 0042 05          		.1byte	0x5
 762 0042 00 00 00 00 		.4byte	.LASF13
 763 0044 03          		.1byte	0x5
 764 0045 05          		.1byte	0x5
 765 0045 00 00 00 00 		.4byte	.LASF14
 766 0047 04          		.1byte	0x6
 767 0048 05          		.1byte	0x5
 768 0048 00 00 00 00 		.4byte	.LASF15
 769 004a 05          		.1byte	0x7
 770 004b 05          		.1byte	0x5
 771 004b 00 00 00 00 		.4byte	.LASF16
 772 004d 06          		.1byte	0x8
 773 004e 05          		.1byte	0x5
 774 004e 00 00 00 00 		.4byte	.LASF17
 775 0050 07          		.1byte	0x9
 776 0051 05          		.1byte	0x5
 777 0051 00 00 00 00 		.4byte	.LASF18
 778 0053 08          		.1byte	0xa
 779 0054 05          		.1byte	0x5
 780 0054 00 00 00 00 		.4byte	.LASF19
 781 0056 09          		.1byte	0xb
 782 0057 05          		.1byte	0x5
 783 0057 00 00 00 00 		.4byte	.LASF20
 784 0059 0A          		.1byte	0xc
 785 005a 05          		.1byte	0x5
 786 005a 00 00 00 00 		.4byte	.LASF21
 787 005c 0B          		.1byte	0xd
 788 005d 05          		.1byte	0x5
 789 005d 00 00 00 00 		.4byte	.LASF22
 790 005f 0C          		.1byte	0xe
 791 0060 05          		.1byte	0x5
 792 0060 00 00 00 00 		.4byte	.LASF23
 793 0062 0D          		.1byte	0xf
 794 0063 05          		.1byte	0x5
 795 0063 00 00 00 00 		.4byte	.LASF24
 796 0065 0E          		.1byte	0x10
 797 0066 05          		.1byte	0x5
 798 0066 00 00 00 00 		.4byte	.LASF25
 799 0068 0F          		.1byte	0x11
 800 0069 05          		.1byte	0x5
 801 0069 00 00 00 00 		.4byte	.LASF26
 802 006b 10          		.1byte	0x12
 803 006c 05          		.1byte	0x5
 804 006c 00 00 00 00 		.4byte	.LASF27
 805 006e 11          		.1byte	0x13
 806 006f 05          		.1byte	0x5
 807 006f 00 00 00 00 		.4byte	.LASF28
 808 0071 12          		.1byte	0x14
 809 0072 05          		.1byte	0x5
 810 0072 00 00 00 00 		.4byte	.LASF29
 811 0074 13          		.1byte	0x15
 812 0075 05          		.1byte	0x5
 813 0075 00 00 00 00 		.4byte	.LASF30
 814 0077 14          		.1byte	0x16
 815 0078 05          		.1byte	0x5
 816 0078 00 00 00 00 		.4byte	.LASF31
 817 007a 15          		.1byte	0x17
 818 007b 05          		.1byte	0x5
 819 007b 00 00 00 00 		.4byte	.LASF32
 820 007d 16          		.1byte	0x18
 821 007e 05          		.1byte	0x5
 822 007e 00 00 00 00 		.4byte	.LASF33
 823 0080 17          		.1byte	0x19
 824 0081 05          		.1byte	0x0
 825 0081 00 00 00 00 		.1byte	0x4
 826 0083 18          		.1byte	0x2
 827 0084 05          		.1byte	0x3
 828 0084 00 00 00 00 		.1byte	0x90
 829 0086 19          		.4byte	0x142
 830 0087 00          		.1byte	0x5
 831 0087 04          		.4byte	.LASF34
 832 0088 02          		.1byte	0x0
 833 0088 03          		.1byte	0x5
 834 0089 90          		.4byte	.LASF35
 835 0089 00 00 01 42 		.1byte	0x1
 836 008b 05          		.1byte	0x5
 837 008c 00 00 00 00 		.4byte	.LASF36
 838 008e 00          		.1byte	0x3
 839 008e 05          		.1byte	0x5
 840 008f 00 00 00 00 		.4byte	.LASF37
 841 0091 01          		.1byte	0x5
 842 0091 05          		.1byte	0x5
 843 0092 00 00 00 00 		.4byte	.LASF38
 844 0094 03          		.1byte	0x7
 845 0094 05          		.1byte	0x5
 846 0095 00 00 00 00 		.4byte	.LASF39
 847 0097 05          		.1byte	0x9
 848 0097 05          		.1byte	0x5
 849 0098 00 00 00 00 		.4byte	.LASF40
 850 009a 07          		.1byte	0xd
 851 009a 05          		.1byte	0x0
 852 009b 00 00 00 00 		.1byte	0x4
 853 009d 09          		.1byte	0x2
 854 009d 05          		.1byte	0x3
 855 009e 00 00 00 00 		.1byte	0xa7
 856 00a0 0D          		.4byte	0x175
 857 00a0 00          		.1byte	0x5
 858 00a1 04          		.4byte	.LASF41
 859 00a1 02          		.1byte	0x0
 860 00a2 03          		.1byte	0x5
 861 00a2 A7          		.4byte	.LASF42
 862 00a3 00 00 01 75 		.1byte	0x1
 863 00a5 05          		.1byte	0x5
 864 00a5 00 00 00 00 		.4byte	.LASF43
 865 00a7 00          		.1byte	0x3
 866 00a8 05          		.1byte	0x5
 867 00a8 00 00 00 00 		.4byte	.LASF44
 868 00aa 01          		.1byte	0x5
 869 00ab 05          		.1byte	0x5
 870 00ab 00 00 00 00 		.4byte	.LASF45
 871 00ad 03          		.1byte	0x7
 872 00ae 05          		.1byte	0x5
 873 00ae 00 00 00 00 		.4byte	.LASF46
 874 00b0 05          		.1byte	0x9
 875 00b1 05          		.1byte	0x5
 876 00b1 00 00 00 00 		.4byte	.LASF47
 877 00b3 07          		.1byte	0xd
 878 00b4 05          		.1byte	0x0
 879 00b4 00 00 00 00 		.1byte	0x4
 880 00b6 09          		.1byte	0x2
 881 00b7 05          		.1byte	0x3
 882 00b7 00 00 00 00 		.1byte	0xb9
 883 00b9 0D          		.4byte	0x196
 884 00ba 00          		.1byte	0x5
 885 00ba 04          		.4byte	.LASF48
 886 00bb 02          		.1byte	0x0
 887 00bb 03          		.1byte	0x5
 888 00bc B9          		.4byte	.LASF49
 889 00bc 00 00 01 96 		.1byte	0x1
 890 00be 05          		.1byte	0x5
 891 00bf 00 00 00 00 		.4byte	.LASF50
 892 00c1 00          		.1byte	0x2
 893 00c1 05          		.1byte	0x5
 894 00c2 00 00 00 00 		.4byte	.LASF51
 895 00c4 01          		.1byte	0x3
 896 00c4 05          		.1byte	0x0
 897 00c5 00 00 00 00 		.1byte	0x6
 898 00c7 02          		.1byte	0x2
 899 00c7 05          		.1byte	0x3
 900 00c8 00 00 00 00 		.2byte	0x1a3
 901 00ca 03          		.4byte	0x1b8
 902 00ca 00          		.1byte	0x5
 903 00cb 06          		.4byte	.LASF52
 904 00cb 02          		.1byte	0x0
 905 00cc 03          		.1byte	0x5
 906 00cc 01 A3       		.4byte	.LASF53
 907 00cd 00 00 01 B8 		.1byte	0x1
 908 00cf 05          		.1byte	0x5
 909 00d0 00 00 00 00 		.4byte	.LASF54
 910 00d2 00          		.1byte	0x2
 911 00d2 05          		.1byte	0x5
 912 00d3 00 00 00 00 		.4byte	.LASF55
 913 00d5 01          		.1byte	0x3
 914 00d5 05          		.1byte	0x0
 915 00d6 00 00 00 00 		.1byte	0x7
 916 00d8 02          		.1byte	0x2
 917 00d8 05          		.1byte	0x7
 918 00d9 00 00 00 00 		.1byte	0x3
 919 00db 03          		.4byte	.LASF56
 920 00db 00          		.1byte	0x4
 921 00dc 07          		.1byte	0x1f
 922 00dc 02          		.4byte	0x30
 923 00dd 07          		.1byte	0x4
 924 00dd 03          		.1byte	0x2
 925 00de 00 00 00 00 		.1byte	0x5
 926 00e0 04          		.1byte	0x29
 927 00e0 1F          		.4byte	0x1ed
 928 00e1 00 00 00 30 		.1byte	0x5
 929 00e3 04          		.4byte	.LASF57
 930 00e3 02          		.1byte	0x0
 931 00e4 05          		.1byte	0x5
 932 00e4 29          		.4byte	.LASF58
 933 00e5 00 00 01 ED 		.1byte	0x1
 934 00e7 05          		.1byte	0x5
 935 00e7 00 00 00 00 		.4byte	.LASF59
 936 00e9 00          		.1byte	0x2
 937 00ea 05          		.1byte	0x5
 938 00ea 00 00 00 00 		.4byte	.LASF60
 939 00ec 01          		.1byte	0x3
 940 00ed 05          		.1byte	0x5
 941 00ed 00 00 00 00 		.4byte	.LASF61
 942 00ef 02          		.1byte	0x4
 943 00f0 05          		.1byte	0x0
 944 00f0 00 00 00 00 		.1byte	0x3
 945 00f2 03          		.4byte	.LASF62
 946 00f3 05          		.1byte	0x5
 947 00f3 00 00 00 00 		.1byte	0x39
 948 00f5 04          		.4byte	0x1c6
 949 00f6 00          		.1byte	0x8
 950 00f6 03          		.1byte	0x8
 951 00f7 00 00 00 00 		.1byte	0x5
 952 00f9 05          		.1byte	0x3c
 953 00f9 39          		.4byte	0x239
 954 00fa 00 00 01 C6 		.1byte	0x9
 955 00fc 08          		.4byte	.LASF63
 956 00fc 08          		.1byte	0x5
 957 00fd 05          		.1byte	0x40
 958 00fd 3C          		.4byte	0x1bb
 959 00fe 00 00 02 39 		.1byte	0x2
 960 0100 09          		.1byte	0x23
 961 0100 00 00 00 00 		.1byte	0x0
 962 0102 05          		.1byte	0x9
 963 0103 40          		.4byte	.LASF64
 964 0103 00 00 01 BB 		.1byte	0x5
 965 0105 02          		.1byte	0x43
 966 0106 23          		.4byte	0x1ed
 967 0106 00          		.1byte	0x2
 968 0107 09          		.1byte	0x23
 969 0107 00 00 00 00 		.1byte	0x1
 970 0109 05          		.1byte	0x9
 971 010a 43          		.4byte	.LASF65
 972 010a 00 00 01 ED 		.1byte	0x5
 973 010c 02          		.1byte	0x49
 974 010d 23          		.4byte	0x30
 975 010d 01          		.1byte	0x2
 976 010e 09          		.1byte	0x23
 977 010e 00 00 00 00 		.1byte	0x2
 978 0110 05          		.1byte	0x9
 979 0111 49          		.4byte	.LASF66
 980 0111 00 00 00 30 		.1byte	0x5
 981 0113 02          		.1byte	0x4d
 982 0114 23          		.4byte	0x1bb
 983 0114 02          		.1byte	0x2
 984 0115 09          		.1byte	0x23
 985 0115 00 00 00 00 		.1byte	0x3
 986 0117 05          		.1byte	0x0
 987 0118 4D          		.1byte	0x3
 988 0118 00 00 01 BB 		.4byte	.LASF67
 989 011a 02          		.1byte	0x5
 990 011b 23          		.1byte	0x4f
 991 011b 03          		.4byte	0x1f8
 992 011c 00          		.1byte	0x8
 993 011c 03          		.1byte	0x2
 994 011d 00 00 00 00 		.1byte	0x5
 995 011f 05          		.1byte	0x52
 996 011f 4F          		.4byte	0x25b
 997 0120 00 00 01 F8 		.1byte	0x9
 998 0122 08          		.4byte	.LASF68
 999 0122 02          		.1byte	0x5
 1000 0123 05          		.1byte	0x53
 1001 0123 52          		.4byte	0x30
 1002 0124 00 00 02 5B 		.1byte	0x2
 1003 0126 09          		.1byte	0x23
 1004 0126 00 00 00 00 		.1byte	0x0
 1005 0128 05          		.1byte	0x0
 1006 0129 53          		.1byte	0x3
 1007 0129 00 00 00 30 		.4byte	.LASF69
 1008 012b 02          		.1byte	0x5
 1009 012c 23          		.1byte	0x54
 1010 012c 00          		.4byte	0x244
 1011 012d 00          		.1byte	0x4
 1012 012d 03          		.1byte	0x2
 1013 012e 00 00 00 00 		.1byte	0x6
 1014 0130 05          		.1byte	0x46
 1015 0130 54          		.4byte	0x2b7
 1016 0131 00 00 02 44 		.1byte	0x5
 1017 0133 04          		.4byte	.LASF70
 1018 0133 02          		.1byte	0x0
 1019 0134 06          		.1byte	0x5
 1020 0134 46          		.4byte	.LASF71
 1021 0135 00 00 02 B7 		.1byte	0x1
 1022 0137 05          		.1byte	0x5
 1023 0137 00 00 00 00 		.4byte	.LASF72
 1024 0139 00          		.1byte	0x2
 1025 013a 05          		.1byte	0x5
 1026 013a 00 00 00 00 		.4byte	.LASF73
 1027 013c 01          		.1byte	0x3
 1028 013d 05          		.1byte	0x5
 1029 013d 00 00 00 00 		.4byte	.LASF74
 1030 013f 02          		.1byte	0x4
 1031 0140 05          		.1byte	0x5
 1032 0140 00 00 00 00 		.4byte	.LASF75
 1033 0142 03          		.1byte	0x5
 1034 0143 05          		.1byte	0x5
 1035 0143 00 00 00 00 		.4byte	.LASF76
 1036 0145 04          		.1byte	0x6
 1037 0146 05          		.1byte	0x5
 1038 0146 00 00 00 00 		.4byte	.LASF77
 1039 0148 05          		.1byte	0x7
 1040 0149 05          		.1byte	0x5
 1041 0149 00 00 00 00 		.4byte	.LASF78
 1042 014b 06          		.1byte	0x8
 1043 014c 05          		.1byte	0x5
 1044 014c 00 00 00 00 		.4byte	.LASF79
 1045 014e 07          		.1byte	0x9
 1046 014f 05          		.1byte	0x5
 1047 014f 00 00 00 00 		.4byte	.LASF80
 1048 0151 08          		.1byte	0xa
 1049 0152 05          		.1byte	0x5
 1050 0152 00 00 00 00 		.4byte	.LASF81
 1051 0154 09          		.1byte	0xb
 1052 0155 05          		.1byte	0x0
 1053 0155 00 00 00 00 		.1byte	0xa
 1054 0157 0A          		.1byte	0x1
 1055 0158 05          		.4byte	.LASF82
 1056 0158 00 00 00 00 		.1byte	0x1
 1057 015a 0B          		.2byte	0x21e
 1058 015b 00          		.1byte	0x1
 1059 015b 0A          		.4byte	.LFB8
 1060 015c 01          		.4byte	.LFE8
 1061 015c 00 00 00 00 		.1byte	0x1
 1062 015e 01          		.1byte	0x55
 1063 015f 02 1E       		.1byte	0xb
 1064 0160 01          		.1byte	0x1
 1065 0160 00 00 00 00 		.4byte	.LASF85
 1066 0162 00 00 00 00 		.1byte	0x1
 1067 0164 01          		.2byte	0x22f
 1068 0165 55          		.1byte	0x1
 1069 0165 0B          		.4byte	.LFB9
 1070 0166 01          		.4byte	.LFE9
 1071 0166 00 00 00 00 		.1byte	0x1
 1072 0168 01          		.1byte	0x55
 1073 0169 02 2F       		.4byte	0x2f7
 1074 016a 01          		.1byte	0xc
 1075 016a 00 00 00 00 		.4byte	.LASF87
 1076 016c 00 00 00 00 		.1byte	0x1
 1077 016e 01          		.2byte	0x22e
 1078 016f 55          		.4byte	0x42
 1079 016f 00 00 02 F7 		.1byte	0x6
 1080 0171 0C          		.1byte	0x50
 1081 0172 00 00 00 00 		.1byte	0x93
 1082 0174 01          		.1byte	0x2
 1083 0174 02 2E       		.1byte	0x51
 1084 0175 00 00 00 42 		.1byte	0x93
 1085 0177 06          		.1byte	0x2
 1086 0178 50          		.1byte	0x0
 1087 0178 93          		.1byte	0xd
 1088 0179 02          		.1byte	0x1
 1089 0179 51          		.4byte	.LASF83
 1090 017a 93          		.1byte	0x1
 1091 017a 02          		.2byte	0x205
 1092 017b 00          		.1byte	0x1
 1093 017b 0D          		.4byte	.LFB7
 1094 017c 01          		.4byte	.LFE7
 1095 017c 00 00 00 00 		.4byte	.LLST2
 1096 017e 01          		.1byte	0xd
 1097 017f 02 05       		.1byte	0x1
 1098 0180 01          		.4byte	.LASF84
 1099 0180 00 00 00 00 		.1byte	0x1
 1100 0182 00 00 00 00 		.2byte	0x140
 1101 0184 00 00 00 00 		.1byte	0x1
 1102 0186 0D          		.4byte	.LFB4
 1103 0187 01          		.4byte	.LFE4
 1104 0187 00 00 00 00 		.4byte	.LLST3
 1105 0189 01          		.1byte	0xe
 1106 018a 01 40       		.1byte	0x1
 1107 018b 01          		.4byte	.LASF86
 1108 018b 00 00 00 00 		.1byte	0x1
 1109 018d 00 00 00 00 		.2byte	0x1c4
 1110 018f 00 00 00 00 		.1byte	0x1
 1111 0191 0E          		.4byte	.LFB6
 1112 0192 01          		.4byte	.LFE6
 1113 0192 00 00 00 00 		.4byte	.LLST4
 1114 0194 01          		.4byte	0x35a
 1115 0195 01 C4       		.1byte	0xf
 1116 0196 01          		.4byte	.LASF87
 1117 0196 00 00 00 00 		.1byte	0x1
 1118 0198 00 00 00 00 		.2byte	0x1c3
 1119 019a 00 00 00 00 		.4byte	0x42
 1120 019c 00 00 03 5A 		.4byte	.LLST5
 1121 019e 0F          		.1byte	0x10
 1122 019f 00 00 00 00 		.4byte	.LASF96
 1123 01a1 01          		.1byte	0x1
 1124 01a1 01 C3       		.2byte	0x1c6
 1125 01a2 00 00 00 42 		.4byte	0x42
 1126 01a4 00 00 00 00 		.1byte	0x0
 1127 01a6 10          		.1byte	0xe
 1128 01a7 00 00 00 00 		.1byte	0x1
 1129 01a9 01          		.4byte	.LASF88
 1130 01a9 01 C6       		.1byte	0x1
 1131 01aa 00 00 00 42 		.2byte	0x158
 1132 01ac 00          		.1byte	0x1
 1133 01ad 0E          		.4byte	.LFB5
 1134 01ad 01          		.4byte	.LFE5
 1135 01ae 00 00 00 00 		.4byte	.LLST6
 1136 01b0 01          		.4byte	0x39a
 1137 01b0 01 58       		.1byte	0xf
 1138 01b1 01          		.4byte	.LASF64
 1139 01b2 00 00 00 00 		.1byte	0x1
 1140 01b4 00 00 00 00 		.2byte	0x157
 1141 01b6 00 00 00 00 		.4byte	0x1ed
 1142 01b8 00 00 03 9A 		.4byte	.LLST7
 1143 01ba 0F          		.1byte	0x11
 1144 01ba 00 00 00 00 		.4byte	.LASF89
 1145 01bc 01          		.1byte	0x1
 1146 01bd 01 57       		.2byte	0x15a
 1147 01be 00 00 01 ED 		.4byte	0x42
 1148 01c0 00 00 00 00 		.1byte	0x8
 1149 01c2 11          		.1byte	0x76
 1150 01c2 00 00 00 00 		.1byte	0x3
 1151 01c4 01          		.1byte	0x93
 1152 01c5 01 5A       		.1byte	0x1
 1153 01c6 00 00 00 42 		.1byte	0x76
 1154 01c8 08          		.1byte	0x4
 1155 01c8 76          		.1byte	0x93
 1156 01c9 03          		.1byte	0x1
 1157 01c9 93          		.1byte	0x0
 1158 01ca 01          		.1byte	0x12
 1159 01ca 76          		.4byte	.LASF97
 1160 01cb 04          		.1byte	0x1
 1161 01cb 93          		.1byte	0x80
 1162 01cc 01          		.1byte	0x1
 1163 01cc 00          		.4byte	.LFB2
 1164 01cd 12          		.4byte	.LFE2
 1165 01cd 00 00 00 00 		.4byte	.LLST8
 1166 01cf 01          		.4byte	0x3d1
 1167 01d0 80          		.1byte	0x13
 1168 01d0 01          		.ascii "tid\000"
 1169 01d1 00 00 00 00 		.1byte	0x1
 1170 01d3 00 00 00 00 		.1byte	0x7f
 1171 01d5 00 00 00 00 		.4byte	0x1bb
 1172 01d7 00 00 03 D1 		.4byte	.LLST9
 1173 01d9 13          		.1byte	0x14
 1174 01d9 74 69 64 00 		.4byte	.LASF89
 1175 01db 01          		.1byte	0x1
 1176 01dc 7F          		.1byte	0x81
 1177 01dc 00 00 01 BB 		.4byte	0x42
 1178 01de 00 00 00 00 		.4byte	.LLST10
 1179 01e0 14          		.1byte	0x0
 1180 01e1 00 00 00 00 		.1byte	0x15
 1181 01e3 01          		.1byte	0x1
 1182 01e3 81          		.4byte	.LASF90
 1183 01e4 00 00 00 42 		.1byte	0x1
 1184 01e6 00 00 00 00 		.1byte	0xfe
 1185 01e8 00          		.1byte	0x1
 1186 01e8 15          		.4byte	.LFB3
 1187 01e9 01          		.4byte	.LFE3
 1188 01e9 00 00 00 00 		.4byte	.LLST11
 1189 01eb 01          		.1byte	0x16
 1190 01ec FE          		.4byte	.LASF91
 1191 01ec 01          		.1byte	0x1
 1192 01ed 00 00 00 00 		.1byte	0x68
 1193 01ef 00 00 00 00 		.4byte	0x239
 1194 01f1 00 00 00 00 		.1byte	0x1
 1195 01f3 16          		.1byte	0x5
 1196 01f3 00 00 00 00 		.1byte	0x3
 1197 01f5 01          		.4byte	g_app_hw_data
 1198 01f6 68          		.1byte	0x16
 1199 01f6 00 00 02 39 		.4byte	.LASF92
 1200 01f8 01          		.1byte	0x1
 1201 01f9 05          		.1byte	0x6b
 1202 01f9 03          		.4byte	0x25b
 1203 01fa 00 00 00 00 		.1byte	0x1
 1204 01fc 16          		.1byte	0x5
 1205 01fc 00 00 00 00 		.1byte	0x3
 1206 01fe 01          		.4byte	g_dimmer_data
 1207 01ff 6B          		.1byte	0x0
 1208 01ff 00 00 02 5B 		.section	.debug_abbrev
 1209 0201 01          		.1byte	0x1
 1210 0202 05          		.1byte	0x11
 1211 0202 03          		.1byte	0x1
 1212 0203 00 00 00 00 		.1byte	0x25
 1213 0205 00          		.1byte	0xe
 1214                 		.1byte	0x13
 1215 0000 01          		.1byte	0xb
 1216 0000 11          		.1byte	0x3
 1217 0001 01          		.1byte	0xe
 1218 0001 25          		.1byte	0x1b
 1219 0002 0E          		.1byte	0xe
 1220 0002 13          		.1byte	0x11
 1221 0003 0B          		.1byte	0x1
 1222 0003 03          		.1byte	0x52
 1223 0004 0E          		.1byte	0x1
 1224 0004 1B          		.1byte	0x55
 1225 0005 0E          		.1byte	0x6
 1226 0005 11          		.1byte	0x10
 1227 0006 01          		.1byte	0x6
 1228 0006 52          		.1byte	0x0
 1229 0007 01          		.1byte	0x0
 1230 0007 55          		.1byte	0x2
 1231 0008 06          		.1byte	0x24
 1232 0008 10          		.1byte	0x0
 1233 0009 06          		.1byte	0xb
 1234 0009 00          		.1byte	0xb
 1235 000a 00          		.1byte	0x3e
 1236 000a 02          		.1byte	0xb
 1237 000b 24          		.1byte	0x3
 1238 000b 00          		.1byte	0xe
 1239 000c 0B          		.1byte	0x0
 1240 000c 0B          		.1byte	0x0
 1241 000d 3E          		.1byte	0x3
 1242 000d 0B          		.1byte	0x16
 1243 000e 03          		.1byte	0x0
 1244 000e 0E          		.1byte	0x3
 1245 000f 00          		.1byte	0xe
 1246 000f 00          		.1byte	0x3a
 1247 0010 03          		.1byte	0xb
 1248 0010 16          		.1byte	0x3b
 1249 0011 00          		.1byte	0xb
 1250 0011 03          		.1byte	0x49
 1251 0012 0E          		.1byte	0x13
 1252 0012 3A          		.1byte	0x0
 1253 0013 0B          		.1byte	0x0
 1254 0013 3B          		.1byte	0x4
 1255 0014 0B          		.1byte	0x4
 1256 0014 49          		.1byte	0x1
 1257 0015 13          		.1byte	0xb
 1258 0015 00          		.1byte	0xb
 1259 0016 00          		.1byte	0x3a
 1260 0016 04          		.1byte	0xb
 1261 0017 04          		.1byte	0x3b
 1262 0017 01          		.1byte	0xb
 1263 0018 0B          		.1byte	0x1
 1264 0018 0B          		.1byte	0x13
 1265 0019 3A          		.1byte	0x0
 1266 0019 0B          		.1byte	0x0
 1267 001a 3B          		.1byte	0x5
 1268 001a 0B          		.1byte	0x28
 1269 001b 01          		.1byte	0x0
 1270 001b 13          		.1byte	0x3
 1271 001c 00          		.1byte	0xe
 1272 001c 00          		.1byte	0x1c
 1273 001d 05          		.1byte	0xd
 1274 001d 28          		.1byte	0x0
 1275 001e 00          		.1byte	0x0
 1276 001e 03          		.1byte	0x6
 1277 001f 0E          		.1byte	0x4
 1278 001f 1C          		.1byte	0x1
 1279 0020 0D          		.1byte	0xb
 1280 0020 00          		.1byte	0xb
 1281 0021 00          		.1byte	0x3a
 1282 0021 06          		.1byte	0xb
 1283 0022 04          		.1byte	0x3b
 1284 0022 01          		.1byte	0x5
 1285 0023 0B          		.1byte	0x1
 1286 0023 0B          		.1byte	0x13
 1287 0024 3A          		.1byte	0x0
 1288 0024 0B          		.1byte	0x0
 1289 0025 3B          		.1byte	0x7
 1290 0025 05          		.1byte	0x24
 1291 0026 01          		.1byte	0x0
 1292 0026 13          		.1byte	0xb
 1293 0027 00          		.1byte	0xb
 1294 0027 00          		.1byte	0x3e
 1295 0028 07          		.1byte	0xb
 1296 0028 24          		.1byte	0x0
 1297 0029 00          		.1byte	0x0
 1298 0029 0B          		.1byte	0x8
 1299 002a 0B          		.1byte	0x13
 1300 002a 3E          		.1byte	0x1
 1301 002b 0B          		.1byte	0xb
 1302 002b 00          		.1byte	0xb
 1303 002c 00          		.1byte	0x3a
 1304 002c 08          		.1byte	0xb
 1305 002d 13          		.1byte	0x3b
 1306 002d 01          		.1byte	0xb
 1307 002e 0B          		.1byte	0x1
 1308 002e 0B          		.1byte	0x13
 1309 002f 3A          		.1byte	0x0
 1310 002f 0B          		.1byte	0x0
 1311 0030 3B          		.1byte	0x9
 1312 0030 0B          		.1byte	0xd
 1313 0031 01          		.1byte	0x0
 1314 0031 13          		.1byte	0x3
 1315 0032 00          		.1byte	0xe
 1316 0032 00          		.1byte	0x3a
 1317 0033 09          		.1byte	0xb
 1318 0033 0D          		.1byte	0x3b
 1319 0034 00          		.1byte	0xb
 1320 0034 03          		.1byte	0x49
 1321 0035 0E          		.1byte	0x13
 1322 0035 3A          		.1byte	0x38
 1323 0036 0B          		.1byte	0xa
 1324 0036 3B          		.1byte	0x0
 1325 0037 0B          		.1byte	0x0
 1326 0037 49          		.1byte	0xa
 1327 0038 13          		.1byte	0x2e
 1328 0038 38          		.1byte	0x0
 1329 0039 0A          		.1byte	0x3f
 1330 0039 00          		.1byte	0xc
 1331 003a 00          		.1byte	0x3
 1332 003a 0A          		.1byte	0xe
 1333 003b 2E          		.1byte	0x3a
 1334 003b 00          		.1byte	0xb
 1335 003c 3F          		.1byte	0x3b
 1336 003c 0C          		.1byte	0x5
 1337 003d 03          		.1byte	0x27
 1338 003d 0E          		.1byte	0xc
 1339 003e 3A          		.1byte	0x11
 1340 003e 0B          		.1byte	0x1
 1341 003f 3B          		.1byte	0x12
 1342 003f 05          		.1byte	0x1
 1343 0040 27          		.1byte	0x40
 1344 0040 0C          		.1byte	0xa
 1345 0041 11          		.1byte	0x0
 1346 0041 01          		.1byte	0x0
 1347 0042 12          		.1byte	0xb
 1348 0042 01          		.1byte	0x2e
 1349 0043 40          		.1byte	0x1
 1350 0043 0A          		.1byte	0x3f
 1351 0044 00          		.1byte	0xc
 1352 0044 00          		.1byte	0x3
 1353 0045 0B          		.1byte	0xe
 1354 0045 2E          		.1byte	0x3a
 1355 0046 01          		.1byte	0xb
 1356 0046 3F          		.1byte	0x3b
 1357 0047 0C          		.1byte	0x5
 1358 0047 03          		.1byte	0x27
 1359 0048 0E          		.1byte	0xc
 1360 0048 3A          		.1byte	0x11
 1361 0049 0B          		.1byte	0x1
 1362 0049 3B          		.1byte	0x12
 1363 004a 05          		.1byte	0x1
 1364 004a 27          		.1byte	0x40
 1365 004b 0C          		.1byte	0xa
 1366 004b 11          		.1byte	0x1
 1367 004c 01          		.1byte	0x13
 1368 004c 12          		.1byte	0x0
 1369 004d 01          		.1byte	0x0
 1370 004d 40          		.1byte	0xc
 1371 004e 0A          		.1byte	0x5
 1372 004e 01          		.1byte	0x0
 1373 004f 13          		.1byte	0x3
 1374 004f 00          		.1byte	0xe
 1375 0050 00          		.1byte	0x3a
 1376 0050 0C          		.1byte	0xb
 1377 0051 05          		.1byte	0x3b
 1378 0051 00          		.1byte	0x5
 1379 0052 03          		.1byte	0x49
 1380 0052 0E          		.1byte	0x13
 1381 0053 3A          		.1byte	0x2
 1382 0053 0B          		.1byte	0xa
 1383 0054 3B          		.1byte	0x0
 1384 0054 05          		.1byte	0x0
 1385 0055 49          		.1byte	0xd
 1386 0055 13          		.1byte	0x2e
 1387 0056 02          		.1byte	0x0
 1388 0056 0A          		.1byte	0x3f
 1389 0057 00          		.1byte	0xc
 1390 0057 00          		.1byte	0x3
 1391 0058 0D          		.1byte	0xe
 1392 0058 2E          		.1byte	0x3a
 1393 0059 00          		.1byte	0xb
 1394 0059 3F          		.1byte	0x3b
 1395 005a 0C          		.1byte	0x5
 1396 005a 03          		.1byte	0x27
 1397 005b 0E          		.1byte	0xc
 1398 005b 3A          		.1byte	0x11
 1399 005c 0B          		.1byte	0x1
 1400 005c 3B          		.1byte	0x12
 1401 005d 05          		.1byte	0x1
 1402 005d 27          		.1byte	0x40
 1403 005e 0C          		.1byte	0x6
 1404 005e 11          		.1byte	0x0
 1405 005f 01          		.1byte	0x0
 1406 005f 12          		.1byte	0xe
 1407 0060 01          		.1byte	0x2e
 1408 0060 40          		.1byte	0x1
 1409 0061 06          		.1byte	0x3f
 1410 0061 00          		.1byte	0xc
 1411 0062 00          		.1byte	0x3
 1412 0062 0E          		.1byte	0xe
 1413 0063 2E          		.1byte	0x3a
 1414 0063 01          		.1byte	0xb
 1415 0064 3F          		.1byte	0x3b
 1416 0064 0C          		.1byte	0x5
 1417 0065 03          		.1byte	0x27
 1418 0065 0E          		.1byte	0xc
 1419 0066 3A          		.1byte	0x11
 1420 0066 0B          		.1byte	0x1
 1421 0067 3B          		.1byte	0x12
 1422 0067 05          		.1byte	0x1
 1423 0068 27          		.1byte	0x40
 1424 0068 0C          		.1byte	0x6
 1425 0069 11          		.1byte	0x1
 1426 0069 01          		.1byte	0x13
 1427 006a 12          		.1byte	0x0
 1428 006a 01          		.1byte	0x0
 1429 006b 40          		.1byte	0xf
 1430 006b 06          		.1byte	0x5
 1431 006c 01          		.1byte	0x0
 1432 006c 13          		.1byte	0x3
 1433 006d 00          		.1byte	0xe
 1434 006d 00          		.1byte	0x3a
 1435 006e 0F          		.1byte	0xb
 1436 006e 05          		.1byte	0x3b
 1437 006f 00          		.1byte	0x5
 1438 006f 03          		.1byte	0x49
 1439 0070 0E          		.1byte	0x13
 1440 0070 3A          		.1byte	0x2
 1441 0071 0B          		.1byte	0x6
 1442 0071 3B          		.1byte	0x0
 1443 0072 05          		.1byte	0x0
 1444 0072 49          		.1byte	0x10
 1445 0073 13          		.1byte	0x34
 1446 0073 02          		.1byte	0x0
 1447 0074 06          		.1byte	0x3
 1448 0074 00          		.1byte	0xe
 1449 0075 00          		.1byte	0x3a
 1450 0075 10          		.1byte	0xb
 1451 0076 34          		.1byte	0x3b
 1452 0076 00          		.1byte	0x5
 1453 0077 03          		.1byte	0x49
 1454 0077 0E          		.1byte	0x13
 1455 0078 3A          		.1byte	0x0
 1456 0078 0B          		.1byte	0x0
 1457 0079 3B          		.1byte	0x11
 1458 0079 05          		.1byte	0x34
 1459 007a 49          		.1byte	0x0
 1460 007a 13          		.1byte	0x3
 1461 007b 00          		.1byte	0xe
 1462 007b 00          		.1byte	0x3a
 1463 007c 11          		.1byte	0xb
 1464 007c 34          		.1byte	0x3b
 1465 007d 00          		.1byte	0x5
 1466 007d 03          		.1byte	0x49
 1467 007e 0E          		.1byte	0x13
 1468 007e 3A          		.1byte	0x2
 1469 007f 0B          		.1byte	0xa
 1470 007f 3B          		.1byte	0x0
 1471 0080 05          		.1byte	0x0
 1472 0080 49          		.1byte	0x12
 1473 0081 13          		.1byte	0x2e
 1474 0081 02          		.1byte	0x1
 1475 0082 0A          		.1byte	0x3
 1476 0082 00          		.1byte	0xe
 1477 0083 00          		.1byte	0x3a
 1478 0083 12          		.1byte	0xb
 1479 0084 2E          		.1byte	0x3b
 1480 0084 01          		.1byte	0xb
 1481 0085 03          		.1byte	0x27
 1482 0085 0E          		.1byte	0xc
 1483 0086 3A          		.1byte	0x11
 1484 0086 0B          		.1byte	0x1
 1485 0087 3B          		.1byte	0x12
 1486 0087 0B          		.1byte	0x1
 1487 0088 27          		.1byte	0x40
 1488 0088 0C          		.1byte	0x6
 1489 0089 11          		.1byte	0x1
 1490 0089 01          		.1byte	0x13
 1491 008a 12          		.1byte	0x0
 1492 008a 01          		.1byte	0x0
 1493 008b 40          		.1byte	0x13
 1494 008b 06          		.1byte	0x5
 1495 008c 01          		.1byte	0x0
 1496 008c 13          		.1byte	0x3
 1497 008d 00          		.1byte	0x8
 1498 008d 00          		.1byte	0x3a
 1499 008e 13          		.1byte	0xb
 1500 008e 05          		.1byte	0x3b
 1501 008f 00          		.1byte	0xb
 1502 008f 03          		.1byte	0x49
 1503 0090 08          		.1byte	0x13
 1504 0090 3A          		.1byte	0x2
 1505 0091 0B          		.1byte	0x6
 1506 0091 3B          		.1byte	0x0
 1507 0092 0B          		.1byte	0x0
 1508 0092 49          		.1byte	0x14
 1509 0093 13          		.1byte	0x34
 1510 0093 02          		.1byte	0x0
 1511 0094 06          		.1byte	0x3
 1512 0094 00          		.1byte	0xe
 1513 0095 00          		.1byte	0x3a
 1514 0095 14          		.1byte	0xb
 1515 0096 34          		.1byte	0x3b
 1516 0096 00          		.1byte	0xb
 1517 0097 03          		.1byte	0x49
 1518 0097 0E          		.1byte	0x13
 1519 0098 3A          		.1byte	0x2
 1520 0098 0B          		.1byte	0x6
 1521 0099 3B          		.1byte	0x0
 1522 0099 0B          		.1byte	0x0
 1523 009a 49          		.1byte	0x15
 1524 009a 13          		.1byte	0x2e
 1525 009b 02          		.1byte	0x0
 1526 009b 06          		.1byte	0x3f
 1527 009c 00          		.1byte	0xc
 1528 009c 00          		.1byte	0x3
 1529 009d 15          		.1byte	0xe
 1530 009d 2E          		.1byte	0x3a
 1531 009e 00          		.1byte	0xb
 1532 009e 3F          		.1byte	0x3b
 1533 009f 0C          		.1byte	0xb
 1534 009f 03          		.1byte	0x27
 1535 00a0 0E          		.1byte	0xc
 1536 00a0 3A          		.1byte	0x11
 1537 00a1 0B          		.1byte	0x1
 1538 00a1 3B          		.1byte	0x12
 1539 00a2 0B          		.1byte	0x1
 1540 00a2 27          		.1byte	0x40
 1541 00a3 0C          		.1byte	0x6
 1542 00a3 11          		.1byte	0x0
 1543 00a4 01          		.1byte	0x0
 1544 00a4 12          		.1byte	0x16
 1545 00a5 01          		.1byte	0x34
 1546 00a5 40          		.1byte	0x0
 1547 00a6 06          		.1byte	0x3
 1548 00a6 00          		.1byte	0xe
 1549 00a7 00          		.1byte	0x3a
 1550 00a7 16          		.1byte	0xb
 1551 00a8 34          		.1byte	0x3b
 1552 00a8 00          		.1byte	0xb
 1553 00a9 03          		.1byte	0x49
 1554 00a9 0E          		.1byte	0x13
 1555 00aa 3A          		.1byte	0x3f
 1556 00aa 0B          		.1byte	0xc
 1557 00ab 3B          		.1byte	0x2
 1558 00ab 0B          		.1byte	0xa
 1559 00ac 49          		.1byte	0x0
 1560 00ac 13          		.1byte	0x0
 1561 00ad 3F          		.1byte	0x0
 1562 00ad 0C          		.section	.debug_pubnames,"",@progbits
 1563 00ae 02          		.4byte	0xce
 1564 00ae 0A          		.2byte	0x2
 1565 00af 00          		.4byte	.Ldebug_info0
 1566 00af 00          		.4byte	0x40b
 1567 00b0 00          		.4byte	0x2b7
 1568                 		.ascii "HrInitSwitchData\000"
 1569 0000 00 00 00 CE 		.4byte	0x2cb
 1570 0002 00 02       		.ascii "HandleSwitchPIOChangedEvent\000"
 1571 0003 00 00 00 00 		.4byte	0x2f7
 1572 0005 00 00 04 0B 		.ascii "HrInitSwitchHardware\000"
 1573 0007 00 00 02 B7 		.4byte	0x30d
 1574 0009 48 72 49 6E 		.ascii "HrHwDataInit\000"
 1574      69 74 53 77 
 1574      69 74 63 68 
 1574      44 61 74 61 
 1574      00 
 1575 0011 00 00 02 CB 		.4byte	0x323
 1576 0013 48 61 6E 64 		.ascii "HandlePIOChangedEvent\000"
 1576      6C 65 53 77 
 1576      69 74 63 68 
 1576      50 49 4F 43 
 1576      68 61 6E 67 
 1577 0021 00 00 02 F7 		.4byte	0x35a
 1578 0023 48 72 49 6E 		.ascii "SoundBuzzer\000"
 1578      69 74 53 77 
 1578      69 74 63 68 
 1578      48 61 72 64 
 1578      77 61 72 65 
 1579 002e 00 00 03 0D 		.4byte	0x3d1
 1580 0030 48 72 48 77 		.ascii "HrInitHardware\000"
 1580      44 61 74 61 
 1580      49 6E 69 74 
 1580      00 
 1581 0036 00 00 03 23 		.4byte	0x3e6
 1582 0038 48 61 6E 64 		.ascii "g_app_hw_data\000"
 1582      6C 65 50 49 
 1582      4F 43 68 61 
 1582      6E 67 65 64 
 1582      45 76 65 6E 
 1583 0043 00 00 03 5A 		.4byte	0x3f8
 1584 0045 53 6F 75 6E 		.ascii "g_dimmer_data\000"
 1584      64 42 75 7A 
 1584      7A 65 72 00 
 1585 004b 00 00 03 D1 		.4byte	0x0
 1586 004d 48 72 49 6E 		.section	.debug_aranges,"",@progbits
 1586      69 74 48 61 
 1586      72 64 77 61 
 1586      72 65 00 
 1587 0055 00 00 03 E6 		.4byte	0x54
 1588 0057 67 5F 61 70 		.2byte	0x2
 1588      70 5F 68 77 
 1588      5F 64 61 74 
 1588      61 00 
 1589 005e 00 00 03 F8 		.4byte	.Ldebug_info0
 1590 0060 67 5F 64 69 		.1byte	0x4
 1590      6D 6D 65 72 
 1590      5F 64 61 74 
 1590      61 00 
 1591 0067 00 00 00 00 		.1byte	0x0
 1592                 		.2byte	0x0
 1593 0000 00 00 00 54 		.2byte	0x0
 1594 0002 00 02       		.4byte	.LFB8
 1595 0003 00 00 00 00 		.4byte	.LFE8-.LFB8
 1596 0005 04          		.4byte	.LFB9
 1597 0005 00          		.4byte	.LFE9-.LFB9
 1598 0006 00 00       		.4byte	.LFB7
 1599 0007 00 00       		.4byte	.LFE7-.LFB7
 1600 0008 00 00 00 00 		.4byte	.LFB4
 1601 000a 00 00 00 01 		.4byte	.LFE4-.LFB4
 1602 000c 00 00 00 00 		.4byte	.LFB6
 1603 000e 00 00 00 00 		.4byte	.LFE6-.LFB6
 1604 0010 00 00 00 00 		.4byte	.LFB5
 1605 0012 00 00 00 00 		.4byte	.LFE5-.LFB5
 1606 0014 00 00 00 00 		.4byte	.LFB2
 1607 0016 00 00 00 00 		.4byte	.LFE2-.LFB2
 1608 0018 00 00 00 00 		.4byte	.LFB3
 1609 001a 00 00 00 00 		.4byte	.LFE3-.LFB3
 1610 001c 00 00 00 00 		.4byte	0x0
 1611 001e 00 00 00 00 		.4byte	0x0
 1612 0020 00 00 00 00 		.section	.debug_ranges,"",@progbits
 1613 0022 00 00 00 00 	.Ldebug_ranges0:
 1614 0024 00 00 00 00 		.4byte	.Ltext0
 1615 0026 00 00 00 00 		.4byte	.Letext0
 1616 0028 00 00 00 00 		.4byte	.LFB8
 1617 002a 00 00 00 00 		.4byte	.LFE8
 1618                 		.4byte	.LFB9
 1619                 		.4byte	.LFE9
 1620 0000 00 00 00 00 		.4byte	.LFB7
 1621 0002 00 00 00 00 		.4byte	.LFE7
 1622 0004 00 00 00 00 		.4byte	.LFB4
 1623 0006 00 00 00 00 		.4byte	.LFE4
 1624 0008 00 00 00 00 		.4byte	.LFB6
 1625 000a 00 00 00 00 		.4byte	.LFE6
 1626 000c 00 00 00 00 		.4byte	.LFB5
 1627 000e 00 00 00 00 		.4byte	.LFE5
 1628 0010 00 00 00 00 		.4byte	.LFB2
 1629 0012 00 00 00 00 		.4byte	.LFE2
 1630 0014 00 00 00 00 		.4byte	.LFB3
 1631 0016 00 00 00 00 		.4byte	.LFE3
 1632 0018 00 00 00 00 		.4byte	0x0
 1633 001a 00 00 00 00 		.4byte	0x0
 1634 001c 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 1635 001e 00 00 00 00 	.LASF82:
 1636 0020 00 00 00 00 		.ascii "HrInitSwitchData\000"
 1637 0022 00 00 00 00 	.LASF33:
 1638 0024 00 00 00 00 		.ascii "pio_mode_ana_mon_clk_pio\000"
 1639 0026 00 00 00 00 	.LASF83:
 1640                 		.ascii "HrInitSwitchHardware\000"
 1641                 	.LASF21:
 1642 0000 48 72 49 6E 		.ascii "pio_mode_radio_rx_en\000"
 1642      69 74 53 77 
 1642      69 74 63 68 
 1642      44 61 74 61 
 1642      00 
 1643                 	.LASF80:
 1644 0008 70 69 6F 5F 		.ascii "app_panic_invalid_state\000"
 1644      6D 6F 64 65 
 1644      5F 61 6E 61 
 1644      5F 6D 6F 6E 
 1644      5F 63 6C 6B 
 1645                 	.LASF64:
 1646 0015 48 72 49 6E 		.ascii "beep_type\000"
 1646      69 74 53 77 
 1646      69 74 63 68 
 1646      48 61 72 64 
 1646      77 61 72 65 
 1647                 	.LASF29:
 1648 001f 70 69 6F 5F 		.ascii "pio_mode_i2c_data\000"
 1648      6D 6F 64 65 
 1648      5F 72 61 64 
 1648      69 6F 5F 72 
 1648      78 5F 65 6E 
 1649                 	.LASF6:
 1650 002a 61 70 70 5F 		.ascii "short int\000"
 1650      70 61 6E 69 
 1650      63 5F 69 6E 
 1650      76 61 6C 69 
 1650      64 5F 73 74 
 1651                 	.LASF87:
 1652 0036 62 65 65 70 		.ascii "pio_changed\000"
 1652      5F 74 79 70 
 1652      65 00 
 1653                 	.LASF59:
 1654 003b 70 69 6F 5F 		.ascii "buzzer_beep_long\000"
 1654      6D 6F 64 65 
 1654      5F 69 32 63 
 1654      5F 64 61 74 
 1654      61 00 
 1655                 	.LASF95:
 1656 0044 73 68 6F 72 		.ascii "C:\\Users\\pili\\git\\heekari\\HeekariFirmware\000"
 1656      74 20 69 6E 
 1656      74 00 
 1657                 	.LASF41:
 1658 0049 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_no_pulls\000"
 1658      63 68 61 6E 
 1658      67 65 64 00 
 1659                 	.LASF94:
 1660 004f 62 75 7A 7A 		.ascii "hr_sensor_hw.c\000"
 1660      65 72 5F 62 
 1660      65 65 70 5F 
 1660      6C 6F 6E 67 
 1660      00 
 1661                 	.LASF26:
 1662 0057 43 3A 5C 55 		.ascii "pio_mode_pio_control_rxd\000"
 1662      73 65 72 73 
 1662      5C 70 69 6C 
 1662      69 5C 67 69 
 1662      74 5C 68 65 
 1663                 	.LASF23:
 1664 006c 70 69 6F 5F 		.ascii "pio_mode_nvm_power_en\000"
 1664      69 32 63 5F 
 1664      70 75 6C 6C 
 1664      5F 6D 6F 64 
 1664      65 5F 6E 6F 
 1665                 	.LASF86:
 1666 007a 68 72 5F 73 		.ascii "HandlePIOChangedEvent\000"
 1666      65 6E 73 6F 
 1666      72 5F 68 77 
 1666      2E 63 00 
 1667                 	.LASF89:
 1668 0081 70 69 6F 5F 		.ascii "beep_timer\000"
 1668      6D 6F 64 65 
 1668      5F 70 69 6F 
 1668      5F 63 6F 6E 
 1668      74 72 6F 6C 
 1669                 	.LASF97:
 1670 008e 70 69 6F 5F 		.ascii "appBuzzerTimerHandler\000"
 1670      6D 6F 64 65 
 1670      5F 6E 76 6D 
 1670      5F 70 6F 77 
 1670      65 72 5F 65 
 1671                 	.LASF48:
 1672 0099 48 61 6E 64 		.ascii "pio_event_mode_disable\000"
 1672      6C 65 50 49 
 1672      4F 43 68 61 
 1672      6E 67 65 64 
 1672      45 76 65 6E 
 1673                 	.LASF31:
 1674 00a4 62 65 65 70 		.ascii "pio_mode_uart_flow_ctrl\000"
 1674      5F 74 69 6D 
 1674      65 72 00 
 1675                 	.LASF68:
 1676 00a9 61 70 70 42 		.ascii "last_dimmer_var\000"
 1676      75 7A 7A 65 
 1676      72 54 69 6D 
 1676      65 72 48 61 
 1676      6E 64 6C 65 
 1677                 	.LASF30:
 1678 00b4 70 69 6F 5F 		.ascii "pio_mode_i2c_clock\000"
 1678      65 76 65 6E 
 1678      74 5F 6D 6F 
 1678      64 65 5F 64 
 1678      69 73 61 62 
 1679                 	.LASF65:
 1680 00c0 70 69 6F 5F 		.ascii "beep_count\000"
 1680      6D 6F 64 65 
 1680      5F 75 61 72 
 1680      74 5F 66 6C 
 1680      6F 77 5F 63 
 1681                 	.LASF49:
 1682 00cc 6C 61 73 74 		.ascii "pio_event_mode_rising\000"
 1682      5F 64 69 6D 
 1682      6D 65 72 5F 
 1682      76 61 72 00 
 1683                 	.LASF45:
 1684 00d4 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_pull_up\000"
 1684      6D 6F 64 65 
 1684      5F 69 32 63 
 1684      5F 63 6C 6F 
 1684      63 6B 00 
 1685                 	.LASF34:
 1686 00dd 62 65 65 70 		.ascii "pio_mode_no_pulls\000"
 1686      5F 63 6F 75 
 1686      6E 74 00 
 1687                 	.LASF79:
 1688 00e3 70 69 6F 5F 		.ascii "app_panic_con_param_update\000"
 1688      65 76 65 6E 
 1688      74 5F 6D 6F 
 1688      64 65 5F 72 
 1688      69 73 69 6E 
 1689                 	.LASF54:
 1690 00ee 70 69 6F 5F 		.ascii "pio_pwm_mode_open_source\000"
 1690      69 32 63 5F 
 1690      70 75 6C 6C 
 1690      5F 6D 6F 64 
 1690      65 5F 73 74 
 1691                 	.LASF85:
 1692 00fe 70 69 6F 5F 		.ascii "HandleSwitchPIOChangedEvent\000"
 1692      6D 6F 64 65 
 1692      5F 6E 6F 5F 
 1692      70 75 6C 6C 
 1692      73 00 
 1693                 	.LASF47:
 1694 0107 61 70 70 5F 		.ascii "pio_i2c_pull_mode_strong_sticky\000"
 1694      70 61 6E 69 
 1694      63 5F 63 6F 
 1694      6E 5F 70 61 
 1694      72 61 6D 5F 
 1695                 	.LASF69:
 1696 0115 70 69 6F 5F 		.ascii "SWITCH_DIMMER_DATA_T\000"
 1696      70 77 6D 5F 
 1696      6D 6F 64 65 
 1696      5F 6F 70 65 
 1696      6E 5F 73 6F 
 1697                 	.LASF73:
 1698 0121 48 61 6E 64 		.ascii "app_panic_db_registration\000"
 1698      6C 65 53 77 
 1698      69 74 63 68 
 1698      50 49 4F 43 
 1698      68 61 6E 67 
 1699                 	.LASF9:
 1700 012f 70 69 6F 5F 		.ascii "pio_mode_user\000"
 1700      69 32 63 5F 
 1700      70 75 6C 6C 
 1700      5F 6D 6F 64 
 1700      65 5F 73 74 
 1701                 	.LASF39:
 1702 013f 53 57 49 54 		.ascii "pio_mode_weak_sticky\000"
 1702      43 48 5F 44 
 1702      49 4D 4D 45 
 1702      52 5F 44 41 
 1702      54 41 5F 54 
 1703                 	.LASF16:
 1704 014a 61 70 70 5F 		.ascii "pio_mode_quadrature0\000"
 1704      70 61 6E 69 
 1704      63 5F 64 62 
 1704      5F 72 65 67 
 1704      69 73 74 72 
 1705                 	.LASF17:
 1706 0157 70 69 6F 5F 		.ascii "pio_mode_quadrature1\000"
 1706      6D 6F 64 65 
 1706      5F 75 73 65 
 1706      72 00 
 1707                 	.LASF18:
 1708 015e 70 69 6F 5F 		.ascii "pio_mode_quadrature2\000"
 1708      6D 6F 64 65 
 1708      5F 77 65 61 
 1708      6B 5F 73 74 
 1708      69 63 6B 79 
 1709                 	.LASF19:
 1710 0168 70 69 6F 5F 		.ascii "pio_mode_quadrature3\000"
 1710      6D 6F 64 65 
 1710      5F 71 75 61 
 1710      64 72 61 74 
 1710      75 72 65 30 
 1711                 	.LASF70:
 1712 0173 70 69 6F 5F 		.ascii "app_panic_set_advert_params\000"
 1712      6D 6F 64 65 
 1712      5F 71 75 61 
 1712      64 72 61 74 
 1712      75 72 65 31 
 1713                 	.LASF88:
 1714 017d 70 69 6F 5F 		.ascii "SoundBuzzer\000"
 1714      6D 6F 64 65 
 1714      5F 71 75 61 
 1714      64 72 61 74 
 1714      75 72 65 32 
 1715                 	.LASF0:
 1716 0188 70 69 6F 5F 		.ascii "unsigned char\000"
 1716      6D 6F 64 65 
 1716      5F 71 75 61 
 1716      64 72 61 74 
 1716      75 72 65 33 
 1717                 	.LASF11:
 1718 0192 61 70 70 5F 		.ascii "pio_mode_clk_req\000"
 1718      70 61 6E 69 
 1718      63 5F 73 65 
 1718      74 5F 61 64 
 1718      76 65 72 74 
 1719                 	.LASF60:
 1720 01a0 53 6F 75 6E 		.ascii "buzzer_beep_twice\000"
 1720      64 42 75 7A 
 1720      7A 65 72 00 
 1721                 	.LASF78:
 1722 01a6 75 6E 73 69 		.ascii "app_panic_add_whitelist\000"
 1722      67 6E 65 64 
 1722      20 63 68 61 
 1722      72 00 
 1723                 	.LASF43:
 1724 01ad 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_pull_up\000"
 1724      6D 6F 64 65 
 1724      5F 63 6C 6B 
 1724      5F 72 65 71 
 1724      00 
 1725                 	.LASF75:
 1726 01b6 62 75 7A 7A 		.ascii "app_panic_nvm_write\000"
 1726      65 72 5F 62 
 1726      65 65 70 5F 
 1726      74 77 69 63 
 1726      65 00 
 1727                 	.LASF5:
 1728 01bf 61 70 70 5F 		.ascii "signed char\000"
 1728      70 61 6E 69 
 1728      63 5F 61 64 
 1728      64 5F 77 68 
 1728      69 74 65 6C 
 1729                 	.LASF12:
 1730 01cb 70 69 6F 5F 		.ascii "pio_mode_pwm0\000"
 1730      69 32 63 5F 
 1730      70 75 6C 6C 
 1730      5F 6D 6F 64 
 1730      65 5F 77 65 
 1731                 	.LASF13:
 1732 01da 61 70 70 5F 		.ascii "pio_mode_pwm1\000"
 1732      70 61 6E 69 
 1732      63 5F 6E 76 
 1732      6D 5F 77 72 
 1732      69 74 65 00 
 1733                 	.LASF14:
 1734 01e4 73 69 67 6E 		.ascii "pio_mode_pwm2\000"
 1734      65 64 20 63 
 1734      68 61 72 00 
 1735                 	.LASF15:
 1736 01ea 70 69 6F 5F 		.ascii "pio_mode_pwm3\000"
 1736      6D 6F 64 65 
 1736      5F 70 77 6D 
 1736      30 00 
 1737                 	.LASF8:
 1738 01f1 70 69 6F 5F 		.ascii "unsigned int\000"
 1738      6D 6F 64 65 
 1738      5F 70 77 6D 
 1738      31 00 
 1739                 	.LASF62:
 1740 01f8 70 69 6F 5F 		.ascii "buzzer_beep_type\000"
 1740      6D 6F 64 65 
 1740      5F 70 77 6D 
 1740      32 00 
 1741                 	.LASF74:
 1742 01ff 70 69 6F 5F 		.ascii "app_panic_nvm_read\000"
 1742      6D 6F 64 65 
 1742      5F 70 77 6D 
 1742      33 00 
 1743                 	.LASF55:
 1744 0206 75 6E 73 69 		.ascii "pio_pwm_mode_inverted_push_pull\000"
 1744      67 6E 65 64 
 1744      20 69 6E 74 
 1744      00 
 1745                 	.LASF1:
 1746 020d 62 75 7A 7A 		.ascii "short unsigned int\000"
 1746      65 72 5F 62 
 1746      65 65 70 5F 
 1746      74 79 70 65 
 1746      00 
 1747                 	.LASF37:
 1748 0215 61 70 70 5F 		.ascii "pio_mode_strong_pull_down\000"
 1748      70 61 6E 69 
 1748      63 5F 6E 76 
 1748      6D 5F 72 65 
 1748      61 64 00 
 1749                 	.LASF91:
 1750 021f 70 69 6F 5F 		.ascii "g_app_hw_data\000"
 1750      70 77 6D 5F 
 1750      6D 6F 64 65 
 1750      5F 69 6E 76 
 1750      65 72 74 65 
 1751                 	.LASF96:
 1752 022f 73 68 6F 72 		.ascii "pios\000"
 1752      74 20 75 6E 
 1752      73 69 67 6E 
 1752      65 64 20 69 
 1752      6E 74 00 
 1753                 	.LASF92:
 1754 0238 70 69 6F 5F 		.ascii "g_dimmer_data\000"
 1754      6D 6F 64 65 
 1754      5F 73 74 72 
 1754      6F 6E 67 5F 
 1754      70 75 6C 6C 
 1755                 	.LASF58:
 1756 0245 67 5F 61 70 		.ascii "buzzer_beep_short\000"
 1756      70 5F 68 77 
 1756      5F 64 61 74 
 1756      61 00 
 1757                 	.LASF7:
 1758 024c 70 69 6F 73 		.ascii "long int\000"
 1758      00 
 1759                 	.LASF56:
 1760 024f 67 5F 64 69 		.ascii "timer_id\000"
 1760      6D 6D 65 72 
 1760      5F 64 61 74 
 1760      61 00 
 1761                 	.LASF36:
 1762 0256 62 75 7A 7A 		.ascii "pio_mode_weak_pull_up\000"
 1762      65 72 5F 62 
 1762      65 65 70 5F 
 1762      73 68 6F 72 
 1762      74 00 
 1763                 	.LASF50:
 1764 025f 6C 6F 6E 67 		.ascii "pio_event_mode_falling\000"
 1764      20 69 6E 74 
 1764      00 
 1765                 	.LASF90:
 1766 0263 74 69 6D 65 		.ascii "HrInitHardware\000"
 1766      72 5F 69 64 
 1766      00 
 1767                 	.LASF2:
 1768 0268 70 69 6F 5F 		.ascii "uint16\000"
 1768      6D 6F 64 65 
 1768      5F 77 65 61 
 1768      6B 5F 70 75 
 1768      6C 6C 5F 75 
 1769                 	.LASF22:
 1770 0273 70 69 6F 5F 		.ascii "pio_mode_radio_tx_en\000"
 1770      65 76 65 6E 
 1770      74 5F 6D 6F 
 1770      64 65 5F 66 
 1770      61 6C 6C 69 
 1771                 	.LASF3:
 1772 027e 48 72 49 6E 		.ascii "uint32\000"
 1772      69 74 48 61 
 1772      72 64 77 61 
 1772      72 65 00 
 1773                 	.LASF61:
 1774 0286 75 69 6E 74 		.ascii "buzzer_beep_thrice\000"
 1774      31 36 00 
 1775                 	.LASF4:
 1776 0289 70 69 6F 5F 		.ascii "long unsigned int\000"
 1776      6D 6F 64 65 
 1776      5F 72 61 64 
 1776      69 6F 5F 74 
 1776      78 5F 65 6E 
 1777                 	.LASF27:
 1778 0294 75 69 6E 74 		.ascii "pio_mode_ser_flash_dout\000"
 1778      33 32 00 
 1779                 	.LASF32:
 1780 0297 62 75 7A 7A 		.ascii "pio_mode_pio_control_timer\000"
 1780      65 72 5F 62 
 1780      65 65 70 5F 
 1780      74 68 72 69 
 1780      63 65 00 
 1781                 	.LASF72:
 1782 02a1 6C 6F 6E 67 		.ascii "app_panic_set_scan_rsp_data\000"
 1782      20 75 6E 73 
 1782      69 67 6E 65 
 1782      64 20 69 6E 
 1782      74 00 
 1783                 	.LASF66:
 1784 02aa 70 69 6F 5F 		.ascii "button_press_tid\000"
 1784      6D 6F 64 65 
 1784      5F 73 65 72 
 1784      5F 66 6C 61 
 1784      73 68 5F 64 
 1785                 	.LASF40:
 1786 02b6 70 69 6F 5F 		.ascii "pio_mode_strong_sticky\000"
 1786      6D 6F 64 65 
 1786      5F 70 69 6F 
 1786      5F 63 6F 6E 
 1786      74 72 6F 6C 
 1787                 	.LASF44:
 1788 02c3 61 70 70 5F 		.ascii "pio_i2c_pull_mode_strong_pull_down\000"
 1788      70 61 6E 69 
 1788      63 5F 73 65 
 1788      74 5F 73 63 
 1788      61 6E 5F 72 
 1789                 	.LASF63:
 1790 02d1 62 75 74 74 		.ascii "buzzer_tid\000"
 1790      6F 6E 5F 70 
 1790      72 65 73 73 
 1790      5F 74 69 64 
 1790      00 
 1791                 	.LASF53:
 1792 02da 70 69 6F 5F 		.ascii "pio_pwm_mode_open_drain\000"
 1792      6D 6F 64 65 
 1792      5F 73 74 72 
 1792      6F 6E 67 5F 
 1792      73 74 69 63 
 1793                 	.LASF84:
 1794 02e5 70 69 6F 5F 		.ascii "HrHwDataInit\000"
 1794      69 32 63 5F 
 1794      70 75 6C 6C 
 1794      5F 6D 6F 64 
 1794      65 5F 73 74 
 1795                 	.LASF28:
 1796 02f7 62 75 7A 7A 		.ascii "pio_mode_ser_flash_csb\000"
 1796      65 72 5F 74 
 1796      69 64 00 
 1797                 	.LASF24:
 1798 02fc 70 69 6F 5F 		.ascii "pio_mode_pio_controller\000"
 1798      70 77 6D 5F 
 1798      6D 6F 64 65 
 1798      5F 6F 70 65 
 1798      6E 5F 64 72 
 1799                 	.LASF57:
 1800 0308 48 72 48 77 		.ascii "buzzer_beep_off\000"
 1800      44 61 74 61 
 1800      49 6E 69 74 
 1800      00 
 1801                 	.LASF52:
 1802 030f 70 69 6F 5F 		.ascii "pio_pwm_mode_push_pull\000"
 1802      6D 6F 64 65 
 1802      5F 73 65 72 
 1802      5F 66 6C 61 
 1802      73 68 5F 63 
 1803                 	.LASF10:
 1804 031a 70 69 6F 5F 		.ascii "pio_mode_edge_capture\000"
 1804      6D 6F 64 65 
 1804      5F 70 69 6F 
 1804      5F 63 6F 6E 
 1804      74 72 6F 6C 
 1805                 	.LASF42:
 1806 0326 62 75 7A 7A 		.ascii "pio_i2c_pull_mode_weak_pull_down\000"
 1806      65 72 5F 62 
 1806      65 65 70 5F 
 1806      6F 66 66 00 
 1807                 	.LASF38:
 1808 032e 70 69 6F 5F 		.ascii "pio_mode_strong_pull_up\000"
 1808      70 77 6D 5F 
 1808      6D 6F 64 65 
 1808      5F 70 75 73 
 1808      68 5F 70 75 
 1809                 	.LASF71:
 1810 033a 70 69 6F 5F 		.ascii "app_panic_set_advert_data\000"
 1810      6D 6F 64 65 
 1810      5F 65 64 67 
 1810      65 5F 63 61 
 1810      70 74 75 72 
 1811                 	.LASF76:
 1812 0345 70 69 6F 5F 		.ascii "app_panic_read_tx_pwr_level\000"
 1812      69 32 63 5F 
 1812      70 75 6C 6C 
 1812      5F 6D 6F 64 
 1812      65 5F 77 65 
 1813                 	.LASF35:
 1814 0355 70 69 6F 5F 		.ascii "pio_mode_weak_pull_down\000"
 1814      6D 6F 64 65 
 1814      5F 73 74 72 
 1814      6F 6E 67 5F 
 1814      70 75 6C 6C 
 1815                 	.LASF46:
 1816 0361 61 70 70 5F 		.ascii "pio_i2c_pull_mode_weak_sticky\000"
 1816      70 61 6E 69 
 1816      63 5F 73 65 
 1816      74 5F 61 64 
 1816      76 65 72 74 
 1817                 	.LASF81:
 1818 036e 61 70 70 5F 		.ascii "app_panic_unexpected_beep_type\000"
 1818      70 61 6E 69 
 1818      63 5F 72 65 
 1818      61 64 5F 74 
 1818      78 5F 70 77 
 1819                 	.LASF25:
 1820 037c 70 69 6F 5F 		.ascii "pio_mode_pio_control_txd\000"
 1820      6D 6F 64 65 
 1820      5F 77 65 61 
 1820      6B 5F 70 75 
 1820      6C 6C 5F 64 
 1821                 	.LASF67:
 1822 0388 70 69 6F 5F 		.ascii "APP_HW_DATA_T\000"
 1822      69 32 63 5F 
 1822      70 75 6C 6C 
 1822      5F 6D 6F 64 
 1822      65 5F 77 65 
 1823                 	.LASF51:
 1824 0397 61 70 70 5F 		.ascii "pio_event_mode_both\000"
 1824      70 61 6E 69 
 1824      63 5F 75 6E 
 1824      65 78 70 65 
 1824      63 74 65 64 
 1825                 	.LASF20:
 1826 03a7 70 69 6F 5F 		.ascii "pio_mode_uart\000"
 1826      6D 6F 64 65 
 1826      5F 70 69 6F 
 1826      5F 63 6F 6E 
 1826      74 72 6F 6C 
 1827                 	.LASF93:
 1828 03b3 41 50 50 5F 		.ascii "GNU C 4.3.4 CSR version 21 for xap [1468380]\000"
 1828      48 57 5F 44 
 1828      41 54 41 5F 
 1828      54 00 
 1829                 	.LASF77:
 1830 03ba 70 69 6F 5F 		.ascii "app_panic_delete_whitelist\000"
 1830      65 76 65 6E 
 1830      74 5F 6D 6F 
 1830      64 65 5F 62 
 1830      6F 74 68 00 
 1831                 		.ident	"GCC: (GNU) 4.3.4 CSR version 21 for xap [1468380]"
 1832 03c4 70 69 6F 5F 	...
 1832      6D 6F 64 65 
 1832      5F 75 61 72 
 1832      74 00 
