   1                 		.file	"hr_sensor_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.HrInitSwitchData,"ax",@progbits
  15                 		.global	HrInitSwitchData
  16                 		.type	HrInitSwitchData, @function
  17                 	HrInitSwitchData:
  18                 	.LFB9:
  19                 		.file 1 "hr_sensor_hw.c"
   0:hr_sensor_hw.c **** /******************************************************************************
   1:hr_sensor_hw.c ****  *  Copyright (C) Cambridge Silicon Radio Limited 2012-2013
   2:hr_sensor_hw.c ****  *  Part of CSR uEnergy SDK 2.2.2
   3:hr_sensor_hw.c ****  *  Application version 2.2.2.0
   4:hr_sensor_hw.c ****  *
   5:hr_sensor_hw.c ****  *  FILE
   6:hr_sensor_hw.c ****  *      hr_sensor_hw.c
   7:hr_sensor_hw.c ****  *
   8:hr_sensor_hw.c ****  *  DESCRIPTION
   9:hr_sensor_hw.c ****  *      This file defines the Heart Rate sensors hardware specific routines.
  10:hr_sensor_hw.c ****  *
  11:hr_sensor_hw.c ****  *****************************************************************************/
  12:hr_sensor_hw.c **** 
  13:hr_sensor_hw.c **** /*============================================================================*
  14:hr_sensor_hw.c ****  *  SDK Header Files
  15:hr_sensor_hw.c ****  *============================================================================*/
  16:hr_sensor_hw.c **** 
  17:hr_sensor_hw.c **** #include <pio.h>
  18:hr_sensor_hw.c **** #include <pio_ctrlr.h>
  19:hr_sensor_hw.c **** #include <timer.h>
  20:hr_sensor_hw.c **** 
  21:hr_sensor_hw.c **** /*============================================================================*
  22:hr_sensor_hw.c ****  *  Local Header Files
  23:hr_sensor_hw.c ****  *============================================================================*/
  24:hr_sensor_hw.c **** 
  25:hr_sensor_hw.c **** #include "hr_sensor.h"
  26:hr_sensor_hw.c **** #include "hr_sensor_gatt.h"
  27:hr_sensor_hw.c **** #include "hr_sensor_hw.h"
  28:hr_sensor_hw.c **** #include "heart_rate_service.h"
  29:hr_sensor_hw.c **** #include "app_gatt_db.h"
  30:hr_sensor_hw.c **** #include "app_gatt.h"
  31:hr_sensor_hw.c **** 
  32:hr_sensor_hw.c **** /*============================================================================*
  33:hr_sensor_hw.c ****  *  Private Definitions
  34:hr_sensor_hw.c ****  *============================================================================*/
  35:hr_sensor_hw.c **** 
  36:hr_sensor_hw.c **** /* Setup PIOs
  37:hr_sensor_hw.c ****  *  PIO3    Buzzer
  38:hr_sensor_hw.c ****  *  PIO4    LED 1
  39:hr_sensor_hw.c ****  *  PIO9    On Board Input - HR Input
  40:hr_sensor_hw.c ****  *  PIO10   LED 2 (Not Used)
  41:hr_sensor_hw.c ****  *  PIO11   Button
  42:hr_sensor_hw.c ****  */
  43:hr_sensor_hw.c **** 
  44:hr_sensor_hw.c **** #define BUZZER_PIO              (3)
  45:hr_sensor_hw.c **** #define HR_INPUT_PIO            (9)
  46:hr_sensor_hw.c **** #define BUTTON_PIO              (11)
  47:hr_sensor_hw.c **** 
  48:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  49:hr_sensor_hw.c **** 
  50:hr_sensor_hw.c **** #define BUZZER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))
  51:hr_sensor_hw.c **** #define HR_INPUT_PIO_MASK       (PIO_BIT_MASK(HR_INPUT_PIO))
  52:hr_sensor_hw.c **** #define BUTTON_PIO_MASK         (PIO_BIT_MASK(BUTTON_PIO))
  53:hr_sensor_hw.c **** 
  54:hr_sensor_hw.c **** /* PIO direction */
  55:hr_sensor_hw.c **** #define PIO_DIRECTION_INPUT     (FALSE)
  56:hr_sensor_hw.c **** #define PIO_DIRECTION_OUTPUT    (TRUE)
  57:hr_sensor_hw.c **** 
  58:hr_sensor_hw.c **** /* PIO state */
  59:hr_sensor_hw.c **** #define PIO_STATE_HIGH          (TRUE)
  60:hr_sensor_hw.c **** #define PIO_STATE_LOW           (FALSE)
  61:hr_sensor_hw.c **** 
  62:hr_sensor_hw.c **** /* Extra long button press timer */
  63:hr_sensor_hw.c **** #define EXTRA_LONG_BUTTON_PRESS_TIMER \
  64:hr_sensor_hw.c ****                                 (4*SECOND)
  65:hr_sensor_hw.c **** 
  66:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
  67:hr_sensor_hw.c **** 
  68:hr_sensor_hw.c **** /* The index (0-3) of the PWM unit to be configured */
  69:hr_sensor_hw.c **** #define BUZZER_PWM_INDEX_0      (0)
  70:hr_sensor_hw.c **** 
  71:hr_sensor_hw.c **** /* PWM parameters for Buzzer */
  72:hr_sensor_hw.c **** 
  73:hr_sensor_hw.c **** /* Dull on. off and hold times */
  74:hr_sensor_hw.c **** #define DULL_BUZZ_ON_TIME       (2)    /* 60us */
  75:hr_sensor_hw.c **** #define DULL_BUZZ_OFF_TIME      (15)   /* 450us */
  76:hr_sensor_hw.c **** #define DULL_BUZZ_HOLD_TIME     (0)
  77:hr_sensor_hw.c **** 
  78:hr_sensor_hw.c **** /* Bright on, off and hold times */
  79:hr_sensor_hw.c **** #define BRIGHT_BUZZ_ON_TIME     (2)    /* 60us */
  80:hr_sensor_hw.c **** #define BRIGHT_BUZZ_OFF_TIME    (15)   /* 450us */
  81:hr_sensor_hw.c **** #define BRIGHT_BUZZ_HOLD_TIME   (0)    /* 0us */
  82:hr_sensor_hw.c **** 
  83:hr_sensor_hw.c **** #define BUZZ_RAMP_RATE          (0xFF)
  84:hr_sensor_hw.c **** 
  85:hr_sensor_hw.c **** /* TIMER values for Buzzer */
  86:hr_sensor_hw.c **** #define SHORT_BEEP_TIMER_VALUE  (100* MILLISECOND)
  87:hr_sensor_hw.c **** #define LONG_BEEP_TIMER_VALUE   (500* MILLISECOND)
  88:hr_sensor_hw.c **** #define BEEP_GAP_TIMER_VALUE    (25* MILLISECOND)
  89:hr_sensor_hw.c **** 
  90:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
  91:hr_sensor_hw.c **** 
  92:hr_sensor_hw.c **** #define DIMMER_PIO              (3)
  93:hr_sensor_hw.c **** 
  94:hr_sensor_hw.c **** #define DIMMER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))                                
  95:hr_sensor_hw.c **** 
  96:hr_sensor_hw.c **** /*============================================================================*
  97:hr_sensor_hw.c ****  *  Public data
  98:hr_sensor_hw.c ****  *============================================================================*/
  99:hr_sensor_hw.c **** 
 100:hr_sensor_hw.c **** /* Blood pressure application hardware data instance */
 101:hr_sensor_hw.c **** APP_HW_DATA_T                   g_app_hw_data;
 102:hr_sensor_hw.c **** 
 103:hr_sensor_hw.c **** /* Dimmer hardware data instance */
 104:hr_sensor_hw.c **** SWITCH_DIMMER_DATA_T                   g_dimmer_data;
 105:hr_sensor_hw.c **** 
 106:hr_sensor_hw.c **** /*============================================================================*
 107:hr_sensor_hw.c ****  *  Private Function Implementations
 108:hr_sensor_hw.c ****  *============================================================================*/
 109:hr_sensor_hw.c **** 
 110:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 111:hr_sensor_hw.c **** 
 112:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 113:hr_sensor_hw.c ****  *  NAME
 114:hr_sensor_hw.c ****  *      appBuzzerTimerHandler
 115:hr_sensor_hw.c ****  *
 116:hr_sensor_hw.c ****  *  DESCRIPTION
 117:hr_sensor_hw.c ****  *      This function is used to stop the Buzzer at the expiry of 
 118:hr_sensor_hw.c ****  *      timer.
 119:hr_sensor_hw.c ****  *
 120:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 121:hr_sensor_hw.c ****  *      Nothing.
 122:hr_sensor_hw.c ****  *
 123:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 124:hr_sensor_hw.c **** static void appBuzzerTimerHandler(timer_id tid)
 125:hr_sensor_hw.c **** {
 126:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 127:hr_sensor_hw.c **** 
 128:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 129:hr_sensor_hw.c **** 
 130:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 131:hr_sensor_hw.c ****     {
 132:hr_sensor_hw.c ****         case buzzer_beep_short: /* FALLTHROUGH */
 133:hr_sensor_hw.c ****         case buzzer_beep_long:
 134:hr_sensor_hw.c ****         {
 135:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 136:hr_sensor_hw.c **** 
 137:hr_sensor_hw.c ****             /* Disable buzzer */
 138:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 139:hr_sensor_hw.c ****         }
 140:hr_sensor_hw.c ****         break;
 141:hr_sensor_hw.c ****         case buzzer_beep_twice:
 142:hr_sensor_hw.c ****         {
 143:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 144:hr_sensor_hw.c ****             {
 145:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 146:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 147:hr_sensor_hw.c **** 
 148:hr_sensor_hw.c ****                 /* Disable buzzer */
 149:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 150:hr_sensor_hw.c **** 
 151:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 152:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 153:hr_sensor_hw.c ****             }
 154:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 155:hr_sensor_hw.c ****             {
 156:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 157:hr_sensor_hw.c **** 
 158:hr_sensor_hw.c ****                 /* Enable buzzer */
 159:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 160:hr_sensor_hw.c **** 
 161:hr_sensor_hw.c ****                 /* Start another short beep */
 162:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 163:hr_sensor_hw.c ****             }
 164:hr_sensor_hw.c ****             else
 165:hr_sensor_hw.c ****             {
 166:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 167:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 168:hr_sensor_hw.c **** 
 169:hr_sensor_hw.c ****                 /* Disable buzzer */
 170:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 171:hr_sensor_hw.c **** 
 172:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 173:hr_sensor_hw.c ****             }
 174:hr_sensor_hw.c ****         }
 175:hr_sensor_hw.c ****         break;
 176:hr_sensor_hw.c ****         case buzzer_beep_thrice:
 177:hr_sensor_hw.c ****         {
 178:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 179:hr_sensor_hw.c ****                g_app_hw_data.beep_count == 2)
 180:hr_sensor_hw.c ****             {
 181:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 182:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 183:hr_sensor_hw.c **** 
 184:hr_sensor_hw.c ****                 /* Disable buzzer */
 185:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 186:hr_sensor_hw.c **** 
 187:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 188:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 189:hr_sensor_hw.c ****             }
 190:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 191:hr_sensor_hw.c ****                     g_app_hw_data.beep_count == 3)
 192:hr_sensor_hw.c ****             {
 193:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 194:hr_sensor_hw.c **** 
 195:hr_sensor_hw.c ****                 /* Enable buzzer */
 196:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 197:hr_sensor_hw.c **** 
 198:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 199:hr_sensor_hw.c ****             }
 200:hr_sensor_hw.c ****             else
 201:hr_sensor_hw.c ****             {
 202:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 203:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 204:hr_sensor_hw.c **** 
 205:hr_sensor_hw.c ****                 /* Disable buzzer */
 206:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 207:hr_sensor_hw.c **** 
 208:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 209:hr_sensor_hw.c ****             }
 210:hr_sensor_hw.c ****         }
 211:hr_sensor_hw.c ****         break;
 212:hr_sensor_hw.c **** 
 213:hr_sensor_hw.c ****         default:
 214:hr_sensor_hw.c ****         {
 215:hr_sensor_hw.c ****             /* No such beep type */
 216:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 217:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 218:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 219:hr_sensor_hw.c ****              */
 220:hr_sensor_hw.c ****         }
 221:hr_sensor_hw.c ****         break;
 222:hr_sensor_hw.c ****     }
 223:hr_sensor_hw.c **** 
 224:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 225:hr_sensor_hw.c ****     {
 226:hr_sensor_hw.c ****         /* start the timer */
 227:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 228:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 229:hr_sensor_hw.c ****     }
 230:hr_sensor_hw.c **** }
 231:hr_sensor_hw.c **** 
 232:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER*/
 233:hr_sensor_hw.c **** 
 234:hr_sensor_hw.c **** /*============================================================================*
 235:hr_sensor_hw.c ****  *  Public Function Implementations
 236:hr_sensor_hw.c ****  *============================================================================*/
 237:hr_sensor_hw.c **** 
 238:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 239:hr_sensor_hw.c ****  *  NAME
 240:hr_sensor_hw.c ****  *      HrInitHardware 
 241:hr_sensor_hw.c ****  *
 242:hr_sensor_hw.c ****  *  DESCRIPTION
 243:hr_sensor_hw.c ****  *      This function is called to initialise heart rate hardware
 244:hr_sensor_hw.c ****  *
 245:hr_sensor_hw.c ****  *  RETURNS
 246:hr_sensor_hw.c ****  *      Nothing.
 247:hr_sensor_hw.c ****  *
 248:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 249:hr_sensor_hw.c **** 
 250:hr_sensor_hw.c **** extern void HrInitHardware(void)
 251:hr_sensor_hw.c **** {
 252:hr_sensor_hw.c ****     /* Setup PIOs
 253:hr_sensor_hw.c ****      * PIO3 - Buzzer
 254:hr_sensor_hw.c ****      * PIO4 - LED 1
 255:hr_sensor_hw.c ****      * PIO9 - On Board Input - HR input 
 256:hr_sensor_hw.c ****      *            when actual measurements 
 257:hr_sensor_hw.c ****      *            are enabled
 258:hr_sensor_hw.c ****      * PIO10 - LED 2 (Not Used)
 259:hr_sensor_hw.c ****      * PIO11 - Button
 260:hr_sensor_hw.c ****      */
 261:hr_sensor_hw.c **** #ifdef NO_ACTUAL_MEASUREMENT
 262:hr_sensor_hw.c **** 
 263:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 264:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 265:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 266:hr_sensor_hw.c **** 
 267:hr_sensor_hw.c ****     /* Setup button on PIO11 */
 268:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 269:hr_sensor_hw.c **** 
 270:hr_sensor_hw.c **** #else /* NO_ACTUAL_MEASUREMENT */
 271:hr_sensor_hw.c **** 
 272:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 273:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 274:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 275:hr_sensor_hw.c **** 
 276:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 277:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 278:hr_sensor_hw.c **** 
 279:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 280:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 281:hr_sensor_hw.c **** 
 282:hr_sensor_hw.c **** #endif /* ! NO_ACTUAL_MEASUREMENT */
 283:hr_sensor_hw.c **** 
 284:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 285:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 286:hr_sensor_hw.c **** 
 287:hr_sensor_hw.c ****     /* Configure the buzzer on PIO3 */
 288:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 289:hr_sensor_hw.c ****                  DULL_BUZZ_OFF_TIME, DULL_BUZZ_HOLD_TIME, BRIGHT_BUZZ_ON_TIME,
 290:hr_sensor_hw.c ****                  BRIGHT_BUZZ_OFF_TIME, BRIGHT_BUZZ_HOLD_TIME, BUZZ_RAMP_RATE);
 291:hr_sensor_hw.c **** 
 292:hr_sensor_hw.c **** 
 293:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 294:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 295:hr_sensor_hw.c **** 
 296:hr_sensor_hw.c **** 
 297:hr_sensor_hw.c ****     /* Save power by changing the I2C pull mode to pull down.*/
 298:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 299:hr_sensor_hw.c **** 
 300:hr_sensor_hw.c ****     HrInitSwitchHardware();
 301:hr_sensor_hw.c **** }
 302:hr_sensor_hw.c **** 
 303:hr_sensor_hw.c **** 
 304:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 305:hr_sensor_hw.c ****  *  NAME
 306:hr_sensor_hw.c ****  *      HrHwDataInit
 307:hr_sensor_hw.c ****  *
 308:hr_sensor_hw.c ****  *  DESCRIPTION
 309:hr_sensor_hw.c ****  *      This function initialises HR sensor hardware data structure
 310:hr_sensor_hw.c ****  *
 311:hr_sensor_hw.c ****  *  RETURNS
 312:hr_sensor_hw.c ****  *      Nothing.
 313:hr_sensor_hw.c ****  *
 314:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 315:hr_sensor_hw.c **** 
 316:hr_sensor_hw.c **** extern void HrHwDataInit(void)
 317:hr_sensor_hw.c **** {
 318:hr_sensor_hw.c **** 
 319:hr_sensor_hw.c ****     /* Delete button press timer */
 320:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
 321:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
 322:hr_sensor_hw.c ****     HrInitSwitchData();
 323:hr_sensor_hw.c **** }
 324:hr_sensor_hw.c **** 
 325:hr_sensor_hw.c **** 
 326:hr_sensor_hw.c **** 
 327:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 328:hr_sensor_hw.c ****  *  NAME
 329:hr_sensor_hw.c ****  *      SoundBuzzer
 330:hr_sensor_hw.c ****  *
 331:hr_sensor_hw.c ****  *  DESCRIPTION
 332:hr_sensor_hw.c ****  *      This function is called to trigger beeps of different types 
 333:hr_sensor_hw.c ****  *      'buzzer_beep_type'.
 334:hr_sensor_hw.c ****  *
 335:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 336:hr_sensor_hw.c ****  *      Nothing.
 337:hr_sensor_hw.c ****  *
 338:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 339:hr_sensor_hw.c **** 
 340:hr_sensor_hw.c **** extern void SoundBuzzer(buzzer_beep_type beep_type)
 341:hr_sensor_hw.c **** {
 342:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 343:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 344:hr_sensor_hw.c **** 
 345:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 346:hr_sensor_hw.c **** 
 347:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 348:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 349:hr_sensor_hw.c **** 
 350:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 351:hr_sensor_hw.c **** 
 352:hr_sensor_hw.c ****     /* Store the beep type in some global variable. It will used on timer 
 353:hr_sensor_hw.c ****      * expiry to check the type of beeps being sounded.
 354:hr_sensor_hw.c ****      */
 355:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 356:hr_sensor_hw.c **** 
 357:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 358:hr_sensor_hw.c ****     {
 359:hr_sensor_hw.c ****         case buzzer_beep_off:
 360:hr_sensor_hw.c ****         {
 361:hr_sensor_hw.c ****             /* Don't do anything */
 362:hr_sensor_hw.c ****         }
 363:hr_sensor_hw.c ****         break;
 364:hr_sensor_hw.c **** 
 365:hr_sensor_hw.c ****         case buzzer_beep_short: /* One short beep will be sounded */
 366:hr_sensor_hw.c ****             /* FALLTHROUGH */
 367:hr_sensor_hw.c ****         case buzzer_beep_twice: /* Two short beeps will be sounded */
 368:hr_sensor_hw.c ****             /* FALLTHROUGH */
 369:hr_sensor_hw.c ****         case buzzer_beep_thrice: /* Three short beeps will be sounded */
 370:hr_sensor_hw.c ****         {
 371:hr_sensor_hw.c ****             beep_timer = SHORT_BEEP_TIMER_VALUE;
 372:hr_sensor_hw.c ****         }
 373:hr_sensor_hw.c ****         break;
 374:hr_sensor_hw.c **** 
 375:hr_sensor_hw.c ****         case buzzer_beep_long:
 376:hr_sensor_hw.c ****         {
 377:hr_sensor_hw.c ****             /* One long beep will be sounded */
 378:hr_sensor_hw.c ****             beep_timer = LONG_BEEP_TIMER_VALUE;
 379:hr_sensor_hw.c ****         }
 380:hr_sensor_hw.c ****         break;
 381:hr_sensor_hw.c **** 
 382:hr_sensor_hw.c ****         default:
 383:hr_sensor_hw.c ****         {
 384:hr_sensor_hw.c ****             /* No such beep type defined */
 385:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 386:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 387:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 388:hr_sensor_hw.c ****              */
 389:hr_sensor_hw.c ****         }
 390:hr_sensor_hw.c ****         break;
 391:hr_sensor_hw.c ****     }
 392:hr_sensor_hw.c **** 
 393:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 394:hr_sensor_hw.c ****     {
 395:hr_sensor_hw.c ****         /* Initialize beep count to zero */
 396:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 397:hr_sensor_hw.c **** 
 398:hr_sensor_hw.c ****         /* Enable buzzer */
 399:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 400:hr_sensor_hw.c **** 
 401:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 402:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 403:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 404:hr_sensor_hw.c ****     }
 405:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 406:hr_sensor_hw.c **** }
 407:hr_sensor_hw.c **** 
 408:hr_sensor_hw.c **** 
 409:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 410:hr_sensor_hw.c **** 
 411:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 412:hr_sensor_hw.c ****  *  NAME
 413:hr_sensor_hw.c ****  *      GetRRValue
 414:hr_sensor_hw.c ****  *
 415:hr_sensor_hw.c ****  *  DESCRIPTION
 416:hr_sensor_hw.c ****  *      Get RR value by reading the HR_INPUT_PIO
 417:hr_sensor_hw.c ****  *
 418:hr_sensor_hw.c ****  *  RETURNS
 419:hr_sensor_hw.c ****  *      UINT32: RR value 
 420:hr_sensor_hw.c ****  *
 421:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 422:hr_sensor_hw.c **** 
 423:hr_sensor_hw.c **** extern uint32 GetRRValue(void)
 424:hr_sensor_hw.c **** {
 425:hr_sensor_hw.c **** 
 426:hr_sensor_hw.c ****     /* handle heartrate events ie changes to HR_INPUT_PIO */
 427:hr_sensor_hw.c ****     /* value is in 30.517us (32768KHz) intervals */
 428:hr_sensor_hw.c **** 
 429:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 430:hr_sensor_hw.c **** 
 431:hr_sensor_hw.c **** }
 432:hr_sensor_hw.c **** 
 433:hr_sensor_hw.c **** #endif /* !NO_ACTUAL_MEASUREMENT */
 434:hr_sensor_hw.c **** 
 435:hr_sensor_hw.c **** 
 436:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 437:hr_sensor_hw.c ****  *  NAME
 438:hr_sensor_hw.c ****  *      HandlePIOChangedEvent
 439:hr_sensor_hw.c ****  *
 440:hr_sensor_hw.c ****  *  DESCRIPTION
 441:hr_sensor_hw.c ****  *      This function handles PIO Changed event
 442:hr_sensor_hw.c ****  *
 443:hr_sensor_hw.c ****  *  RETURNS
 444:hr_sensor_hw.c ****  *      Nothing.
 445:hr_sensor_hw.c ****  *
 446:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 447:hr_sensor_hw.c **** 
 448:hr_sensor_hw.c **** extern void HandlePIOChangedEvent(uint32 pio_changed)
 449:hr_sensor_hw.c **** {
 450:hr_sensor_hw.c ****     /* PIO changed */
 451:hr_sensor_hw.c ****     uint32 pios = PioGets();
 452:hr_sensor_hw.c **** 
 453:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 454:hr_sensor_hw.c ****     {
 455:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 456:hr_sensor_hw.c ****         {
 457:hr_sensor_hw.c ****             /* This event comes when a button is pressed */
 458:hr_sensor_hw.c **** 
 459:hr_sensor_hw.c ****             /* Start a timer for LONG_BUTTON_PRESS_TIMER seconds. If timer expi-
 460:hr_sensor_hw.c ****              * res before we receive a button release event then it was a long -
 461:hr_sensor_hw.c ****              * press and if we receive a button release pio changed event, it -
 462:hr_sensor_hw.c ****              * means it was a short press.
 463:hr_sensor_hw.c ****              */
 464:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 465:hr_sensor_hw.c **** 
 466:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 467:hr_sensor_hw.c ****                                            EXTRA_LONG_BUTTON_PRESS_TIMER,
 468:hr_sensor_hw.c ****                                            TRUE,
 469:hr_sensor_hw.c ****                                            HandleExtraLongButtonPress);
 470:hr_sensor_hw.c ****         }
 471:hr_sensor_hw.c ****         else
 472:hr_sensor_hw.c ****         {
 473:hr_sensor_hw.c ****             /* This event comes when a button is released */
 474:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 475:hr_sensor_hw.c ****             {
 476:hr_sensor_hw.c ****                 /* Timer was already running. This means it was a short button 
 477:hr_sensor_hw.c ****                  * press.
 478:hr_sensor_hw.c ****                  */
 479:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 480:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 481:hr_sensor_hw.c **** 
 482:hr_sensor_hw.c ****                 HandleShortButtonPress();
 483:hr_sensor_hw.c ****             }
 484:hr_sensor_hw.c ****         }
 485:hr_sensor_hw.c ****     }
 486:hr_sensor_hw.c ****     /* Move DIMMER_PIO_MASK directly into file if problems */
 487:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 488:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 489:hr_sensor_hw.c ****     }
 490:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 491:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 492:hr_sensor_hw.c ****     {
 493:hr_sensor_hw.c ****         /* Process the event on the falling edge and ignore the rising edge 
 494:hr_sensor_hw.c ****          * events.
 495:hr_sensor_hw.c ****          */
 496:hr_sensor_hw.c ****         FlipSwitch();
 497:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 498:hr_sensor_hw.c ****         {
 499:hr_sensor_hw.c ****             HandleHRInputEvent();
 500:hr_sensor_hw.c ****         }
 501:hr_sensor_hw.c ****     }
 502:hr_sensor_hw.c **** #endif
 503:hr_sensor_hw.c **** 
 504:hr_sensor_hw.c **** }
 505:hr_sensor_hw.c **** 
 506:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 507:hr_sensor_hw.c ****  *  NAME
 508:hr_sensor_hw.c ****  *      HrInitSwitchHardware 
 509:hr_sensor_hw.c ****  *
 510:hr_sensor_hw.c ****  *  DESCRIPTION
 511:hr_sensor_hw.c ****  *      This function is called to initialise switch hardware
 512:hr_sensor_hw.c ****  *
 513:hr_sensor_hw.c ****  *  RETURNS
 514:hr_sensor_hw.c ****  *      Nothing.
 515:hr_sensor_hw.c ****  *
 516:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 517:hr_sensor_hw.c **** 
 518:hr_sensor_hw.c **** extern void HrInitSwitchHardware(void)
 519:hr_sensor_hw.c **** {
 520:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
 521:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
 522:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
 523:hr_sensor_hw.c **** 
 524:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 525:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 526:hr_sensor_hw.c **** 
 527:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 528:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
 529:hr_sensor_hw.c **** }
 530:hr_sensor_hw.c **** 
 531:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 532:hr_sensor_hw.c ****  *  NAME
 533:hr_sensor_hw.c ****  *      HrHwDataInit
 534:hr_sensor_hw.c ****  *
 535:hr_sensor_hw.c ****  *  DESCRIPTION
 536:hr_sensor_hw.c ****  *      This function initialises switch hardware data structure
 537:hr_sensor_hw.c ****  *
 538:hr_sensor_hw.c ****  *  RETURNS
 539:hr_sensor_hw.c ****  *      Nothing.
 540:hr_sensor_hw.c ****  *
 541:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 542:hr_sensor_hw.c **** 
 543:hr_sensor_hw.c **** extern void HrInitSwitchData(void)
 544:hr_sensor_hw.c **** {
  20                 	 1 547 0
 545:hr_sensor_hw.c ****     /* Reset last value */
 546:hr_sensor_hw.c **** }
  21                 	bra	0,X
  22 0000 00 E2       	.LFE9:
  23                 		.size	HrInitSwitchData, .-HrInitSwitchData
  24                 		.global	__size_of_HrInitSwitchData
  25                 		.equ	__size_of_HrInitSwitchData,. - HrInitSwitchData
  26                 		.section	.text.HandleSwitchPIOChangedEvent,"ax",@progbits
  27                 		.global	HandleSwitchPIOChangedEvent
  28                 		.type	HandleSwitchPIOChangedEvent, @function
  29                 	HandleSwitchPIOChangedEvent:
  30                 	.LFB10:
  31                 		.loc 1 562 0
 547:hr_sensor_hw.c **** 
 548:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 549:hr_sensor_hw.c ****  *  NAME
 550:hr_sensor_hw.c ****  *      HandleSwitchPIOChangedEvent
 551:hr_sensor_hw.c ****  *
 552:hr_sensor_hw.c ****  *  DESCRIPTION
 553:hr_sensor_hw.c ****  *      This function handles Switch PIO Changed event
 554:hr_sensor_hw.c ****  *
 555:hr_sensor_hw.c ****  *  RETURNS
 556:hr_sensor_hw.c ****  *      Nothing.
 557:hr_sensor_hw.c ****  *
 558:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 559:hr_sensor_hw.c **** 
 560:hr_sensor_hw.c **** extern void HandleSwitchPIOChangedEvent(uint32 pio_changed)
 561:hr_sensor_hw.c **** {
  32                 	c 1 563 0
  33                 		ld	AL,#0x0000
 562:hr_sensor_hw.c ****     g_dimmer_data.last_dimmer_var = 0;
  34                 	t	AL,@g_dimmer_data
  35 0000 00 14       		.loc 1 564 0
  36 0001 00 00 00 25 		bra	FlipSwitch
 563:hr_sensor_hw.c ****     FlipSwitch();
  37                 	L1:
  38 0003 00 00 00 00 	.LFE10:
  38      00 E0 
  39                 		.size	HandleSwitchPIOChangedEvent, .-HandleSwitchPIOChangedEvent
  40                 		.global	__size_of_HandleSwitchPIOChangedEvent
  41                 		.equ	__size_of_HandleSwitchPIOChangedEvent,. - HandleSwitchPIOChangedEvent
  42                 		.section	.text.HrInitSwitchHardware,"ax",@progbits
  43                 		.global	HrInitSwitchHardware
  44                 		.type	HrInitSwitchHardware, @function
  45                 	HrInitSwitchHardware:
  46                 	.LFB8:
  47                 		.loc 1 520 0
  48                 		enter	#0x0002
 520:hr_sensor_hw.c **** {
  49                 	c 1 521 0
  50 0000 02 0B       		ld	AL,#0x0001
  51                 		st	AL,@(0,Y)
 521:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
  52                 		AH,#0x0000
  53 0001 01 14       		ld	AL,#0x0008
  54 0002 00 27       		bsr	PioSetModes
  55 0003 00 10       		.loc 1 522 0
  56 0004 08 14       		ld	AL,#0x0003
  57 0005 00 00 00 00 		ld	AH,#0x0000
  57      00 9C 
 522:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
  58                 	ioSetDir
  59 0008 03 14       		.loc 1 523 0
  60 0009 00 10       		ld	AL,#0x0007
  61 000a 00 00 00 00 		st	AL,@(0,Y)
  61      00 9C 
 523:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
  62                 	AH,#0x0000
  63 000d 07 14       		ld	AL,#0x0008
  64 000e 00 27       		bsr	PioSetPullModes
  65 000f 00 10       		.loc 1 526 0
  66 0010 08 14       		ld	AL,#0x0001
  67 0011 00 00 00 00 		ld	AH,#0x0000
  67      00 9C 
 526:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
  68                 	ioEnableEdgeCapture
  69 0014 01 14       		.loc 1 529 0
  70 0015 00 10       		ld	AL,#0x0003
  71 0016 00 00 00 00 		st	AL,@(0,Y)
  71      00 9C 
 529:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
  72                 	AH,#0x0000
  73 0019 03 14       		ld	AL,#0x0008
  74 001a 00 27       		bsr	PioSetEventMask
  75 001b 00 10       		.loc 1 530 0
  76 001c 08 14       		leave	#0x0002
  77 001d 00 00 00 00 	.LFE8:
  77      00 9C 
 530:hr_sensor_hw.c **** }
  78                 		HrInitSwitchHardware, .-HrInitSwitchHardware
  79 0020 02 0F       		.global	__size_of_HrInitSwitchHardware
  80                 		.equ	__size_of_HrInitSwitchHardware,. - HrInitSwitchHardware
  81                 		.section	.text.HrHwDataInit,"ax",@progbits
  82                 		.global	HrHwDataInit
  83                 		.type	HrHwDataInit, @function
  84                 	HrHwDataInit:
  85                 	.LFB4:
  86                 		.loc 1 318 0
  87                 		enter	#0x0001
  88                 	.LCFI1:
 318:hr_sensor_hw.c **** {
  89                 	 0
  90 0000 01 0B       		ld	X,#g_app_hw_data+3
  91                 		ld	AL,@(0,X)
 321:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
  92                 	r	TimerDelete
  93 0001 00 00 00 18 		.loc 1 322 0
  94 0003 00 16       		ld	AL,#0x0000
  95 0004 00 00 00 00 		ld	X,#g_app_hw_data+3
  95      00 9C 
 322:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
  96                 	AL,@(0,X)
  97 0007 00 14       		.loc 1 324 0
  98 0008 00 00 00 18 		leave	#0x0001
  99 000a 00 26       	.LFE4:
 324:hr_sensor_hw.c **** }
 100                 	ze	HrHwDataInit, .-HrHwDataInit
 101 000b 01 0F       		.global	__size_of_HrHwDataInit
 102                 		.equ	__size_of_HrHwDataInit,. - HrHwDataInit
 103                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
 104                 		.global	HandlePIOChangedEvent
 105                 		.type	HandlePIOChangedEvent, @function
 106                 	HandlePIOChangedEvent:
 107                 	.LFB7:
 108                 		.loc 1 450 0
 109                 	.LVL2:
 110                 		enter	#0x0006
 450:hr_sensor_hw.c **** {
 111                 		AH,@(0x0003,Y)
 112                 		st	AL,@(0x0004,Y)
 113 0000 06 0B       	.LVL3:
 114                 		.loc 1 452 0
 115 0001 03 23       		bsr	PioGets
 116 0002 04 27       	.LVL4:
 117                 		st	AL,@(0x0002,Y)
 452:hr_sensor_hw.c ****     uint32 pios = PioGets();
 118                 	 454 0
 119 0003 00 00 00 00 		ld	AL,@(0x0004,Y)
 119      00 9C 
 120                 		and	AL,#0x0800
 121 0006 02 27       		beq	.L10
 454:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 122                 	c 1 456 0
 123 0007 04 17       		ld	AL,@(0x0002,Y)
 124 0008 08 00 00 C4 		and	AL,#0x0800
 125 000a 00 00 00 00 		bne	.L11
 125      00 F4 
 456:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 126                 	c 1 465 0
 127 000d 02 17       		ld	AL,@g_app_hw_data+0x0003
 128 000e 08 00 00 C4 		bsr	TimerDelete
 129 0010 00 00 00 00 		.loc 1 467 0
 129      00 F0 
 465:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 130                 	AL,#0x0001
 131 0013 00 00 00 15 		st	AL,@(0,Y)
 132 0015 00 00 00 00 		ld	AL,#HandleExtraLongButtonPress
 132      00 9C 
 467:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 133                 		AL,@(0x0001,Y)
 134 0018 01 14       		ld	AH,#0x003d
 135 0019 00 27       		ld	AL,#0x0900
 136 001a 00 00 00 14 		bsr	TimerCreate
 137 001c 01 27       		st	AL,@g_app_hw_data+0x0003
 138 001d 3D 10       		bra	.L14
 139 001e 09 00 00 14 	.L11:
 140 0020 00 00 00 00 		.loc 1 475 0
 140      00 9C 
 141 0023 00 00 00 25 		ld	AL,@g_app_hw_data+0x0003
 142 0025 00 00 00 00 		beq	.L14
 142      00 E0 
 143                 		.loc 1 480 0
 475:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 144                 	elete
 145 0028 00 00 00 15 		.loc 1 481 0
 146 002a 00 00 00 00 		ld	AL,#0x0000
 146      00 F4 
 480:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 147                 		AL,@g_app_hw_data+0x0003
 148 002d 00 00 00 00 		.loc 1 483 0
 148      00 9C 
 481:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 149                 	sr	HandleShortButtonPress
 150 0030 00 14       		bra	.L14
 151 0031 00 00 00 25 	.L10:
 483:hr_sensor_hw.c ****                 HandleShortButtonPress();
 152                 	oc 1 488 0
 153 0033 00 00 00 00 		ld	AL,@(0x0004,Y)
 153      00 9C 
 154 0036 00 00 00 00 		and	AL,#0x0008
 154      00 E0 
 155                 		beq	.L13
 488:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 156                 	c 1 489 0
 157 0039 04 17       		ld	AH,@(0x0003,Y)
 158 003a 08 C4       		ld	AL,@(0x0004,Y)
 159 003b 00 00 00 00 		bsr	HandleSwitchPIOChangedEvent
 159      00 F4 
 489:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 160                 		.L14
 161 003e 03 13       	.L13:
 162 003f 04 17       		.loc 1 492 0
 163 0040 00 00 00 00 		ld	AL,@(0x0004,Y)
 163      00 9C 
 164 0043 00 00 00 00 		and	AL,#0x0200
 164      00 E0 
 165                 		beq	.L14
 492:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 166                 	1 497 0
 167 0046 04 17       		bsr	FlipSwitch
 168 0047 02 00 00 C4 		.loc 1 498 0
 169 0049 00 00 00 00 		ld	AL,@(0x0002,Y)
 169      00 F4 
 497:hr_sensor_hw.c ****         FlipSwitch();
 170                 		AL,#0x0200
 171 004c 00 00 00 00 		bne	.L14
 171      00 9C 
 498:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 172                 	loc 1 500 0
 173 004f 02 17       		bsr	HandleHRInputEvent
 174 0050 02 00 00 C4 	.L14:
 175 0052 00 00 00 00 		.loc 1 505 0
 175      00 F0 
 500:hr_sensor_hw.c ****             HandleHRInputEvent();
 176                 	ve	#0x0006
 177 0055 00 00 00 00 	.LFE7:
 177      00 9C 
 178                 		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
 505:hr_sensor_hw.c **** }
 179                 	lobal	__size_of_HandlePIOChangedEvent
 180 0058 06 0F       		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
 181                 		.section	.text.GetRRValue,"ax",@progbits
 182                 		.global	GetRRValue
 183                 		.type	GetRRValue, @function
 184                 	GetRRValue:
 185                 	.LFB6:
 186                 		.loc 1 425 0
 187                 		.loc 1 430 0
 188                 		bra	PioReadEdgeCapture
 189                 	.LFE6:
 425:hr_sensor_hw.c **** {
 190                 	RValue, .-GetRRValue
 430:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 191                 	.global	__size_of_GetRRValue
 192 0000 00 00 00 00 		.equ	__size_of_GetRRValue,. - GetRRValue
 192      00 E0 
 193                 		.section	.text.SoundBuzzer,"ax",@progbits
 194                 		.global	SoundBuzzer
 195                 		.type	SoundBuzzer, @function
 196                 	SoundBuzzer:
 197                 	.LFB5:
 198                 		.loc 1 342 0
 199                 	.LVL5:
 200                 		enter	#0x0006
 201                 	.LCFI3:
 342:hr_sensor_hw.c **** {
 202                 	0002,Y)
 203                 		.loc 1 346 0
 204 0000 06 0B       		ld	AL,#0x0000
 205                 	.LVL6:
 206 0001 02 27       		ld	AH,#0x0000
 346:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 207                 	PioEnablePWM
 208 0002 00 14       		.loc 1 348 0
 209                 		ld	AL,@g_app_hw_data
 210 0003 00 10       		bsr	TimerDelete
 211 0004 00 00 00 00 		.loc 1 349 0
 211      00 9C 
 348:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 212                 	L,#0x0000
 213 0007 00 00 00 15 		st	AL,@g_app_hw_data
 214 0009 00 00 00 00 		.loc 1 351 0
 214      00 9C 
 349:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 215                 		AL,@g_app_hw_data+0x0002
 216 000c 00 14       		.loc 1 356 0
 217 000d 00 00 00 25 		ld	AL,@(0x0002,Y)
 351:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 218                 		AL,@g_app_hw_data+0x0001
 219 000f 00 00 00 25 		.loc 1 358 0
 356:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 220                 	mp	AL,#0x0005
 221 0011 02 17       		bcc	.L18
 222 0012 00 00 00 25 		ld	AL,#0x0001
 358:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 223                 	l	@(0x0002,Y)
 224 0014 05 84       		ld	AH,@$XAP_AL
 225 0015 00 00 00 00 		and	AL,#0x001b
 225      00 F8 
 226 0018 01 14       		bne	.L25
 227 0019 02 A3       		ld	AL,@$XAP_AH
 228 001a 00 00 00 11 		and	AL,#0x0004
 229 001c 1B C4       		beq	.L18
 230 001d 00 00 00 00 		ld	AL,#0x0007
 230      00 F0 
 231 0020 00 00 00 15 		st	AL,@(0x0003,Y)
 232 0022 04 C4       		ld	AL,#0xa120
 233 0023 00 00 00 00 		bra	.L24
 233      00 F4 
 234 0026 07 14       	.L18:
 235 0027 03 27       		.loc 1 386 0
 236 0028 A1 00 20 14 		ld	AL,#0x000b
 237 002a 00 00 00 00 		bsr	ReportPanic
 237      00 E0 
 238                 	.L25:
 386:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 239                 	st	AL,@(0x0003,Y)
 240 002d 0B 14       		ld	AL,#0x86a0
 241 002e 00 00 00 00 	.L24:
 241      00 9C 
 242                 		st	AL,@(0x0004,Y)
 243 0031 01 14       		.loc 1 394 0
 244 0032 03 27       		tst	@g_app_hw_data+0x0001
 245 0033 87 00 A0 14 		beq	.L23
 246                 		.loc 1 397 0
 247 0035 04 27       		ld	AL,#0x0000
 394:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 248                 	_app_hw_data+0x0002
 249 0036 00 00 00 99 		.loc 1 400 0
 250 0038 00 00 00 00 		ld	AH,#0x0001
 250      00 F4 
 397:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 251                 	r	PioEnablePWM
 252 003b 00 14       		.loc 1 402 0
 253 003c 00 00 00 25 		ld	AL,@g_app_hw_data
 400:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 254                 	r	TimerDelete
 255 003e 01 10       		.loc 1 403 0
 256 003f 00 00 00 00 		ld	AL,#0x0001
 256      00 9C 
 402:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 257                 		AL,@(0,Y)
 258 0042 00 00 00 15 		ld	AL,#appBuzzerTimerHandler
 259 0044 00 00 00 00 		st	AL,@(0x0001,Y)
 259      00 9C 
 403:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 260                 		AH,@(0x0003,Y)
 261 0047 01 14       		ld	AL,@(0x0004,Y)
 262 0048 00 27       		bsr	TimerCreate
 263 0049 00 00 00 14 		st	AL,@g_app_hw_data
 264 004b 01 27       	.L23:
 265 004c 03 13       		.loc 1 407 0
 266 004d 04 17       		leave	#0x0006
 267 004e 00 00 00 00 	.LFE5:
 267      00 9C 
 268 0051 00 00 00 25 		.size	SoundBuzzer, .-SoundBuzzer
 269                 		.global	__size_of_SoundBuzzer
 407:hr_sensor_hw.c **** }
 270                 	ze_of_SoundBuzzer,. - SoundBuzzer
 271 0053 06 0F       		.section	.text.appBuzzerTimerHandler,"ax",@progbits
 272                 		.type	appBuzzerTimerHandler, @function
 273                 	appBuzzerTimerHandler:
 274                 	.LFB2:
 275                 		.loc 1 126 0
 276                 	.LVL7:
 277                 		enter	#0x0003
 278                 	.LCFI4:
 279                 		.loc 1 129 0
 126:hr_sensor_hw.c **** {
 280                 	0000
 281                 	.LVL8:
 282 0000 03 0B       		st	AL,@g_app_hw_data
 283                 		.loc 1 131 0
 129:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 284                 	AL,@g_app_hw_data+0x0001
 285 0001 00 14       		cmp	AL,#0x0003
 286                 		beq	.L29
 287 0002 00 00 00 25 		cmp	AL,#0x0004
 131:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 288                 		.L31
 289 0004 00 00 00 15 		cmp	AL,#0x0001
 290 0006 03 84       		bcs	.L27
 291 0007 00 00 00 00 		bra	.L46
 291      00 F4 
 292 000a 04 84       	.L31:
 293 000b 00 00 00 00 		cmp	AL,#0x0004
 293      00 F8 
 294 000e 01 84       		bne	.L27
 295 000f 00 00 00 00 		bra	.L47
 295      00 FC 
 296 0012 00 00 00 00 	.L46:
 296      00 E0 
 297                 		.loc 1 136 0
 298 0015 04 84       		ld	X,#0x0000
 299 0016 00 00 00 00 		st	X,@g_app_hw_data+0x0001
 299      00 F0 
 300 0019 00 00 00 00 		.loc 1 139 0
 300      00 E0 
 301                 		ld	AL,#0x0000
 136:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 302                 	
 303 001c 00 18       		bra	.L44
 304 001d 00 00 00 29 	.L29:
 139:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 305                 	loc 1 144 0
 306 001f 00 14       		ld	AL,@g_app_hw_data+0x0002
 307 0020 00 10       		bne	.L33
 308 0021 00 00 00 00 		.loc 1 147 0
 308      00 E0 
 309                 		ld	AL,#0x0001
 144:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 310                 	.L43
 311 0024 00 00 00 15 	.L33:
 312 0026 00 00 00 00 		.loc 1 155 0
 312      00 F0 
 147:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 313                 	p	AL,#0x0001
 314 0029 01 14       		bne	.L38
 315 002a 00 00 00 00 		.loc 1 157 0
 315      00 E0 
 316                 		ld	X,#0x0002
 155:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 317                 	X,@g_app_hw_data+0x0002
 318 002d 01 84       		bra	.L45
 319 002e 00 00 00 00 	.L47:
 319      00 F0 
 157:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 320                 	oc 1 179 0
 321 0031 02 18       		ld	AL,@g_app_hw_data+0x0002
 322 0032 00 00 00 29 		beq	.L35
 323 0034 00 00 00 00 		cmp	AL,#0x0002
 323      00 E0 
 324                 		bne	.L36
 179:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 325                 	
 326 0037 00 00 00 15 		.loc 1 183 0
 327 0039 00 00 00 00 		add	AL,#0x0001
 327      00 F4 
 328 003c 02 84       	.L43:
 329 003d 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 329      00 F0 
 330                 		.loc 1 186 0
 183:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 331                 	L,#0x0000
 332 0040 01 34       		ld	AH,#0x0000
 333                 		bsr	PioEnablePWM
 334 0041 00 00 00 25 		ld	AH,#0x0000
 186:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 335                 	9:
 336 0043 00 14       		ld	AL,#0x61a8
 337 0044 00 10       	.LVL10:
 338 0045 00 00 00 00 		bra	.L32
 338      00 9C 
 339 0048 00 10       	.LVL11:
 340                 	.L36:
 341 0049 62 00 A8 14 		.loc 1 191 0
 342                 		cmp	AL,#0x0001
 343 004b 00 00 00 00 		beq	.L37
 343      00 E0 
 344                 		cmp	AL,#0x0003
 345                 		bne	.L38
 191:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 346                 	 1 194 0
 347 004e 01 84       		add	AL,#0x0001
 348 004f 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 348      00 F4 
 349 0052 03 84       	.L45:
 350 0053 00 00 00 00 		.loc 1 197 0
 350      00 F0 
 351                 		ld	AL,#0x0000
 194:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 352                 	,#0x0001
 353 0056 01 34       	.L44:
 354 0057 00 00 00 25 		bsr	PioEnablePWM
 355                 		bra	.L42
 197:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 356                 	:
 357 0059 00 14       		.loc 1 204 0
 358 005a 01 10       		ld	AL,#0x0000
 359                 		st	AL,@g_app_hw_data+0x0002
 360 005b 00 00 00 00 		.loc 1 207 0
 360      00 9C 
 361 005e 00 00 00 00 		ld	AH,#0x0000
 361      00 E0 
 362                 		bsr	PioEnablePWM
 204:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 363                 	 209 0
 364 0061 00 14       		ld	X,#0x0000
 365 0062 00 00 00 25 		st	X,@g_app_hw_data+0x0001
 207:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 366                 	a	.L42
 367 0064 00 10       	.L27:
 368 0065 00 00 00 00 		.loc 1 217 0
 368      00 9C 
 209:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 369                 		AL,#0x000b
 370 0068 00 18       		bsr	ReportPanic
 371 0069 00 00 00 29 	.L42:
 372 006b 00 00 00 00 		ld	AH,#0x0001
 372      00 E0 
 373                 	.LVL12:
 217:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 374                 	L,#0x86a0
 375 006e 0B 14       	.LVL13:
 376 006f 00 00 00 00 	.L32:
 376      00 9C 
 377                 		.loc 1 225 0
 378 0072 01 10       		tst	@g_app_hw_data+0x0001
 379                 		beq	.L40
 380 0073 87 00 A0 14 		.loc 1 228 0
 381                 		ld	X,#0x0001
 382                 		st	X,@(0,Y)
 225:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 383                 	pBuzzerTimerHandler
 384 0075 00 00 00 99 		st	X,@(0x0001,Y)
 385 0077 00 00 00 00 		bsr	TimerCreate
 385      00 F4 
 228:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 386                 	L14:
 387 007a 01 18       		st	AL,@g_app_hw_data
 388 007b 00 2B       	.LVL15:
 389 007c 00 00 00 18 	.L40:
 390 007e 01 2B       		.loc 1 231 0
 391 007f 00 00 00 00 		leave	#0x0003
 391      00 9C 
 392                 	.LFE2:
 393 0082 00 00 00 25 		.size	appBuzzerTimerHandler, .-appBuzzerTimerHandler
 394                 		.equ	__size_of_appBuzzerTimerHandler,. - appBuzzerTimerHandler
 395                 		.section	.text.HrInitHardware,"ax",@progbits
 231:hr_sensor_hw.c **** }
 396                 	rInitHardware
 397 0084 03 0F       		.type	HrInitHardware, @function
 398                 	HrInitHardware:
 399                 	.LFB3:
 400                 		.loc 1 252 0
 401                 		enter	#0x0008
 402                 	.LCFI5:
 403                 		.loc 1 273 0
 404                 		ld	AL,#0x0001
 405                 		st	AL,@(0,Y)
 252:hr_sensor_hw.c **** {
 406                 	0000
 407 0000 08 0B       		ld	AL,#0x0200
 408                 		bsr	PioSetModes
 273:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 409                 	oc 1 274 0
 410 0001 01 14       		ld	AL,#0x0009
 411 0002 00 27       		ld	AH,#0x0000
 412 0003 00 10       		bsr	PioSetDir
 413 0004 02 00 00 14 		.loc 1 275 0
 414 0006 00 00 00 00 		ld	AL,#0x0007
 414      00 9C 
 274:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 415                 	,@(0,Y)
 416 0009 09 14       		ld	AH,#0x0000
 417 000a 00 10       		ld	AL,#0x0200
 418 000b 00 00 00 00 		bsr	PioSetPullModes
 418      00 9C 
 275:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 419                 	c 1 278 0
 420 000e 07 14       		ld	AL,#0x0001
 421 000f 00 27       		ld	AH,#0x0000
 422 0010 00 10       		bsr	PioEnableEdgeCapture
 423 0011 02 00 00 14 		.loc 1 281 0
 424 0013 00 00 00 00 		ld	AL,#0x0003
 424      00 9C 
 278:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 425                 	,@(0,Y)
 426 0016 01 14       		ld	AH,#0x0000
 427 0017 00 10       		ld	AL,#0x0200
 428 0018 00 00 00 00 		bsr	PioSetEventMask
 428      00 9C 
 281:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 429                 	c 1 286 0
 430 001b 03 14       		ld	AL,#0x0004
 431 001c 00 27       		st	AL,@(0,Y)
 432 001d 00 10       		ld	AH,#0x0000
 433 001e 02 00 00 14 		ld	AL,#0x0008
 434 0020 00 00 00 00 		bsr	PioSetModes
 434      00 9C 
 286:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 435                 	1 289 0
 436 0023 04 14       		ld	AL,#0x0002
 437 0024 00 27       		st	AL,@(0,Y)
 438 0025 00 10       		ld	AL,#0x000f
 439 0026 08 14       		st	AL,@(0x0001,Y)
 440 0027 00 00 00 00 		ld	AL,#0x0000
 440      00 9C 
 289:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 441                 	,@(0x0002,Y)
 442 002a 02 14       		ld	AL,#0x0002
 443 002b 00 27       		st	AL,@(0x0003,Y)
 444 002c 0F 14       		ld	AL,#0x000f
 445 002d 01 27       		st	AL,@(0x0004,Y)
 446 002e 00 14       		ld	AL,#0x0000
 447 002f 02 27       		st	AL,@(0x0005,Y)
 448 0030 02 14       		ld	AL,#0x00ff
 449 0031 03 27       		st	AL,@(0x0006,Y)
 450 0032 0F 14       		ld	AL,#0x0000
 451 0033 04 27       		ld	AH,#0x0000
 452 0034 00 14       		bsr	PioConfigPWM
 453 0035 05 27       		.loc 1 294 0
 454 0036 01 00 FF 14 		ld	AL,#0x0000
 455 0038 06 27       		ld	AH,#0x0000
 456 0039 00 14       		bsr	PioEnablePWM
 457 003a 00 10       		.loc 1 299 0
 458 003b 00 00 00 00 		ld	AL,#0x0005
 458      00 9C 
 294:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 459                 	Mode
 460 003e 00 14       		.loc 1 301 0
 461 003f 00 10       		bsr	HrInitSwitchHardware
 462 0040 00 00 00 00 		.loc 1 302 0
 462      00 9C 
 299:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 463                 	ve	#0x0008
 464 0043 05 14       	.LFE3:
 465 0044 00 00 00 00 		.size	HrInitHardware, .-HrInitHardware
 465      00 9C 
 301:hr_sensor_hw.c ****     HrInitSwitchHardware();
 466                 	lobal	__size_of_HrInitHardware
 467 0047 00 00 00 00 		.equ	__size_of_HrInitHardware,. - HrInitHardware
 467      00 9C 
 302:hr_sensor_hw.c **** }
 468                 	comm g_app_hw_data, 4, 1
 469 004a 08 0F       	
 470                 		.comm g_dimmer_data, 1, 1
 471                 	
 472                 		.section	.debug_frame,"",@progbits
 473                 	.Lframe0:
 474                 		.4byte	.LECIE0-.LSCIE0
 475                 	.LSCIE0:
 476                 		.4byte	0xffffffff
 477                 		.1byte	0x1
 478                 		.ascii "\000"
 479                 		.1byte	0x1
 480 0000 00 00 00 00 		.1byte	0x7f
 481                 		.1byte	0x3
 482 0002 FF FF FF FF 		.1byte	0xc
 483 0004 01          		.1byte	0x5
 484 0004 00          		.1byte	0x0
 485 0005 01          		.p2align	2
 486 0005 7F          	.LECIE0:
 487 0006 03          	.LSFDE0:
 488 0006 0C          		.4byte	.LEFDE0-.LASFDE0
 489 0007 05          	.LASFDE0:
 490 0007 00          		.4byte	.Lframe0
 491                 		.4byte	.LFB9
 492                 		.4byte	.LFE9-.LFB9
 493                 		.p2align	2
 494 0008 00 00 00 00 	.LEFDE0:
 495                 	.LSFDE2:
 496 000a 00 00 00 00 		.4byte	.LEFDE2-.LASFDE2
 497 000c 00 00 00 00 	.LASFDE2:
 498 000e 00 00 00 01 		.4byte	.Lframe0
 499                 		.4byte	.LFB10
 500                 		.4byte	.LFE10-.LFB10
 501                 		.p2align	2
 502 0010 00 00 00 00 	.LEFDE2:
 503                 	.LSFDE4:
 504 0012 00 00 00 00 		.4byte	.LEFDE4-.LASFDE4
 505 0014 00 00 00 00 	.LASFDE4:
 506 0016 00 00 00 00 		.4byte	.Lframe0
 507                 		.4byte	.LFB8
 508                 		.4byte	.LFE8-.LFB8
 509                 		.1byte	0x4
 510 0018 00 00 00 00 		.4byte	.LCFI0-.LFB8
 511                 		.1byte	0xe
 512 001a 00 00 00 00 		.1byte	0x2
 513 001c 00 00 00 00 		.1byte	0x83
 514 001e 00 00 00 00 		.1byte	0x1
 515 0020 41          		.p2align	2
 516                 	.LEFDE4:
 517 0020 0E          	.LSFDE6:
 518 0021 02          		.4byte	.LEFDE6-.LASFDE6
 519 0021 83          	.LASFDE6:
 520 0022 01          		.4byte	.Lframe0
 521 0022 00 00 00    		.4byte	.LFB4
 522                 		.4byte	.LFE4-.LFB4
 523                 		.1byte	0x4
 524 0024 00 00 00 00 		.4byte	.LCFI1-.LFB4
 525                 		.1byte	0xe
 526 0026 00 00 00 00 		.1byte	0x1
 527 0028 00 00 00 00 		.1byte	0x83
 528 002a 00 00 00 00 		.1byte	0x1
 529 002c 41          		.p2align	2
 530                 	.LEFDE6:
 531 002c 0E          	.LSFDE8:
 532 002d 01          		.4byte	.LEFDE8-.LASFDE8
 533 002d 83          	.LASFDE8:
 534 002e 01          		.4byte	.Lframe0
 535 002e 00 00 00    		.4byte	.LFB7
 536                 		.4byte	.LFE7-.LFB7
 537                 		.1byte	0x4
 538 0030 00 00 00 00 		.4byte	.LCFI2-.LFB7
 539                 		.1byte	0xe
 540 0032 00 00 00 00 		.1byte	0x6
 541 0034 00 00 00 00 		.1byte	0x83
 542 0036 00 00 00 00 		.1byte	0x1
 543 0038 41          		.p2align	2
 544                 	.LEFDE8:
 545 0038 0E          	.LSFDE10:
 546 0039 06          		.4byte	.LEFDE10-.LASFDE10
 547 0039 83          	.LASFDE10:
 548 003a 01          		.4byte	.Lframe0
 549 003a 00 00 00    		.4byte	.LFB6
 550                 		.4byte	.LFE6-.LFB6
 551                 		.p2align	2
 552 003c 00 00 00 00 	.LEFDE10:
 553                 	.LSFDE12:
 554 003e 00 00 00 00 		.4byte	.LEFDE12-.LASFDE12
 555 0040 00 00 00 00 	.LASFDE12:
 556 0042 00 00 00 00 		.4byte	.Lframe0
 557                 		.4byte	.LFB5
 558                 		.4byte	.LFE5-.LFB5
 559                 		.1byte	0x4
 560 0044 00 00 00 00 		.4byte	.LCFI3-.LFB5
 561                 		.1byte	0xe
 562 0046 00 00 00 00 		.1byte	0x6
 563 0048 00 00 00 00 		.1byte	0x83
 564 004a 00 00 00 00 		.1byte	0x1
 565 004c 41          		.p2align	2
 566                 	.LEFDE12:
 567 004c 0E          	.LSFDE14:
 568 004d 06          		.4byte	.LEFDE14-.LASFDE14
 569 004d 83          	.LASFDE14:
 570 004e 01          		.4byte	.Lframe0
 571 004e 00 00 00    		.4byte	.LFB2
 572                 		.4byte	.LFE2-.LFB2
 573                 		.1byte	0x4
 574 0050 00 00 00 00 		.4byte	.LCFI4-.LFB2
 575                 		.1byte	0xe
 576 0052 00 00 00 00 		.1byte	0x3
 577 0054 00 00 00 00 		.1byte	0x83
 578 0056 00 00 00 00 		.1byte	0x1
 579 0058 41          		.p2align	2
 580                 	.LEFDE14:
 581 0058 0E          	.LSFDE16:
 582 0059 03          		.4byte	.LEFDE16-.LASFDE16
 583 0059 83          	.LASFDE16:
 584 005a 01          		.4byte	.Lframe0
 585 005a 00 00 00    		.4byte	.LFB3
 586                 		.4byte	.LFE3-.LFB3
 587                 		.1byte	0x4
 588 005c 00 00 00 00 		.4byte	.LCFI5-.LFB3
 589                 		.1byte	0xe
 590 005e 00 00 00 00 		.1byte	0x8
 591 0060 00 00 00 00 		.1byte	0x83
 592 0062 00 00 00 00 		.1byte	0x1
 593 0064 41          		.p2align	2
 594                 	.LEFDE16:
 595 0064 0E          		.text
 596 0065 08          	.Letext0:
 597 0065 83          		.section	.debug_loc,"",@progbits
 598 0066 01          	.Ldebug_loc0:
 599 0066 00 00 00    	.LLST2:
 600                 		.4byte	.LVL0
 601                 		.4byte	.LVL1
 602                 		.2byte	0x6
 603                 		.1byte	0x50
 604                 		.1byte	0x93
 605                 		.1byte	0x2
 606 0000 00 00 00 00 		.1byte	0x51
 607 0002 00 00 00 00 		.1byte	0x93
 608 0004 00 06       		.1byte	0x2
 609 0005 50          		.4byte	0x0
 610 0005 93          		.4byte	0x0
 611 0006 02          	.LLST3:
 612 0006 51          		.4byte	.LFB8
 613 0007 93          		.4byte	.LCFI0
 614 0007 02          		.2byte	0x1
 615 0008 00 00 00 00 		.1byte	0x55
 616 000a 00 00 00 00 		.4byte	.LCFI0
 617                 		.4byte	.LFE8
 618 000c 00 00 00 00 		.2byte	0x2
 619 000e 00 00 00 00 		.1byte	0x75
 620 0010 00 01       		.1byte	0x2
 621 0011 55          		.4byte	0x0
 622 0011 00 00 00 00 		.4byte	0x0
 623 0013 00 00 00 00 	.LLST4:
 624 0015 00 02       		.4byte	.LFB4
 625 0016 75          		.4byte	.LCFI1
 626 0017 02          		.2byte	0x1
 627 0017 00 00 00 00 		.1byte	0x55
 628 0019 00 00 00 00 		.4byte	.LCFI1
 629                 		.4byte	.LFE4
 630 001b 00 00 00 00 		.2byte	0x2
 631 001d 00 00 00 00 		.1byte	0x75
 632 001f 00 01       		.1byte	0x1
 633 0020 55          		.4byte	0x0
 634 0021 00 00 00 00 		.4byte	0x0
 635 0023 00 00 00 00 	.LLST5:
 636 0025 00 02       		.4byte	.LFB7
 637 0026 75          		.4byte	.LCFI2
 638 0026 01          		.2byte	0x1
 639 0027 00 00 00 00 		.1byte	0x55
 640 0029 00 00 00 00 		.4byte	.LCFI2
 641                 		.4byte	.LFE7
 642 002b 00 00 00 00 		.2byte	0x2
 643 002d 00 00 00 00 		.1byte	0x75
 644 002f 00 01       		.1byte	0x6
 645 0030 55          		.4byte	0x0
 646 0030 00 00 00 00 		.4byte	0x0
 647 0032 00 00 00 00 	.LLST6:
 648 0034 00 02       		.4byte	.LVL2
 649 0035 75          		.4byte	.LVL4
 650 0036 06          		.2byte	0x6
 651 0036 00 00 00 00 		.1byte	0x50
 652 0038 00 00 00 00 		.1byte	0x93
 653                 		.1byte	0x2
 654 003a 00 00 00 00 		.1byte	0x51
 655 003c 00 00 00 00 		.1byte	0x93
 656 003e 00 06       		.1byte	0x2
 657 003f 50          		.4byte	0x0
 658 0040 93          		.4byte	0x0
 659 0040 02          	.LLST8:
 660 0041 51          		.4byte	.LFB5
 661 0041 93          		.4byte	.LCFI3
 662 0042 02          		.2byte	0x1
 663 0042 00 00 00 00 		.1byte	0x55
 664 0044 00 00 00 00 		.4byte	.LCFI3
 665                 		.4byte	.LFE5
 666 0046 00 00 00 00 		.2byte	0x2
 667 0048 00 00 00 00 		.1byte	0x75
 668 004a 00 01       		.1byte	0x6
 669 004b 55          		.4byte	0x0
 670 004c 00 00 00 00 		.4byte	0x0
 671 004e 00 00 00 00 	.LLST9:
 672 0050 00 02       		.4byte	.LVL5
 673 0051 75          		.4byte	.LVL6
 674 0051 06          		.2byte	0x1
 675 0052 00 00 00 00 		.1byte	0x51
 676 0054 00 00 00 00 		.4byte	.LVL6
 677                 		.4byte	.LFE5
 678 0056 00 00 00 00 		.2byte	0x2
 679 0058 00 00 00 00 		.1byte	0x76
 680 005a 00 01       		.1byte	0x2
 681 005b 51          		.4byte	0x0
 682 005b 00 00 00 00 		.4byte	0x0
 683 005d 00 00 00 00 	.LLST10:
 684 005f 00 02       		.4byte	.LFB2
 685 0060 76          		.4byte	.LCFI4
 686 0061 02          		.2byte	0x1
 687 0061 00 00 00 00 		.1byte	0x55
 688 0063 00 00 00 00 		.4byte	.LCFI4
 689                 		.4byte	.LFE2
 690 0065 00 00 00 00 		.2byte	0x2
 691 0067 00 00 00 00 		.1byte	0x75
 692 0069 00 01       		.1byte	0x3
 693 006a 55          		.4byte	0x0
 694 006b 00 00 00 00 		.4byte	0x0
 695 006d 00 00 00 00 	.LLST11:
 696 006f 00 02       		.4byte	.LVL7
 697 0070 75          		.4byte	.LVL8
 698 0070 03          		.2byte	0x1
 699 0071 00 00 00 00 		.1byte	0x51
 700 0073 00 00 00 00 		.4byte	0x0
 701                 		.4byte	0x0
 702 0075 00 00 00 00 	.LLST12:
 703 0077 00 00 00 00 		.4byte	.LVL10
 704 0079 00 01       		.4byte	.LVL11
 705 007a 51          		.2byte	0x6
 706 007a 00 00 00 00 		.1byte	0x50
 707 007c 00 00 00 00 		.1byte	0x93
 708                 		.1byte	0x2
 709 007e 00 00 00 00 		.1byte	0x51
 710 0080 00 00 00 00 		.1byte	0x93
 711 0082 00 06       		.1byte	0x2
 712 0083 50          		.4byte	.LVL13
 713 0084 93          		.4byte	.LVL14
 714 0084 02          		.2byte	0x6
 715 0085 51          		.1byte	0x50
 716 0085 93          		.1byte	0x93
 717 0086 02          		.1byte	0x2
 718 0086 00 00 00 00 		.1byte	0x51
 719 0088 00 00 00 00 		.1byte	0x93
 720 008a 00 06       		.1byte	0x2
 721 008b 50          		.4byte	.LVL15
 722 008c 93          		.4byte	.LFE2
 723 008c 02          		.2byte	0x6
 724 008d 51          		.1byte	0x50
 725 008d 93          		.1byte	0x93
 726 008e 02          		.1byte	0x2
 727 008e 00 00 00 00 		.1byte	0x51
 728 0090 00 00 00 00 		.1byte	0x93
 729 0092 00 06       		.1byte	0x2
 730 0093 50          		.4byte	0x0
 731 0094 93          		.4byte	0x0
 732 0094 02          	.LLST13:
 733 0095 51          		.4byte	.LFB3
 734 0095 93          		.4byte	.LCFI5
 735 0096 02          		.2byte	0x1
 736 0096 00 00 00 00 		.1byte	0x55
 737 0098 00 00 00 00 		.4byte	.LCFI5
 738                 		.4byte	.LFE3
 739 009a 00 00 00 00 		.2byte	0x2
 740 009c 00 00 00 00 		.1byte	0x75
 741 009e 00 01       		.1byte	0x8
 742 009f 55          		.4byte	0x0
 743 00a0 00 00 00 00 		.4byte	0x0
 744 00a2 00 00 00 00 		.file 2 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/types.h"
 745 00a4 00 02       		.file 3 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/pio.h"
 746 00a5 75          		.file 4 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/timer.h"
 747 00a5 08          		.file 5 "hr_sensor_hw.h"
 748 00a6 00 00 00 00 		.file 6 "app_gatt.h"
 749 00a8 00 00 00 00 		.section	.debug_info
 750                 		.4byte	0x41c
 751                 		.2byte	0x2
 752                 		.4byte	.Ldebug_abbrev0
 753                 		.1byte	0x4
 754                 		.1byte	0x1
 755                 		.4byte	.LASF93
 756 0000 00 00 04 1C 		.1byte	0x1
 757 0002 00 02       		.4byte	.LASF94
 758 0003 00 00 00 00 		.4byte	.LASF95
 759 0005 04          		.4byte	0x0
 760 0005 01          		.4byte	0x0
 761 0006 00 00 00 00 		.4byte	.Ldebug_ranges0+0x0
 762 0008 01          		.4byte	.Ldebug_line0
 763 0008 00 00 00 00 		.1byte	0x2
 764 000a 00 00 00 00 		.1byte	0x2
 765 000c 00 00 00 00 		.1byte	0x8
 766 000e 00 00 00 00 		.4byte	.LASF0
 767 0010 00 00 00 00 		.1byte	0x3
 768 0012 00 00 00 00 		.4byte	.LASF2
 769 0014 02          		.1byte	0x2
 770 0015 02          		.1byte	0x1f
 771 0015 08          		.4byte	0x3b
 772 0016 00 00 00 00 		.1byte	0x2
 773 0018 03          		.1byte	0x2
 774 0018 00 00 00 00 		.1byte	0x7
 775 001a 02          		.4byte	.LASF1
 776 001b 1F          		.1byte	0x3
 777 001b 00 00 00 3B 		.4byte	.LASF3
 778 001d 02          		.1byte	0x2
 779 001e 02          		.1byte	0x20
 780 001e 07          		.4byte	0x4d
 781 001f 00 00 00 00 		.1byte	0x2
 782 0021 03          		.1byte	0x4
 783 0021 00 00 00 00 		.1byte	0x7
 784 0023 02          		.4byte	.LASF4
 785 0024 20          		.1byte	0x2
 786 0024 00 00 00 4D 		.1byte	0x2
 787 0026 02          		.1byte	0x6
 788 0027 04          		.4byte	.LASF5
 789 0027 07          		.1byte	0x2
 790 0028 00 00 00 00 		.1byte	0x2
 791 002a 02          		.1byte	0x5
 792 002a 02          		.4byte	.LASF6
 793 002b 06          		.1byte	0x2
 794 002b 00 00 00 00 		.1byte	0x4
 795 002d 02          		.1byte	0x5
 796 002e 02          		.4byte	.LASF7
 797 002e 05          		.1byte	0x2
 798 002f 00 00 00 00 		.1byte	0x2
 799 0031 02          		.1byte	0x7
 800 0031 04          		.4byte	.LASF8
 801 0032 05          		.1byte	0x4
 802 0032 00 00 00 00 		.1byte	0x2
 803 0034 02          		.1byte	0x3
 804 0035 02          		.1byte	0x1b
 805 0035 07          		.4byte	0x10f
 806 0036 00 00 00 00 		.1byte	0x5
 807 0038 04          		.4byte	.LASF9
 808 0038 02          		.1byte	0x0
 809 0039 03          		.1byte	0x5
 810 0039 1B          		.4byte	.LASF10
 811 003a 00 00 01 0F 		.1byte	0x1
 812 003c 05          		.1byte	0x5
 813 003c 00 00 00 00 		.4byte	.LASF11
 814 003e 00          		.1byte	0x3
 815 003f 05          		.1byte	0x5
 816 003f 00 00 00 00 		.4byte	.LASF12
 817 0041 01          		.1byte	0x4
 818 0042 05          		.1byte	0x5
 819 0042 00 00 00 00 		.4byte	.LASF13
 820 0044 03          		.1byte	0x5
 821 0045 05          		.1byte	0x5
 822 0045 00 00 00 00 		.4byte	.LASF14
 823 0047 04          		.1byte	0x6
 824 0048 05          		.1byte	0x5
 825 0048 00 00 00 00 		.4byte	.LASF15
 826 004a 05          		.1byte	0x7
 827 004b 05          		.1byte	0x5
 828 004b 00 00 00 00 		.4byte	.LASF16
 829 004d 06          		.1byte	0x8
 830 004e 05          		.1byte	0x5
 831 004e 00 00 00 00 		.4byte	.LASF17
 832 0050 07          		.1byte	0x9
 833 0051 05          		.1byte	0x5
 834 0051 00 00 00 00 		.4byte	.LASF18
 835 0053 08          		.1byte	0xa
 836 0054 05          		.1byte	0x5
 837 0054 00 00 00 00 		.4byte	.LASF19
 838 0056 09          		.1byte	0xb
 839 0057 05          		.1byte	0x5
 840 0057 00 00 00 00 		.4byte	.LASF20
 841 0059 0A          		.1byte	0xc
 842 005a 05          		.1byte	0x5
 843 005a 00 00 00 00 		.4byte	.LASF21
 844 005c 0B          		.1byte	0xd
 845 005d 05          		.1byte	0x5
 846 005d 00 00 00 00 		.4byte	.LASF22
 847 005f 0C          		.1byte	0xe
 848 0060 05          		.1byte	0x5
 849 0060 00 00 00 00 		.4byte	.LASF23
 850 0062 0D          		.1byte	0xf
 851 0063 05          		.1byte	0x5
 852 0063 00 00 00 00 		.4byte	.LASF24
 853 0065 0E          		.1byte	0x10
 854 0066 05          		.1byte	0x5
 855 0066 00 00 00 00 		.4byte	.LASF25
 856 0068 0F          		.1byte	0x11
 857 0069 05          		.1byte	0x5
 858 0069 00 00 00 00 		.4byte	.LASF26
 859 006b 10          		.1byte	0x12
 860 006c 05          		.1byte	0x5
 861 006c 00 00 00 00 		.4byte	.LASF27
 862 006e 11          		.1byte	0x13
 863 006f 05          		.1byte	0x5
 864 006f 00 00 00 00 		.4byte	.LASF28
 865 0071 12          		.1byte	0x14
 866 0072 05          		.1byte	0x5
 867 0072 00 00 00 00 		.4byte	.LASF29
 868 0074 13          		.1byte	0x15
 869 0075 05          		.1byte	0x5
 870 0075 00 00 00 00 		.4byte	.LASF30
 871 0077 14          		.1byte	0x16
 872 0078 05          		.1byte	0x5
 873 0078 00 00 00 00 		.4byte	.LASF31
 874 007a 15          		.1byte	0x17
 875 007b 05          		.1byte	0x5
 876 007b 00 00 00 00 		.4byte	.LASF32
 877 007d 16          		.1byte	0x18
 878 007e 05          		.1byte	0x5
 879 007e 00 00 00 00 		.4byte	.LASF33
 880 0080 17          		.1byte	0x19
 881 0081 05          		.1byte	0x0
 882 0081 00 00 00 00 		.1byte	0x4
 883 0083 18          		.1byte	0x2
 884 0084 05          		.1byte	0x3
 885 0084 00 00 00 00 		.1byte	0x90
 886 0086 19          		.4byte	0x142
 887 0087 00          		.1byte	0x5
 888 0087 04          		.4byte	.LASF34
 889 0088 02          		.1byte	0x0
 890 0088 03          		.1byte	0x5
 891 0089 90          		.4byte	.LASF35
 892 0089 00 00 01 42 		.1byte	0x1
 893 008b 05          		.1byte	0x5
 894 008c 00 00 00 00 		.4byte	.LASF36
 895 008e 00          		.1byte	0x3
 896 008e 05          		.1byte	0x5
 897 008f 00 00 00 00 		.4byte	.LASF37
 898 0091 01          		.1byte	0x5
 899 0091 05          		.1byte	0x5
 900 0092 00 00 00 00 		.4byte	.LASF38
 901 0094 03          		.1byte	0x7
 902 0094 05          		.1byte	0x5
 903 0095 00 00 00 00 		.4byte	.LASF39
 904 0097 05          		.1byte	0x9
 905 0097 05          		.1byte	0x5
 906 0098 00 00 00 00 		.4byte	.LASF40
 907 009a 07          		.1byte	0xd
 908 009a 05          		.1byte	0x0
 909 009b 00 00 00 00 		.1byte	0x4
 910 009d 09          		.1byte	0x2
 911 009d 05          		.1byte	0x3
 912 009e 00 00 00 00 		.1byte	0xa7
 913 00a0 0D          		.4byte	0x175
 914 00a0 00          		.1byte	0x5
 915 00a1 04          		.4byte	.LASF41
 916 00a1 02          		.1byte	0x0
 917 00a2 03          		.1byte	0x5
 918 00a2 A7          		.4byte	.LASF42
 919 00a3 00 00 01 75 		.1byte	0x1
 920 00a5 05          		.1byte	0x5
 921 00a5 00 00 00 00 		.4byte	.LASF43
 922 00a7 00          		.1byte	0x3
 923 00a8 05          		.1byte	0x5
 924 00a8 00 00 00 00 		.4byte	.LASF44
 925 00aa 01          		.1byte	0x5
 926 00ab 05          		.1byte	0x5
 927 00ab 00 00 00 00 		.4byte	.LASF45
 928 00ad 03          		.1byte	0x7
 929 00ae 05          		.1byte	0x5
 930 00ae 00 00 00 00 		.4byte	.LASF46
 931 00b0 05          		.1byte	0x9
 932 00b1 05          		.1byte	0x5
 933 00b1 00 00 00 00 		.4byte	.LASF47
 934 00b3 07          		.1byte	0xd
 935 00b4 05          		.1byte	0x0
 936 00b4 00 00 00 00 		.1byte	0x4
 937 00b6 09          		.1byte	0x2
 938 00b7 05          		.1byte	0x3
 939 00b7 00 00 00 00 		.1byte	0xb9
 940 00b9 0D          		.4byte	0x196
 941 00ba 00          		.1byte	0x5
 942 00ba 04          		.4byte	.LASF48
 943 00bb 02          		.1byte	0x0
 944 00bb 03          		.1byte	0x5
 945 00bc B9          		.4byte	.LASF49
 946 00bc 00 00 01 96 		.1byte	0x1
 947 00be 05          		.1byte	0x5
 948 00bf 00 00 00 00 		.4byte	.LASF50
 949 00c1 00          		.1byte	0x2
 950 00c1 05          		.1byte	0x5
 951 00c2 00 00 00 00 		.4byte	.LASF51
 952 00c4 01          		.1byte	0x3
 953 00c4 05          		.1byte	0x0
 954 00c5 00 00 00 00 		.1byte	0x6
 955 00c7 02          		.1byte	0x2
 956 00c7 05          		.1byte	0x3
 957 00c8 00 00 00 00 		.2byte	0x1a3
 958 00ca 03          		.4byte	0x1b8
 959 00ca 00          		.1byte	0x5
 960 00cb 06          		.4byte	.LASF52
 961 00cb 02          		.1byte	0x0
 962 00cc 03          		.1byte	0x5
 963 00cc 01 A3       		.4byte	.LASF53
 964 00cd 00 00 01 B8 		.1byte	0x1
 965 00cf 05          		.1byte	0x5
 966 00d0 00 00 00 00 		.4byte	.LASF54
 967 00d2 00          		.1byte	0x2
 968 00d2 05          		.1byte	0x5
 969 00d3 00 00 00 00 		.4byte	.LASF55
 970 00d5 01          		.1byte	0x3
 971 00d5 05          		.1byte	0x0
 972 00d6 00 00 00 00 		.1byte	0x7
 973 00d8 02          		.1byte	0x2
 974 00d8 05          		.1byte	0x7
 975 00d9 00 00 00 00 		.1byte	0x3
 976 00db 03          		.4byte	.LASF56
 977 00db 00          		.1byte	0x4
 978 00dc 07          		.1byte	0x1f
 979 00dc 02          		.4byte	0x30
 980 00dd 07          		.1byte	0x4
 981 00dd 03          		.1byte	0x2
 982 00de 00 00 00 00 		.1byte	0x5
 983 00e0 04          		.1byte	0x29
 984 00e0 1F          		.4byte	0x1ed
 985 00e1 00 00 00 30 		.1byte	0x5
 986 00e3 04          		.4byte	.LASF57
 987 00e3 02          		.1byte	0x0
 988 00e4 05          		.1byte	0x5
 989 00e4 29          		.4byte	.LASF58
 990 00e5 00 00 01 ED 		.1byte	0x1
 991 00e7 05          		.1byte	0x5
 992 00e7 00 00 00 00 		.4byte	.LASF59
 993 00e9 00          		.1byte	0x2
 994 00ea 05          		.1byte	0x5
 995 00ea 00 00 00 00 		.4byte	.LASF60
 996 00ec 01          		.1byte	0x3
 997 00ed 05          		.1byte	0x5
 998 00ed 00 00 00 00 		.4byte	.LASF61
 999 00ef 02          		.1byte	0x4
 1000 00f0 05          		.1byte	0x0
 1001 00f0 00 00 00 00 		.1byte	0x3
 1002 00f2 03          		.4byte	.LASF62
 1003 00f3 05          		.1byte	0x5
 1004 00f3 00 00 00 00 		.1byte	0x39
 1005 00f5 04          		.4byte	0x1c6
 1006 00f6 00          		.1byte	0x8
 1007 00f6 03          		.1byte	0x8
 1008 00f7 00 00 00 00 		.1byte	0x5
 1009 00f9 05          		.1byte	0x3c
 1010 00f9 39          		.4byte	0x239
 1011 00fa 00 00 01 C6 		.1byte	0x9
 1012 00fc 08          		.4byte	.LASF63
 1013 00fc 08          		.1byte	0x5
 1014 00fd 05          		.1byte	0x40
 1015 00fd 3C          		.4byte	0x1bb
 1016 00fe 00 00 02 39 		.1byte	0x2
 1017 0100 09          		.1byte	0x23
 1018 0100 00 00 00 00 		.1byte	0x0
 1019 0102 05          		.1byte	0x9
 1020 0103 40          		.4byte	.LASF64
 1021 0103 00 00 01 BB 		.1byte	0x5
 1022 0105 02          		.1byte	0x43
 1023 0106 23          		.4byte	0x1ed
 1024 0106 00          		.1byte	0x2
 1025 0107 09          		.1byte	0x23
 1026 0107 00 00 00 00 		.1byte	0x1
 1027 0109 05          		.1byte	0x9
 1028 010a 43          		.4byte	.LASF65
 1029 010a 00 00 01 ED 		.1byte	0x5
 1030 010c 02          		.1byte	0x49
 1031 010d 23          		.4byte	0x30
 1032 010d 01          		.1byte	0x2
 1033 010e 09          		.1byte	0x23
 1034 010e 00 00 00 00 		.1byte	0x2
 1035 0110 05          		.1byte	0x9
 1036 0111 49          		.4byte	.LASF66
 1037 0111 00 00 00 30 		.1byte	0x5
 1038 0113 02          		.1byte	0x4d
 1039 0114 23          		.4byte	0x1bb
 1040 0114 02          		.1byte	0x2
 1041 0115 09          		.1byte	0x23
 1042 0115 00 00 00 00 		.1byte	0x3
 1043 0117 05          		.1byte	0x0
 1044 0118 4D          		.1byte	0x3
 1045 0118 00 00 01 BB 		.4byte	.LASF67
 1046 011a 02          		.1byte	0x5
 1047 011b 23          		.1byte	0x4f
 1048 011b 03          		.4byte	0x1f8
 1049 011c 00          		.1byte	0x8
 1050 011c 03          		.1byte	0x2
 1051 011d 00 00 00 00 		.1byte	0x5
 1052 011f 05          		.1byte	0x52
 1053 011f 4F          		.4byte	0x25b
 1054 0120 00 00 01 F8 		.1byte	0x9
 1055 0122 08          		.4byte	.LASF68
 1056 0122 02          		.1byte	0x5
 1057 0123 05          		.1byte	0x53
 1058 0123 52          		.4byte	0x30
 1059 0124 00 00 02 5B 		.1byte	0x2
 1060 0126 09          		.1byte	0x23
 1061 0126 00 00 00 00 		.1byte	0x0
 1062 0128 05          		.1byte	0x0
 1063 0129 53          		.1byte	0x3
 1064 0129 00 00 00 30 		.4byte	.LASF69
 1065 012b 02          		.1byte	0x5
 1066 012c 23          		.1byte	0x54
 1067 012c 00          		.4byte	0x244
 1068 012d 00          		.1byte	0x4
 1069 012d 03          		.1byte	0x2
 1070 012e 00 00 00 00 		.1byte	0x6
 1071 0130 05          		.1byte	0x46
 1072 0130 54          		.4byte	0x2b7
 1073 0131 00 00 02 44 		.1byte	0x5
 1074 0133 04          		.4byte	.LASF70
 1075 0133 02          		.1byte	0x0
 1076 0134 06          		.1byte	0x5
 1077 0134 46          		.4byte	.LASF71
 1078 0135 00 00 02 B7 		.1byte	0x1
 1079 0137 05          		.1byte	0x5
 1080 0137 00 00 00 00 		.4byte	.LASF72
 1081 0139 00          		.1byte	0x2
 1082 013a 05          		.1byte	0x5
 1083 013a 00 00 00 00 		.4byte	.LASF73
 1084 013c 01          		.1byte	0x3
 1085 013d 05          		.1byte	0x5
 1086 013d 00 00 00 00 		.4byte	.LASF74
 1087 013f 02          		.1byte	0x4
 1088 0140 05          		.1byte	0x5
 1089 0140 00 00 00 00 		.4byte	.LASF75
 1090 0142 03          		.1byte	0x5
 1091 0143 05          		.1byte	0x5
 1092 0143 00 00 00 00 		.4byte	.LASF76
 1093 0145 04          		.1byte	0x6
 1094 0146 05          		.1byte	0x5
 1095 0146 00 00 00 00 		.4byte	.LASF77
 1096 0148 05          		.1byte	0x7
 1097 0149 05          		.1byte	0x5
 1098 0149 00 00 00 00 		.4byte	.LASF78
 1099 014b 06          		.1byte	0x8
 1100 014c 05          		.1byte	0x5
 1101 014c 00 00 00 00 		.4byte	.LASF79
 1102 014e 07          		.1byte	0x9
 1103 014f 05          		.1byte	0x5
 1104 014f 00 00 00 00 		.4byte	.LASF80
 1105 0151 08          		.1byte	0xa
 1106 0152 05          		.1byte	0x5
 1107 0152 00 00 00 00 		.4byte	.LASF81
 1108 0154 09          		.1byte	0xb
 1109 0155 05          		.1byte	0x0
 1110 0155 00 00 00 00 		.1byte	0xa
 1111 0157 0A          		.1byte	0x1
 1112 0158 05          		.4byte	.LASF82
 1113 0158 00 00 00 00 		.1byte	0x1
 1114 015a 0B          		.2byte	0x221
 1115 015b 00          		.1byte	0x1
 1116 015b 0A          		.4byte	.LFB9
 1117 015c 01          		.4byte	.LFE9
 1118 015c 00 00 00 00 		.1byte	0x1
 1119 015e 01          		.1byte	0x55
 1120 015f 02 21       		.1byte	0xb
 1121 0160 01          		.1byte	0x1
 1122 0160 00 00 00 00 		.4byte	.LASF85
 1123 0162 00 00 00 00 		.1byte	0x1
 1124 0164 01          		.2byte	0x232
 1125 0165 55          		.1byte	0x1
 1126 0165 0B          		.4byte	.LFB10
 1127 0166 01          		.4byte	.LFE10
 1128 0166 00 00 00 00 		.1byte	0x1
 1129 0168 01          		.1byte	0x55
 1130 0169 02 32       		.4byte	0x2f4
 1131 016a 01          		.1byte	0xc
 1132 016a 00 00 00 00 		.4byte	.LASF87
 1133 016c 00 00 00 00 		.1byte	0x1
 1134 016e 01          		.2byte	0x231
 1135 016f 55          		.4byte	0x42
 1136 016f 00 00 02 F4 		.4byte	.LLST2
 1137 0171 0C          		.1byte	0x0
 1138 0172 00 00 00 00 		.1byte	0xd
 1139 0174 01          		.1byte	0x1
 1140 0174 02 31       		.4byte	.LASF83
 1141 0175 00 00 00 42 		.1byte	0x1
 1142 0177 00 00 00 00 		.2byte	0x208
 1143 0179 00          		.1byte	0x1
 1144 017a 0D          		.4byte	.LFB8
 1145 017a 01          		.4byte	.LFE8
 1146 017b 00 00 00 00 		.4byte	.LLST3
 1147 017d 01          		.1byte	0xd
 1148 017d 02 08       		.1byte	0x1
 1149 017e 01          		.4byte	.LASF84
 1150 017f 00 00 00 00 		.1byte	0x1
 1151 0181 00 00 00 00 		.2byte	0x13e
 1152 0183 00 00 00 00 		.1byte	0x1
 1153 0185 0D          		.4byte	.LFB4
 1154 0185 01          		.4byte	.LFE4
 1155 0186 00 00 00 00 		.4byte	.LLST4
 1156 0188 01          		.1byte	0xe
 1157 0188 01 3E       		.1byte	0x1
 1158 0189 01          		.4byte	.LASF86
 1159 018a 00 00 00 00 		.1byte	0x1
 1160 018c 00 00 00 00 		.2byte	0x1c2
 1161 018e 00 00 00 00 		.1byte	0x1
 1162 0190 0E          		.4byte	.LFB7
 1163 0190 01          		.4byte	.LFE7
 1164 0191 00 00 00 00 		.4byte	.LLST5
 1165 0193 01          		.4byte	0x357
 1166 0193 01 C2       		.1byte	0xc
 1167 0194 01          		.4byte	.LASF87
 1168 0195 00 00 00 00 		.1byte	0x1
 1169 0197 00 00 00 00 		.2byte	0x1c1
 1170 0199 00 00 00 00 		.4byte	0x42
 1171 019b 00 00 03 57 		.4byte	.LLST6
 1172 019d 0C          		.1byte	0xf
 1173 019d 00 00 00 00 		.4byte	.LASF96
 1174 019f 01          		.1byte	0x1
 1175 01a0 01 C1       		.2byte	0x1c4
 1176 01a1 00 00 00 42 		.4byte	0x42
 1177 01a3 00 00 00 00 		.1byte	0x0
 1178 01a5 0F          		.1byte	0x10
 1179 01a5 00 00 00 00 		.1byte	0x1
 1180 01a7 01          		.4byte	.LASF97
 1181 01a8 01 C4       		.1byte	0x1
 1182 01a9 00 00 00 42 		.2byte	0x1a9
 1183 01ab 00          		.1byte	0x1
 1184 01ab 10          		.4byte	0x42
 1185 01ac 01          		.4byte	.LFB6
 1186 01ac 00 00 00 00 		.4byte	.LFE6
 1187 01ae 01          		.1byte	0x1
 1188 01af 01 A9       		.1byte	0x55
 1189 01b0 01          		.1byte	0xe
 1190 01b0 00 00 00 42 		.1byte	0x1
 1191 01b2 00 00 00 00 		.4byte	.LASF88
 1192 01b4 00 00 00 00 		.1byte	0x1
 1193 01b6 01          		.2byte	0x156
 1194 01b7 55          		.1byte	0x1
 1195 01b7 0E          		.4byte	.LFB5
 1196 01b8 01          		.4byte	.LFE5
 1197 01b8 00 00 00 00 		.4byte	.LLST8
 1198 01ba 01          		.4byte	0x3af
 1199 01bb 01 56       		.1byte	0xc
 1200 01bc 01          		.4byte	.LASF64
 1201 01bc 00 00 00 00 		.1byte	0x1
 1202 01be 00 00 00 00 		.2byte	0x155
 1203 01c0 00 00 00 00 		.4byte	0x1ed
 1204 01c2 00 00 03 AF 		.4byte	.LLST9
 1205 01c4 0C          		.1byte	0x11
 1206 01c5 00 00 00 00 		.4byte	.LASF89
 1207 01c7 01          		.1byte	0x1
 1208 01c7 01 55       		.2byte	0x158
 1209 01c8 00 00 01 ED 		.4byte	0x42
 1210 01ca 00 00 00 00 		.1byte	0x8
 1211 01cc 11          		.1byte	0x76
 1212 01cd 00 00 00 00 		.1byte	0x3
 1213 01cf 01          		.1byte	0x93
 1214 01cf 01 58       		.1byte	0x1
 1215 01d0 00 00 00 42 		.1byte	0x76
 1216 01d2 08          		.1byte	0x4
 1217 01d3 76          		.1byte	0x93
 1218 01d3 03          		.1byte	0x1
 1219 01d4 93          		.1byte	0x0
 1220 01d4 01          		.1byte	0x12
 1221 01d5 76          		.4byte	.LASF98
 1222 01d5 04          		.1byte	0x1
 1223 01d6 93          		.1byte	0x7e
 1224 01d6 01          		.1byte	0x1
 1225 01d7 00          		.4byte	.LFB2
 1226 01d7 12          		.4byte	.LFE2
 1227 01d8 00 00 00 00 		.4byte	.LLST10
 1228 01da 01          		.4byte	0x3e6
 1229 01da 7E          		.1byte	0x13
 1230 01db 01          		.ascii "tid\000"
 1231 01db 00 00 00 00 		.1byte	0x1
 1232 01dd 00 00 00 00 		.1byte	0x7d
 1233 01df 00 00 00 00 		.4byte	0x1bb
 1234 01e1 00 00 03 E6 		.4byte	.LLST11
 1235 01e3 13          		.1byte	0x14
 1236 01e4 74 69 64 00 		.4byte	.LASF89
 1237 01e6 01          		.1byte	0x1
 1238 01e6 7D          		.1byte	0x7f
 1239 01e7 00 00 01 BB 		.4byte	0x42
 1240 01e9 00 00 00 00 		.4byte	.LLST12
 1241 01eb 14          		.1byte	0x0
 1242 01eb 00 00 00 00 		.1byte	0x15
 1243 01ed 01          		.1byte	0x1
 1244 01ee 7F          		.4byte	.LASF90
 1245 01ee 00 00 00 42 		.1byte	0x1
 1246 01f0 00 00 00 00 		.1byte	0xfc
 1247 01f2 00          		.1byte	0x1
 1248 01f3 15          		.4byte	.LFB3
 1249 01f3 01          		.4byte	.LFE3
 1250 01f4 00 00 00 00 		.4byte	.LLST13
 1251 01f6 01          		.1byte	0x16
 1252 01f6 FC          		.4byte	.LASF91
 1253 01f7 01          		.1byte	0x1
 1254 01f7 00 00 00 00 		.1byte	0x66
 1255 01f9 00 00 00 00 		.4byte	0x239
 1256 01fb 00 00 00 00 		.1byte	0x1
 1257 01fd 16          		.1byte	0x5
 1258 01fe 00 00 00 00 		.1byte	0x3
 1259 0200 01          		.4byte	g_app_hw_data
 1260 0200 66          		.1byte	0x16
 1261 0201 00 00 02 39 		.4byte	.LASF92
 1262 0203 01          		.1byte	0x1
 1263 0203 05          		.1byte	0x69
 1264 0204 03          		.4byte	0x25b
 1265 0204 00 00 00 00 		.1byte	0x1
 1266 0206 16          		.1byte	0x5
 1267 0207 00 00 00 00 		.1byte	0x3
 1268 0209 01          		.4byte	g_dimmer_data
 1269 0209 69          		.1byte	0x0
 1270 020a 00 00 02 5B 		.section	.debug_abbrev
 1271 020c 01          		.1byte	0x1
 1272 020c 05          		.1byte	0x11
 1273 020d 03          		.1byte	0x1
 1274 020d 00 00 00 00 		.1byte	0x25
 1275 020f 00          		.1byte	0xe
 1276                 		.1byte	0x13
 1277 0000 01          		.1byte	0xb
 1278 0000 11          		.1byte	0x3
 1279 0001 01          		.1byte	0xe
 1280 0001 25          		.1byte	0x1b
 1281 0002 0E          		.1byte	0xe
 1282 0002 13          		.1byte	0x11
 1283 0003 0B          		.1byte	0x1
 1284 0003 03          		.1byte	0x52
 1285 0004 0E          		.1byte	0x1
 1286 0004 1B          		.1byte	0x55
 1287 0005 0E          		.1byte	0x6
 1288 0005 11          		.1byte	0x10
 1289 0006 01          		.1byte	0x6
 1290 0006 52          		.1byte	0x0
 1291 0007 01          		.1byte	0x0
 1292 0007 55          		.1byte	0x2
 1293 0008 06          		.1byte	0x24
 1294 0008 10          		.1byte	0x0
 1295 0009 06          		.1byte	0xb
 1296 0009 00          		.1byte	0xb
 1297 000a 00          		.1byte	0x3e
 1298 000a 02          		.1byte	0xb
 1299 000b 24          		.1byte	0x3
 1300 000b 00          		.1byte	0xe
 1301 000c 0B          		.1byte	0x0
 1302 000c 0B          		.1byte	0x0
 1303 000d 3E          		.1byte	0x3
 1304 000d 0B          		.1byte	0x16
 1305 000e 03          		.1byte	0x0
 1306 000e 0E          		.1byte	0x3
 1307 000f 00          		.1byte	0xe
 1308 000f 00          		.1byte	0x3a
 1309 0010 03          		.1byte	0xb
 1310 0010 16          		.1byte	0x3b
 1311 0011 00          		.1byte	0xb
 1312 0011 03          		.1byte	0x49
 1313 0012 0E          		.1byte	0x13
 1314 0012 3A          		.1byte	0x0
 1315 0013 0B          		.1byte	0x0
 1316 0013 3B          		.1byte	0x4
 1317 0014 0B          		.1byte	0x4
 1318 0014 49          		.1byte	0x1
 1319 0015 13          		.1byte	0xb
 1320 0015 00          		.1byte	0xb
 1321 0016 00          		.1byte	0x3a
 1322 0016 04          		.1byte	0xb
 1323 0017 04          		.1byte	0x3b
 1324 0017 01          		.1byte	0xb
 1325 0018 0B          		.1byte	0x1
 1326 0018 0B          		.1byte	0x13
 1327 0019 3A          		.1byte	0x0
 1328 0019 0B          		.1byte	0x0
 1329 001a 3B          		.1byte	0x5
 1330 001a 0B          		.1byte	0x28
 1331 001b 01          		.1byte	0x0
 1332 001b 13          		.1byte	0x3
 1333 001c 00          		.1byte	0xe
 1334 001c 00          		.1byte	0x1c
 1335 001d 05          		.1byte	0xd
 1336 001d 28          		.1byte	0x0
 1337 001e 00          		.1byte	0x0
 1338 001e 03          		.1byte	0x6
 1339 001f 0E          		.1byte	0x4
 1340 001f 1C          		.1byte	0x1
 1341 0020 0D          		.1byte	0xb
 1342 0020 00          		.1byte	0xb
 1343 0021 00          		.1byte	0x3a
 1344 0021 06          		.1byte	0xb
 1345 0022 04          		.1byte	0x3b
 1346 0022 01          		.1byte	0x5
 1347 0023 0B          		.1byte	0x1
 1348 0023 0B          		.1byte	0x13
 1349 0024 3A          		.1byte	0x0
 1350 0024 0B          		.1byte	0x0
 1351 0025 3B          		.1byte	0x7
 1352 0025 05          		.1byte	0x24
 1353 0026 01          		.1byte	0x0
 1354 0026 13          		.1byte	0xb
 1355 0027 00          		.1byte	0xb
 1356 0027 00          		.1byte	0x3e
 1357 0028 07          		.1byte	0xb
 1358 0028 24          		.1byte	0x0
 1359 0029 00          		.1byte	0x0
 1360 0029 0B          		.1byte	0x8
 1361 002a 0B          		.1byte	0x13
 1362 002a 3E          		.1byte	0x1
 1363 002b 0B          		.1byte	0xb
 1364 002b 00          		.1byte	0xb
 1365 002c 00          		.1byte	0x3a
 1366 002c 08          		.1byte	0xb
 1367 002d 13          		.1byte	0x3b
 1368 002d 01          		.1byte	0xb
 1369 002e 0B          		.1byte	0x1
 1370 002e 0B          		.1byte	0x13
 1371 002f 3A          		.1byte	0x0
 1372 002f 0B          		.1byte	0x0
 1373 0030 3B          		.1byte	0x9
 1374 0030 0B          		.1byte	0xd
 1375 0031 01          		.1byte	0x0
 1376 0031 13          		.1byte	0x3
 1377 0032 00          		.1byte	0xe
 1378 0032 00          		.1byte	0x3a
 1379 0033 09          		.1byte	0xb
 1380 0033 0D          		.1byte	0x3b
 1381 0034 00          		.1byte	0xb
 1382 0034 03          		.1byte	0x49
 1383 0035 0E          		.1byte	0x13
 1384 0035 3A          		.1byte	0x38
 1385 0036 0B          		.1byte	0xa
 1386 0036 3B          		.1byte	0x0
 1387 0037 0B          		.1byte	0x0
 1388 0037 49          		.1byte	0xa
 1389 0038 13          		.1byte	0x2e
 1390 0038 38          		.1byte	0x0
 1391 0039 0A          		.1byte	0x3f
 1392 0039 00          		.1byte	0xc
 1393 003a 00          		.1byte	0x3
 1394 003a 0A          		.1byte	0xe
 1395 003b 2E          		.1byte	0x3a
 1396 003b 00          		.1byte	0xb
 1397 003c 3F          		.1byte	0x3b
 1398 003c 0C          		.1byte	0x5
 1399 003d 03          		.1byte	0x27
 1400 003d 0E          		.1byte	0xc
 1401 003e 3A          		.1byte	0x11
 1402 003e 0B          		.1byte	0x1
 1403 003f 3B          		.1byte	0x12
 1404 003f 05          		.1byte	0x1
 1405 0040 27          		.1byte	0x40
 1406 0040 0C          		.1byte	0xa
 1407 0041 11          		.1byte	0x0
 1408 0041 01          		.1byte	0x0
 1409 0042 12          		.1byte	0xb
 1410 0042 01          		.1byte	0x2e
 1411 0043 40          		.1byte	0x1
 1412 0043 0A          		.1byte	0x3f
 1413 0044 00          		.1byte	0xc
 1414 0044 00          		.1byte	0x3
 1415 0045 0B          		.1byte	0xe
 1416 0045 2E          		.1byte	0x3a
 1417 0046 01          		.1byte	0xb
 1418 0046 3F          		.1byte	0x3b
 1419 0047 0C          		.1byte	0x5
 1420 0047 03          		.1byte	0x27
 1421 0048 0E          		.1byte	0xc
 1422 0048 3A          		.1byte	0x11
 1423 0049 0B          		.1byte	0x1
 1424 0049 3B          		.1byte	0x12
 1425 004a 05          		.1byte	0x1
 1426 004a 27          		.1byte	0x40
 1427 004b 0C          		.1byte	0xa
 1428 004b 11          		.1byte	0x1
 1429 004c 01          		.1byte	0x13
 1430 004c 12          		.1byte	0x0
 1431 004d 01          		.1byte	0x0
 1432 004d 40          		.1byte	0xc
 1433 004e 0A          		.1byte	0x5
 1434 004e 01          		.1byte	0x0
 1435 004f 13          		.1byte	0x3
 1436 004f 00          		.1byte	0xe
 1437 0050 00          		.1byte	0x3a
 1438 0050 0C          		.1byte	0xb
 1439 0051 05          		.1byte	0x3b
 1440 0051 00          		.1byte	0x5
 1441 0052 03          		.1byte	0x49
 1442 0052 0E          		.1byte	0x13
 1443 0053 3A          		.1byte	0x2
 1444 0053 0B          		.1byte	0x6
 1445 0054 3B          		.1byte	0x0
 1446 0054 05          		.1byte	0x0
 1447 0055 49          		.1byte	0xd
 1448 0055 13          		.1byte	0x2e
 1449 0056 02          		.1byte	0x0
 1450 0056 06          		.1byte	0x3f
 1451 0057 00          		.1byte	0xc
 1452 0057 00          		.1byte	0x3
 1453 0058 0D          		.1byte	0xe
 1454 0058 2E          		.1byte	0x3a
 1455 0059 00          		.1byte	0xb
 1456 0059 3F          		.1byte	0x3b
 1457 005a 0C          		.1byte	0x5
 1458 005a 03          		.1byte	0x27
 1459 005b 0E          		.1byte	0xc
 1460 005b 3A          		.1byte	0x11
 1461 005c 0B          		.1byte	0x1
 1462 005c 3B          		.1byte	0x12
 1463 005d 05          		.1byte	0x1
 1464 005d 27          		.1byte	0x40
 1465 005e 0C          		.1byte	0x6
 1466 005e 11          		.1byte	0x0
 1467 005f 01          		.1byte	0x0
 1468 005f 12          		.1byte	0xe
 1469 0060 01          		.1byte	0x2e
 1470 0060 40          		.1byte	0x1
 1471 0061 06          		.1byte	0x3f
 1472 0061 00          		.1byte	0xc
 1473 0062 00          		.1byte	0x3
 1474 0062 0E          		.1byte	0xe
 1475 0063 2E          		.1byte	0x3a
 1476 0063 01          		.1byte	0xb
 1477 0064 3F          		.1byte	0x3b
 1478 0064 0C          		.1byte	0x5
 1479 0065 03          		.1byte	0x27
 1480 0065 0E          		.1byte	0xc
 1481 0066 3A          		.1byte	0x11
 1482 0066 0B          		.1byte	0x1
 1483 0067 3B          		.1byte	0x12
 1484 0067 05          		.1byte	0x1
 1485 0068 27          		.1byte	0x40
 1486 0068 0C          		.1byte	0x6
 1487 0069 11          		.1byte	0x1
 1488 0069 01          		.1byte	0x13
 1489 006a 12          		.1byte	0x0
 1490 006a 01          		.1byte	0x0
 1491 006b 40          		.1byte	0xf
 1492 006b 06          		.1byte	0x34
 1493 006c 01          		.1byte	0x0
 1494 006c 13          		.1byte	0x3
 1495 006d 00          		.1byte	0xe
 1496 006d 00          		.1byte	0x3a
 1497 006e 0F          		.1byte	0xb
 1498 006e 34          		.1byte	0x3b
 1499 006f 00          		.1byte	0x5
 1500 006f 03          		.1byte	0x49
 1501 0070 0E          		.1byte	0x13
 1502 0070 3A          		.1byte	0x0
 1503 0071 0B          		.1byte	0x0
 1504 0071 3B          		.1byte	0x10
 1505 0072 05          		.1byte	0x2e
 1506 0072 49          		.1byte	0x0
 1507 0073 13          		.1byte	0x3f
 1508 0073 00          		.1byte	0xc
 1509 0074 00          		.1byte	0x3
 1510 0074 10          		.1byte	0xe
 1511 0075 2E          		.1byte	0x3a
 1512 0075 00          		.1byte	0xb
 1513 0076 3F          		.1byte	0x3b
 1514 0076 0C          		.1byte	0x5
 1515 0077 03          		.1byte	0x27
 1516 0077 0E          		.1byte	0xc
 1517 0078 3A          		.1byte	0x49
 1518 0078 0B          		.1byte	0x13
 1519 0079 3B          		.1byte	0x11
 1520 0079 05          		.1byte	0x1
 1521 007a 27          		.1byte	0x12
 1522 007a 0C          		.1byte	0x1
 1523 007b 49          		.1byte	0x40
 1524 007b 13          		.1byte	0xa
 1525 007c 11          		.1byte	0x0
 1526 007c 01          		.1byte	0x0
 1527 007d 12          		.1byte	0x11
 1528 007d 01          		.1byte	0x34
 1529 007e 40          		.1byte	0x0
 1530 007e 0A          		.1byte	0x3
 1531 007f 00          		.1byte	0xe
 1532 007f 00          		.1byte	0x3a
 1533 0080 11          		.1byte	0xb
 1534 0080 34          		.1byte	0x3b
 1535 0081 00          		.1byte	0x5
 1536 0081 03          		.1byte	0x49
 1537 0082 0E          		.1byte	0x13
 1538 0082 3A          		.1byte	0x2
 1539 0083 0B          		.1byte	0xa
 1540 0083 3B          		.1byte	0x0
 1541 0084 05          		.1byte	0x0
 1542 0084 49          		.1byte	0x12
 1543 0085 13          		.1byte	0x2e
 1544 0085 02          		.1byte	0x1
 1545 0086 0A          		.1byte	0x3
 1546 0086 00          		.1byte	0xe
 1547 0087 00          		.1byte	0x3a
 1548 0087 12          		.1byte	0xb
 1549 0088 2E          		.1byte	0x3b
 1550 0088 01          		.1byte	0xb
 1551 0089 03          		.1byte	0x27
 1552 0089 0E          		.1byte	0xc
 1553 008a 3A          		.1byte	0x11
 1554 008a 0B          		.1byte	0x1
 1555 008b 3B          		.1byte	0x12
 1556 008b 0B          		.1byte	0x1
 1557 008c 27          		.1byte	0x40
 1558 008c 0C          		.1byte	0x6
 1559 008d 11          		.1byte	0x1
 1560 008d 01          		.1byte	0x13
 1561 008e 12          		.1byte	0x0
 1562 008e 01          		.1byte	0x0
 1563 008f 40          		.1byte	0x13
 1564 008f 06          		.1byte	0x5
 1565 0090 01          		.1byte	0x0
 1566 0090 13          		.1byte	0x3
 1567 0091 00          		.1byte	0x8
 1568 0091 00          		.1byte	0x3a
 1569 0092 13          		.1byte	0xb
 1570 0092 05          		.1byte	0x3b
 1571 0093 00          		.1byte	0xb
 1572 0093 03          		.1byte	0x49
 1573 0094 08          		.1byte	0x13
 1574 0094 3A          		.1byte	0x2
 1575 0095 0B          		.1byte	0x6
 1576 0095 3B          		.1byte	0x0
 1577 0096 0B          		.1byte	0x0
 1578 0096 49          		.1byte	0x14
 1579 0097 13          		.1byte	0x34
 1580 0097 02          		.1byte	0x0
 1581 0098 06          		.1byte	0x3
 1582 0098 00          		.1byte	0xe
 1583 0099 00          		.1byte	0x3a
 1584 0099 14          		.1byte	0xb
 1585 009a 34          		.1byte	0x3b
 1586 009a 00          		.1byte	0xb
 1587 009b 03          		.1byte	0x49
 1588 009b 0E          		.1byte	0x13
 1589 009c 3A          		.1byte	0x2
 1590 009c 0B          		.1byte	0x6
 1591 009d 3B          		.1byte	0x0
 1592 009d 0B          		.1byte	0x0
 1593 009e 49          		.1byte	0x15
 1594 009e 13          		.1byte	0x2e
 1595 009f 02          		.1byte	0x0
 1596 009f 06          		.1byte	0x3f
 1597 00a0 00          		.1byte	0xc
 1598 00a0 00          		.1byte	0x3
 1599 00a1 15          		.1byte	0xe
 1600 00a1 2E          		.1byte	0x3a
 1601 00a2 00          		.1byte	0xb
 1602 00a2 3F          		.1byte	0x3b
 1603 00a3 0C          		.1byte	0xb
 1604 00a3 03          		.1byte	0x27
 1605 00a4 0E          		.1byte	0xc
 1606 00a4 3A          		.1byte	0x11
 1607 00a5 0B          		.1byte	0x1
 1608 00a5 3B          		.1byte	0x12
 1609 00a6 0B          		.1byte	0x1
 1610 00a6 27          		.1byte	0x40
 1611 00a7 0C          		.1byte	0x6
 1612 00a7 11          		.1byte	0x0
 1613 00a8 01          		.1byte	0x0
 1614 00a8 12          		.1byte	0x16
 1615 00a9 01          		.1byte	0x34
 1616 00a9 40          		.1byte	0x0
 1617 00aa 06          		.1byte	0x3
 1618 00aa 00          		.1byte	0xe
 1619 00ab 00          		.1byte	0x3a
 1620 00ab 16          		.1byte	0xb
 1621 00ac 34          		.1byte	0x3b
 1622 00ac 00          		.1byte	0xb
 1623 00ad 03          		.1byte	0x49
 1624 00ad 0E          		.1byte	0x13
 1625 00ae 3A          		.1byte	0x3f
 1626 00ae 0B          		.1byte	0xc
 1627 00af 3B          		.1byte	0x2
 1628 00af 0B          		.1byte	0xa
 1629 00b0 49          		.1byte	0x0
 1630 00b0 13          		.1byte	0x0
 1631 00b1 3F          		.1byte	0x0
 1632 00b1 0C          		.section	.debug_pubnames,"",@progbits
 1633 00b2 02          		.4byte	0xdd
 1634 00b2 0A          		.2byte	0x2
 1635 00b3 00          		.4byte	.Ldebug_info0
 1636 00b3 00          		.4byte	0x420
 1637 00b4 00          		.4byte	0x2b7
 1638                 		.ascii "HrInitSwitchData\000"
 1639 0000 00 00 00 DD 		.4byte	0x2cb
 1640 0002 00 02       		.ascii "HandleSwitchPIOChangedEvent\000"
 1641 0003 00 00 00 00 		.4byte	0x2f4
 1642 0005 00 00 04 20 		.ascii "HrInitSwitchHardware\000"
 1643 0007 00 00 02 B7 		.4byte	0x30a
 1644 0009 48 72 49 6E 		.ascii "HrHwDataInit\000"
 1644      69 74 53 77 
 1644      69 74 63 68 
 1644      44 61 74 61 
 1644      00 
 1645 0011 00 00 02 CB 		.4byte	0x320
 1646 0013 48 61 6E 64 		.ascii "HandlePIOChangedEvent\000"
 1646      6C 65 53 77 
 1646      69 74 63 68 
 1646      50 49 4F 43 
 1646      68 61 6E 67 
 1647 0021 00 00 02 F4 		.4byte	0x357
 1648 0023 48 72 49 6E 		.ascii "GetRRValue\000"
 1648      69 74 53 77 
 1648      69 74 63 68 
 1648      48 61 72 64 
 1648      77 61 72 65 
 1649 002e 00 00 03 0A 		.4byte	0x36f
 1650 0030 48 72 48 77 		.ascii "SoundBuzzer\000"
 1650      44 61 74 61 
 1650      49 6E 69 74 
 1650      00 
 1651 0036 00 00 03 20 		.4byte	0x3e6
 1652 0038 48 61 6E 64 		.ascii "HrInitHardware\000"
 1652      6C 65 50 49 
 1652      4F 43 68 61 
 1652      6E 67 65 64 
 1652      45 76 65 6E 
 1653 0043 00 00 03 57 		.4byte	0x3fb
 1654 0045 47 65 74 52 		.ascii "g_app_hw_data\000"
 1654      52 56 61 6C 
 1654      75 65 00 
 1655 004b 00 00 03 6F 		.4byte	0x40d
 1656 004d 53 6F 75 6E 		.ascii "g_dimmer_data\000"
 1656      64 42 75 7A 
 1656      7A 65 72 00 
 1657 0053 00 00 03 E6 		.4byte	0x0
 1658 0055 48 72 49 6E 		.section	.debug_aranges,"",@progbits
 1658      69 74 48 61 
 1658      72 64 77 61 
 1658      72 65 00 
 1659 005c 00 00 03 FB 		.4byte	0x5c
 1660 005e 67 5F 61 70 		.2byte	0x2
 1660      70 5F 68 77 
 1660      5F 64 61 74 
 1660      61 00 
 1661 0065 00 00 04 0D 		.4byte	.Ldebug_info0
 1662 0067 67 5F 64 69 		.1byte	0x4
 1662      6D 6D 65 72 
 1662      5F 64 61 74 
 1662      61 00 
 1663 006e 00 00 00 00 		.1byte	0x0
 1664                 		.2byte	0x0
 1665 0000 00 00 00 5C 		.2byte	0x0
 1666 0002 00 02       		.4byte	.LFB9
 1667 0003 00 00 00 00 		.4byte	.LFE9-.LFB9
 1668 0005 04          		.4byte	.LFB10
 1669 0005 00          		.4byte	.LFE10-.LFB10
 1670 0006 00 00       		.4byte	.LFB8
 1671 0007 00 00       		.4byte	.LFE8-.LFB8
 1672 0008 00 00 00 00 		.4byte	.LFB4
 1673 000a 00 00 00 01 		.4byte	.LFE4-.LFB4
 1674 000c 00 00 00 00 		.4byte	.LFB7
 1675 000e 00 00 00 00 		.4byte	.LFE7-.LFB7
 1676 0010 00 00 00 00 		.4byte	.LFB6
 1677 0012 00 00 00 00 		.4byte	.LFE6-.LFB6
 1678 0014 00 00 00 00 		.4byte	.LFB5
 1679 0016 00 00 00 00 		.4byte	.LFE5-.LFB5
 1680 0018 00 00 00 00 		.4byte	.LFB2
 1681 001a 00 00 00 00 		.4byte	.LFE2-.LFB2
 1682 001c 00 00 00 00 		.4byte	.LFB3
 1683 001e 00 00 00 00 		.4byte	.LFE3-.LFB3
 1684 0020 00 00 00 00 		.4byte	0x0
 1685 0022 00 00 00 00 		.4byte	0x0
 1686 0024 00 00 00 00 		.section	.debug_ranges,"",@progbits
 1687 0026 00 00 00 00 	.Ldebug_ranges0:
 1688 0028 00 00 00 00 		.4byte	.Ltext0
 1689 002a 00 00 00 00 		.4byte	.Letext0
 1690 002c 00 00 00 00 		.4byte	.LFB9
 1691 002e 00 00 00 00 		.4byte	.LFE9
 1692                 		.4byte	.LFB10
 1693                 		.4byte	.LFE10
 1694 0000 00 00 00 00 		.4byte	.LFB8
 1695 0002 00 00 00 00 		.4byte	.LFE8
 1696 0004 00 00 00 00 		.4byte	.LFB4
 1697 0006 00 00 00 00 		.4byte	.LFE4
 1698 0008 00 00 00 00 		.4byte	.LFB7
 1699 000a 00 00 00 00 		.4byte	.LFE7
 1700 000c 00 00 00 00 		.4byte	.LFB6
 1701 000e 00 00 00 00 		.4byte	.LFE6
 1702 0010 00 00 00 00 		.4byte	.LFB5
 1703 0012 00 00 00 00 		.4byte	.LFE5
 1704 0014 00 00 00 00 		.4byte	.LFB2
 1705 0016 00 00 00 00 		.4byte	.LFE2
 1706 0018 00 00 00 00 		.4byte	.LFB3
 1707 001a 00 00 00 00 		.4byte	.LFE3
 1708 001c 00 00 00 00 		.4byte	0x0
 1709 001e 00 00 00 00 		.4byte	0x0
 1710 0020 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 1711 0022 00 00 00 00 	.LASF82:
 1712 0024 00 00 00 00 		.ascii "HrInitSwitchData\000"
 1713 0026 00 00 00 00 	.LASF33:
 1714 0028 00 00 00 00 		.ascii "pio_mode_ana_mon_clk_pio\000"
 1715 002a 00 00 00 00 	.LASF83:
 1716                 		.ascii "HrInitSwitchHardware\000"
 1717                 	.LASF21:
 1718 0000 48 72 49 6E 		.ascii "pio_mode_radio_rx_en\000"
 1718      69 74 53 77 
 1718      69 74 63 68 
 1718      44 61 74 61 
 1718      00 
 1719                 	.LASF80:
 1720 0008 70 69 6F 5F 		.ascii "app_panic_invalid_state\000"
 1720      6D 6F 64 65 
 1720      5F 61 6E 61 
 1720      5F 6D 6F 6E 
 1720      5F 63 6C 6B 
 1721                 	.LASF64:
 1722 0015 48 72 49 6E 		.ascii "beep_type\000"
 1722      69 74 53 77 
 1722      69 74 63 68 
 1722      48 61 72 64 
 1722      77 61 72 65 
 1723                 	.LASF29:
 1724 001f 70 69 6F 5F 		.ascii "pio_mode_i2c_data\000"
 1724      6D 6F 64 65 
 1724      5F 72 61 64 
 1724      69 6F 5F 72 
 1724      78 5F 65 6E 
 1725                 	.LASF6:
 1726 002a 61 70 70 5F 		.ascii "short int\000"
 1726      70 61 6E 69 
 1726      63 5F 69 6E 
 1726      76 61 6C 69 
 1726      64 5F 73 74 
 1727                 	.LASF87:
 1728 0036 62 65 65 70 		.ascii "pio_changed\000"
 1728      5F 74 79 70 
 1728      65 00 
 1729                 	.LASF59:
 1730 003b 70 69 6F 5F 		.ascii "buzzer_beep_long\000"
 1730      6D 6F 64 65 
 1730      5F 69 32 63 
 1730      5F 64 61 74 
 1730      61 00 
 1731                 	.LASF95:
 1732 0044 73 68 6F 72 		.ascii "C:\\Users\\pili\\git\\heekari\\HeekariFirmware\000"
 1732      74 20 69 6E 
 1732      74 00 
 1733                 	.LASF41:
 1734 0049 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_no_pulls\000"
 1734      63 68 61 6E 
 1734      67 65 64 00 
 1735                 	.LASF94:
 1736 004f 62 75 7A 7A 		.ascii "hr_sensor_hw.c\000"
 1736      65 72 5F 62 
 1736      65 65 70 5F 
 1736      6C 6F 6E 67 
 1736      00 
 1737                 	.LASF26:
 1738 0057 43 3A 5C 55 		.ascii "pio_mode_pio_control_rxd\000"
 1738      73 65 72 73 
 1738      5C 70 69 6C 
 1738      69 5C 67 69 
 1738      74 5C 68 65 
 1739                 	.LASF23:
 1740 006c 70 69 6F 5F 		.ascii "pio_mode_nvm_power_en\000"
 1740      69 32 63 5F 
 1740      70 75 6C 6C 
 1740      5F 6D 6F 64 
 1740      65 5F 6E 6F 
 1741                 	.LASF86:
 1742 007a 68 72 5F 73 		.ascii "HandlePIOChangedEvent\000"
 1742      65 6E 73 6F 
 1742      72 5F 68 77 
 1742      2E 63 00 
 1743                 	.LASF89:
 1744 0081 70 69 6F 5F 		.ascii "beep_timer\000"
 1744      6D 6F 64 65 
 1744      5F 70 69 6F 
 1744      5F 63 6F 6E 
 1744      74 72 6F 6C 
 1745                 	.LASF98:
 1746 008e 70 69 6F 5F 		.ascii "appBuzzerTimerHandler\000"
 1746      6D 6F 64 65 
 1746      5F 6E 76 6D 
 1746      5F 70 6F 77 
 1746      65 72 5F 65 
 1747                 	.LASF48:
 1748 0099 48 61 6E 64 		.ascii "pio_event_mode_disable\000"
 1748      6C 65 50 49 
 1748      4F 43 68 61 
 1748      6E 67 65 64 
 1748      45 76 65 6E 
 1749                 	.LASF31:
 1750 00a4 62 65 65 70 		.ascii "pio_mode_uart_flow_ctrl\000"
 1750      5F 74 69 6D 
 1750      65 72 00 
 1751                 	.LASF68:
 1752 00a9 61 70 70 42 		.ascii "last_dimmer_var\000"
 1752      75 7A 7A 65 
 1752      72 54 69 6D 
 1752      65 72 48 61 
 1752      6E 64 6C 65 
 1753                 	.LASF30:
 1754 00b4 70 69 6F 5F 		.ascii "pio_mode_i2c_clock\000"
 1754      65 76 65 6E 
 1754      74 5F 6D 6F 
 1754      64 65 5F 64 
 1754      69 73 61 62 
 1755                 	.LASF65:
 1756 00c0 70 69 6F 5F 		.ascii "beep_count\000"
 1756      6D 6F 64 65 
 1756      5F 75 61 72 
 1756      74 5F 66 6C 
 1756      6F 77 5F 63 
 1757                 	.LASF49:
 1758 00cc 6C 61 73 74 		.ascii "pio_event_mode_rising\000"
 1758      5F 64 69 6D 
 1758      6D 65 72 5F 
 1758      76 61 72 00 
 1759                 	.LASF45:
 1760 00d4 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_pull_up\000"
 1760      6D 6F 64 65 
 1760      5F 69 32 63 
 1760      5F 63 6C 6F 
 1760      63 6B 00 
 1761                 	.LASF34:
 1762 00dd 62 65 65 70 		.ascii "pio_mode_no_pulls\000"
 1762      5F 63 6F 75 
 1762      6E 74 00 
 1763                 	.LASF79:
 1764 00e3 70 69 6F 5F 		.ascii "app_panic_con_param_update\000"
 1764      65 76 65 6E 
 1764      74 5F 6D 6F 
 1764      64 65 5F 72 
 1764      69 73 69 6E 
 1765                 	.LASF54:
 1766 00ee 70 69 6F 5F 		.ascii "pio_pwm_mode_open_source\000"
 1766      69 32 63 5F 
 1766      70 75 6C 6C 
 1766      5F 6D 6F 64 
 1766      65 5F 73 74 
 1767                 	.LASF85:
 1768 00fe 70 69 6F 5F 		.ascii "HandleSwitchPIOChangedEvent\000"
 1768      6D 6F 64 65 
 1768      5F 6E 6F 5F 
 1768      70 75 6C 6C 
 1768      73 00 
 1769                 	.LASF47:
 1770 0107 61 70 70 5F 		.ascii "pio_i2c_pull_mode_strong_sticky\000"
 1770      70 61 6E 69 
 1770      63 5F 63 6F 
 1770      6E 5F 70 61 
 1770      72 61 6D 5F 
 1771                 	.LASF69:
 1772 0115 70 69 6F 5F 		.ascii "SWITCH_DIMMER_DATA_T\000"
 1772      70 77 6D 5F 
 1772      6D 6F 64 65 
 1772      5F 6F 70 65 
 1772      6E 5F 73 6F 
 1773                 	.LASF73:
 1774 0121 48 61 6E 64 		.ascii "app_panic_db_registration\000"
 1774      6C 65 53 77 
 1774      69 74 63 68 
 1774      50 49 4F 43 
 1774      68 61 6E 67 
 1775                 	.LASF9:
 1776 012f 70 69 6F 5F 		.ascii "pio_mode_user\000"
 1776      69 32 63 5F 
 1776      70 75 6C 6C 
 1776      5F 6D 6F 64 
 1776      65 5F 73 74 
 1777                 	.LASF39:
 1778 013f 53 57 49 54 		.ascii "pio_mode_weak_sticky\000"
 1778      43 48 5F 44 
 1778      49 4D 4D 45 
 1778      52 5F 44 41 
 1778      54 41 5F 54 
 1779                 	.LASF16:
 1780 014a 61 70 70 5F 		.ascii "pio_mode_quadrature0\000"
 1780      70 61 6E 69 
 1780      63 5F 64 62 
 1780      5F 72 65 67 
 1780      69 73 74 72 
 1781                 	.LASF17:
 1782 0157 70 69 6F 5F 		.ascii "pio_mode_quadrature1\000"
 1782      6D 6F 64 65 
 1782      5F 75 73 65 
 1782      72 00 
 1783                 	.LASF18:
 1784 015e 70 69 6F 5F 		.ascii "pio_mode_quadrature2\000"
 1784      6D 6F 64 65 
 1784      5F 77 65 61 
 1784      6B 5F 73 74 
 1784      69 63 6B 79 
 1785                 	.LASF19:
 1786 0168 70 69 6F 5F 		.ascii "pio_mode_quadrature3\000"
 1786      6D 6F 64 65 
 1786      5F 71 75 61 
 1786      64 72 61 74 
 1786      75 72 65 30 
 1787                 	.LASF70:
 1788 0173 70 69 6F 5F 		.ascii "app_panic_set_advert_params\000"
 1788      6D 6F 64 65 
 1788      5F 71 75 61 
 1788      64 72 61 74 
 1788      75 72 65 31 
 1789                 	.LASF88:
 1790 017d 70 69 6F 5F 		.ascii "SoundBuzzer\000"
 1790      6D 6F 64 65 
 1790      5F 71 75 61 
 1790      64 72 61 74 
 1790      75 72 65 32 
 1791                 	.LASF0:
 1792 0188 70 69 6F 5F 		.ascii "unsigned char\000"
 1792      6D 6F 64 65 
 1792      5F 71 75 61 
 1792      64 72 61 74 
 1792      75 72 65 33 
 1793                 	.LASF11:
 1794 0192 61 70 70 5F 		.ascii "pio_mode_clk_req\000"
 1794      70 61 6E 69 
 1794      63 5F 73 65 
 1794      74 5F 61 64 
 1794      76 65 72 74 
 1795                 	.LASF60:
 1796 01a0 53 6F 75 6E 		.ascii "buzzer_beep_twice\000"
 1796      64 42 75 7A 
 1796      7A 65 72 00 
 1797                 	.LASF78:
 1798 01a6 75 6E 73 69 		.ascii "app_panic_add_whitelist\000"
 1798      67 6E 65 64 
 1798      20 63 68 61 
 1798      72 00 
 1799                 	.LASF43:
 1800 01ad 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_pull_up\000"
 1800      6D 6F 64 65 
 1800      5F 63 6C 6B 
 1800      5F 72 65 71 
 1800      00 
 1801                 	.LASF75:
 1802 01b6 62 75 7A 7A 		.ascii "app_panic_nvm_write\000"
 1802      65 72 5F 62 
 1802      65 65 70 5F 
 1802      74 77 69 63 
 1802      65 00 
 1803                 	.LASF5:
 1804 01bf 61 70 70 5F 		.ascii "signed char\000"
 1804      70 61 6E 69 
 1804      63 5F 61 64 
 1804      64 5F 77 68 
 1804      69 74 65 6C 
 1805                 	.LASF12:
 1806 01cb 70 69 6F 5F 		.ascii "pio_mode_pwm0\000"
 1806      69 32 63 5F 
 1806      70 75 6C 6C 
 1806      5F 6D 6F 64 
 1806      65 5F 77 65 
 1807                 	.LASF13:
 1808 01da 61 70 70 5F 		.ascii "pio_mode_pwm1\000"
 1808      70 61 6E 69 
 1808      63 5F 6E 76 
 1808      6D 5F 77 72 
 1808      69 74 65 00 
 1809                 	.LASF14:
 1810 01e4 73 69 67 6E 		.ascii "pio_mode_pwm2\000"
 1810      65 64 20 63 
 1810      68 61 72 00 
 1811                 	.LASF15:
 1812 01ea 70 69 6F 5F 		.ascii "pio_mode_pwm3\000"
 1812      6D 6F 64 65 
 1812      5F 70 77 6D 
 1812      30 00 
 1813                 	.LASF8:
 1814 01f1 70 69 6F 5F 		.ascii "unsigned int\000"
 1814      6D 6F 64 65 
 1814      5F 70 77 6D 
 1814      31 00 
 1815                 	.LASF62:
 1816 01f8 70 69 6F 5F 		.ascii "buzzer_beep_type\000"
 1816      6D 6F 64 65 
 1816      5F 70 77 6D 
 1816      32 00 
 1817                 	.LASF74:
 1818 01ff 70 69 6F 5F 		.ascii "app_panic_nvm_read\000"
 1818      6D 6F 64 65 
 1818      5F 70 77 6D 
 1818      33 00 
 1819                 	.LASF55:
 1820 0206 75 6E 73 69 		.ascii "pio_pwm_mode_inverted_push_pull\000"
 1820      67 6E 65 64 
 1820      20 69 6E 74 
 1820      00 
 1821                 	.LASF1:
 1822 020d 62 75 7A 7A 		.ascii "short unsigned int\000"
 1822      65 72 5F 62 
 1822      65 65 70 5F 
 1822      74 79 70 65 
 1822      00 
 1823                 	.LASF97:
 1824 0215 61 70 70 5F 		.ascii "GetRRValue\000"
 1824      70 61 6E 69 
 1824      63 5F 6E 76 
 1824      6D 5F 72 65 
 1824      61 64 00 
 1825                 	.LASF37:
 1826 021f 70 69 6F 5F 		.ascii "pio_mode_strong_pull_down\000"
 1826      70 77 6D 5F 
 1826      6D 6F 64 65 
 1826      5F 69 6E 76 
 1826      65 72 74 65 
 1827                 	.LASF91:
 1828 022f 73 68 6F 72 		.ascii "g_app_hw_data\000"
 1828      74 20 75 6E 
 1828      73 69 67 6E 
 1828      65 64 20 69 
 1828      6E 74 00 
 1829                 	.LASF96:
 1830 0238 47 65 74 52 		.ascii "pios\000"
 1830      52 56 61 6C 
 1830      75 65 00 
 1831                 	.LASF92:
 1832 023e 70 69 6F 5F 		.ascii "g_dimmer_data\000"
 1832      6D 6F 64 65 
 1832      5F 73 74 72 
 1832      6F 6E 67 5F 
 1832      70 75 6C 6C 
 1833                 	.LASF58:
 1834 024b 67 5F 61 70 		.ascii "buzzer_beep_short\000"
 1834      70 5F 68 77 
 1834      5F 64 61 74 
 1834      61 00 
 1835                 	.LASF7:
 1836 0252 70 69 6F 73 		.ascii "long int\000"
 1836      00 
 1837                 	.LASF56:
 1838 0254 67 5F 64 69 		.ascii "timer_id\000"
 1838      6D 6D 65 72 
 1838      5F 64 61 74 
 1838      61 00 
 1839                 	.LASF36:
 1840 025b 62 75 7A 7A 		.ascii "pio_mode_weak_pull_up\000"
 1840      65 72 5F 62 
 1840      65 65 70 5F 
 1840      73 68 6F 72 
 1840      74 00 
 1841                 	.LASF50:
 1842 0264 6C 6F 6E 67 		.ascii "pio_event_mode_falling\000"
 1842      20 69 6E 74 
 1842      00 
 1843                 	.LASF90:
 1844 0269 74 69 6D 65 		.ascii "HrInitHardware\000"
 1844      72 5F 69 64 
 1844      00 
 1845                 	.LASF2:
 1846 026d 70 69 6F 5F 		.ascii "uint16\000"
 1846      6D 6F 64 65 
 1846      5F 77 65 61 
 1846      6B 5F 70 75 
 1846      6C 6C 5F 75 
 1847                 	.LASF22:
 1848 0278 70 69 6F 5F 		.ascii "pio_mode_radio_tx_en\000"
 1848      65 76 65 6E 
 1848      74 5F 6D 6F 
 1848      64 65 5F 66 
 1848      61 6C 6C 69 
 1849                 	.LASF3:
 1850 0284 48 72 49 6E 		.ascii "uint32\000"
 1850      69 74 48 61 
 1850      72 64 77 61 
 1850      72 65 00 
 1851                 	.LASF61:
 1852 028b 75 69 6E 74 		.ascii "buzzer_beep_thrice\000"
 1852      31 36 00 
 1853                 	.LASF4:
 1854 028f 70 69 6F 5F 		.ascii "long unsigned int\000"
 1854      6D 6F 64 65 
 1854      5F 72 61 64 
 1854      69 6F 5F 74 
 1854      78 5F 65 6E 
 1855                 	.LASF27:
 1856 0299 75 69 6E 74 		.ascii "pio_mode_ser_flash_dout\000"
 1856      33 32 00 
 1857                 	.LASF32:
 1858 029d 62 75 7A 7A 		.ascii "pio_mode_pio_control_timer\000"
 1858      65 72 5F 62 
 1858      65 65 70 5F 
 1858      74 68 72 69 
 1858      63 65 00 
 1859                 	.LASF72:
 1860 02a6 6C 6F 6E 67 		.ascii "app_panic_set_scan_rsp_data\000"
 1860      20 75 6E 73 
 1860      69 67 6E 65 
 1860      64 20 69 6E 
 1860      74 00 
 1861                 	.LASF66:
 1862 02af 70 69 6F 5F 		.ascii "button_press_tid\000"
 1862      6D 6F 64 65 
 1862      5F 73 65 72 
 1862      5F 66 6C 61 
 1862      73 68 5F 64 
 1863                 	.LASF40:
 1864 02bb 70 69 6F 5F 		.ascii "pio_mode_strong_sticky\000"
 1864      6D 6F 64 65 
 1864      5F 70 69 6F 
 1864      5F 63 6F 6E 
 1864      74 72 6F 6C 
 1865                 	.LASF44:
 1866 02c9 61 70 70 5F 		.ascii "pio_i2c_pull_mode_strong_pull_down\000"
 1866      70 61 6E 69 
 1866      63 5F 73 65 
 1866      74 5F 73 63 
 1866      61 6E 5F 72 
 1867                 	.LASF63:
 1868 02d7 62 75 74 74 		.ascii "buzzer_tid\000"
 1868      6F 6E 5F 70 
 1868      72 65 73 73 
 1868      5F 74 69 64 
 1868      00 
 1869                 	.LASF53:
 1870 02df 70 69 6F 5F 		.ascii "pio_pwm_mode_open_drain\000"
 1870      6D 6F 64 65 
 1870      5F 73 74 72 
 1870      6F 6E 67 5F 
 1870      73 74 69 63 
 1871                 	.LASF84:
 1872 02eb 70 69 6F 5F 		.ascii "HrHwDataInit\000"
 1872      69 32 63 5F 
 1872      70 75 6C 6C 
 1872      5F 6D 6F 64 
 1872      65 5F 73 74 
 1873                 	.LASF28:
 1874 02fc 62 75 7A 7A 		.ascii "pio_mode_ser_flash_csb\000"
 1874      65 72 5F 74 
 1874      69 64 00 
 1875                 	.LASF24:
 1876 0302 70 69 6F 5F 		.ascii "pio_mode_pio_controller\000"
 1876      70 77 6D 5F 
 1876      6D 6F 64 65 
 1876      5F 6F 70 65 
 1876      6E 5F 64 72 
 1877                 	.LASF57:
 1878 030e 48 72 48 77 		.ascii "buzzer_beep_off\000"
 1878      44 61 74 61 
 1878      49 6E 69 74 
 1878      00 
 1879                 	.LASF52:
 1880 0314 70 69 6F 5F 		.ascii "pio_pwm_mode_push_pull\000"
 1880      6D 6F 64 65 
 1880      5F 73 65 72 
 1880      5F 66 6C 61 
 1880      73 68 5F 63 
 1881                 	.LASF10:
 1882 0320 70 69 6F 5F 		.ascii "pio_mode_edge_capture\000"
 1882      6D 6F 64 65 
 1882      5F 70 69 6F 
 1882      5F 63 6F 6E 
 1882      74 72 6F 6C 
 1883                 	.LASF42:
 1884 032c 62 75 7A 7A 		.ascii "pio_i2c_pull_mode_weak_pull_down\000"
 1884      65 72 5F 62 
 1884      65 65 70 5F 
 1884      6F 66 66 00 
 1885                 	.LASF38:
 1886 0334 70 69 6F 5F 		.ascii "pio_mode_strong_pull_up\000"
 1886      70 77 6D 5F 
 1886      6D 6F 64 65 
 1886      5F 70 75 73 
 1886      68 5F 70 75 
 1887                 	.LASF71:
 1888 033f 70 69 6F 5F 		.ascii "app_panic_set_advert_data\000"
 1888      6D 6F 64 65 
 1888      5F 65 64 67 
 1888      65 5F 63 61 
 1888      70 74 75 72 
 1889                 	.LASF76:
 1890 034a 70 69 6F 5F 		.ascii "app_panic_read_tx_pwr_level\000"
 1890      69 32 63 5F 
 1890      70 75 6C 6C 
 1890      5F 6D 6F 64 
 1890      65 5F 77 65 
 1891                 	.LASF35:
 1892 035b 70 69 6F 5F 		.ascii "pio_mode_weak_pull_down\000"
 1892      6D 6F 64 65 
 1892      5F 73 74 72 
 1892      6F 6E 67 5F 
 1892      70 75 6C 6C 
 1893                 	.LASF46:
 1894 0367 61 70 70 5F 		.ascii "pio_i2c_pull_mode_weak_sticky\000"
 1894      70 61 6E 69 
 1894      63 5F 73 65 
 1894      74 5F 61 64 
 1894      76 65 72 74 
 1895                 	.LASF81:
 1896 0374 61 70 70 5F 		.ascii "app_panic_unexpected_beep_type\000"
 1896      70 61 6E 69 
 1896      63 5F 72 65 
 1896      61 64 5F 74 
 1896      78 5F 70 77 
 1897                 	.LASF25:
 1898 0382 70 69 6F 5F 		.ascii "pio_mode_pio_control_txd\000"
 1898      6D 6F 64 65 
 1898      5F 77 65 61 
 1898      6B 5F 70 75 
 1898      6C 6C 5F 64 
 1899                 	.LASF67:
 1900 038e 70 69 6F 5F 		.ascii "APP_HW_DATA_T\000"
 1900      69 32 63 5F 
 1900      70 75 6C 6C 
 1900      5F 6D 6F 64 
 1900      65 5F 77 65 
 1901                 	.LASF51:
 1902 039d 61 70 70 5F 		.ascii "pio_event_mode_both\000"
 1902      70 61 6E 69 
 1902      63 5F 75 6E 
 1902      65 78 70 65 
 1902      63 74 65 64 
 1903                 	.LASF20:
 1904 03ac 70 69 6F 5F 		.ascii "pio_mode_uart\000"
 1904      6D 6F 64 65 
 1904      5F 70 69 6F 
 1904      5F 63 6F 6E 
 1904      74 72 6F 6C 
 1905                 	.LASF93:
 1906 03b9 41 50 50 5F 		.ascii "GNU C 4.3.4 CSR version 21 for xap [1468380]\000"
 1906      48 57 5F 44 
 1906      41 54 41 5F 
 1906      54 00 
 1907                 	.LASF77:
 1908 03c0 70 69 6F 5F 		.ascii "app_panic_delete_whitelist\000"
 1908      65 76 65 6E 
 1908      74 5F 6D 6F 
 1908      64 65 5F 62 
 1908      6F 74 68 00 
 1909                 		.ident	"GCC: (GNU) 4.3.4 CSR version 21 for xap [1468380]"
 1910 03ca 70 69 6F 5F 	...
 1910      6D 6F 64 65 
 1910      5F 75 61 72 
 1910      74 00 
