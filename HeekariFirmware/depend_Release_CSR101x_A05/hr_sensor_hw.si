   1                 		.file	"hr_sensor_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.HrInitSwitchData,"ax",@progbits
  15                 		.global	HrInitSwitchData
  16                 		.type	HrInitSwitchData, @function
  17                 	HrInitSwitchData:
  18                 	.LFB9:
  19                 		.file 1 "hr_sensor_hw.c"
   0:hr_sensor_hw.c **** /******************************************************************************
   1:hr_sensor_hw.c ****  *  Copyright (C) Cambridge Silicon Radio Limited 2012-2013
   2:hr_sensor_hw.c ****  *  Part of CSR uEnergy SDK 2.2.2
   3:hr_sensor_hw.c ****  *  Application version 2.2.2.0
   4:hr_sensor_hw.c ****  *
   5:hr_sensor_hw.c ****  *  FILE
   6:hr_sensor_hw.c ****  *      hr_sensor_hw.c
   7:hr_sensor_hw.c ****  *
   8:hr_sensor_hw.c ****  *  DESCRIPTION
   9:hr_sensor_hw.c ****  *      This file defines the Heart Rate sensors hardware specific routines.
  10:hr_sensor_hw.c ****  *
  11:hr_sensor_hw.c ****  *****************************************************************************/
  12:hr_sensor_hw.c **** 
  13:hr_sensor_hw.c **** /*============================================================================*
  14:hr_sensor_hw.c ****  *  SDK Header Files
  15:hr_sensor_hw.c ****  *============================================================================*/
  16:hr_sensor_hw.c **** 
  17:hr_sensor_hw.c **** #include <pio.h>
  18:hr_sensor_hw.c **** #include <pio_ctrlr.h>
  19:hr_sensor_hw.c **** #include <timer.h>
  20:hr_sensor_hw.c **** 
  21:hr_sensor_hw.c **** /*============================================================================*
  22:hr_sensor_hw.c ****  *  Local Header Files
  23:hr_sensor_hw.c ****  *============================================================================*/
  24:hr_sensor_hw.c **** 
  25:hr_sensor_hw.c **** #include "hr_sensor.h"
  26:hr_sensor_hw.c **** #include "hr_sensor_gatt.h"
  27:hr_sensor_hw.c **** #include "hr_sensor_hw.h"
  28:hr_sensor_hw.c **** #include "heart_rate_service.h"
  29:hr_sensor_hw.c **** #include "app_gatt_db.h"
  30:hr_sensor_hw.c **** #include "app_gatt.h"
  31:hr_sensor_hw.c **** 
  32:hr_sensor_hw.c **** /*============================================================================*
  33:hr_sensor_hw.c ****  *  Private Definitions
  34:hr_sensor_hw.c ****  *============================================================================*/
  35:hr_sensor_hw.c **** 
  36:hr_sensor_hw.c **** /* Setup PIOs
  37:hr_sensor_hw.c ****  *  PIO3    Buzzer
  38:hr_sensor_hw.c ****  *  PIO4    LED 1
  39:hr_sensor_hw.c ****  *  PIO9    On Board Input - HR Input
  40:hr_sensor_hw.c ****  *  PIO10   LED 2 (Not Used)
  41:hr_sensor_hw.c ****  *  PIO11   Button
  42:hr_sensor_hw.c ****  */
  43:hr_sensor_hw.c **** 
  44:hr_sensor_hw.c **** #define BUZZER_PIO              (3)
  45:hr_sensor_hw.c **** #define HR_INPUT_PIO            (9)
  46:hr_sensor_hw.c **** #define BUTTON_PIO              (11)
  47:hr_sensor_hw.c **** 
  48:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  49:hr_sensor_hw.c **** 
  50:hr_sensor_hw.c **** #define BUZZER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))
  51:hr_sensor_hw.c **** #define HR_INPUT_PIO_MASK       (PIO_BIT_MASK(HR_INPUT_PIO))
  52:hr_sensor_hw.c **** #define BUTTON_PIO_MASK         (PIO_BIT_MASK(BUTTON_PIO))
  53:hr_sensor_hw.c **** 
  54:hr_sensor_hw.c **** /* PIO direction */
  55:hr_sensor_hw.c **** #define PIO_DIRECTION_INPUT     (FALSE)
  56:hr_sensor_hw.c **** #define PIO_DIRECTION_OUTPUT    (TRUE)
  57:hr_sensor_hw.c **** 
  58:hr_sensor_hw.c **** /* PIO state */
  59:hr_sensor_hw.c **** #define PIO_STATE_HIGH          (TRUE)
  60:hr_sensor_hw.c **** #define PIO_STATE_LOW           (FALSE)
  61:hr_sensor_hw.c **** 
  62:hr_sensor_hw.c **** /* Extra long button press timer */
  63:hr_sensor_hw.c **** #define EXTRA_LONG_BUTTON_PRESS_TIMER \
  64:hr_sensor_hw.c ****                                 (4*SECOND)
  65:hr_sensor_hw.c **** 
  66:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
  67:hr_sensor_hw.c **** 
  68:hr_sensor_hw.c **** /* The index (0-3) of the PWM unit to be configured */
  69:hr_sensor_hw.c **** #define BUZZER_PWM_INDEX_0      (0)
  70:hr_sensor_hw.c **** 
  71:hr_sensor_hw.c **** /* PWM parameters for Buzzer */
  72:hr_sensor_hw.c **** 
  73:hr_sensor_hw.c **** /* Dull on. off and hold times */
  74:hr_sensor_hw.c **** #define DULL_BUZZ_ON_TIME       (2)    /* 60us */
  75:hr_sensor_hw.c **** #define DULL_BUZZ_OFF_TIME      (15)   /* 450us */
  76:hr_sensor_hw.c **** #define DULL_BUZZ_HOLD_TIME     (0)
  77:hr_sensor_hw.c **** 
  78:hr_sensor_hw.c **** /* Bright on, off and hold times */
  79:hr_sensor_hw.c **** #define BRIGHT_BUZZ_ON_TIME     (2)    /* 60us */
  80:hr_sensor_hw.c **** #define BRIGHT_BUZZ_OFF_TIME    (15)   /* 450us */
  81:hr_sensor_hw.c **** #define BRIGHT_BUZZ_HOLD_TIME   (0)    /* 0us */
  82:hr_sensor_hw.c **** 
  83:hr_sensor_hw.c **** #define BUZZ_RAMP_RATE          (0xFF)
  84:hr_sensor_hw.c **** 
  85:hr_sensor_hw.c **** /* TIMER values for Buzzer */
  86:hr_sensor_hw.c **** #define SHORT_BEEP_TIMER_VALUE  (100* MILLISECOND)
  87:hr_sensor_hw.c **** #define LONG_BEEP_TIMER_VALUE   (500* MILLISECOND)
  88:hr_sensor_hw.c **** #define BEEP_GAP_TIMER_VALUE    (25* MILLISECOND)
  89:hr_sensor_hw.c **** 
  90:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
  91:hr_sensor_hw.c **** 
  92:hr_sensor_hw.c **** #define DIMMER_PIO              (3)
  93:hr_sensor_hw.c **** 
  94:hr_sensor_hw.c **** #define DIMMER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))                                
  95:hr_sensor_hw.c **** 
  96:hr_sensor_hw.c **** /*============================================================================*
  97:hr_sensor_hw.c ****  *  Public data
  98:hr_sensor_hw.c ****  *============================================================================*/
  99:hr_sensor_hw.c **** 
 100:hr_sensor_hw.c **** /* Blood pressure application hardware data instance */
 101:hr_sensor_hw.c **** APP_HW_DATA_T                   g_app_hw_data;
 102:hr_sensor_hw.c **** 
 103:hr_sensor_hw.c **** /* Dimmer hardware data instance */
 104:hr_sensor_hw.c **** SWITCH_DIMMER_DATA_T                   g_dimmer_data;
 105:hr_sensor_hw.c **** 
 106:hr_sensor_hw.c **** /*============================================================================*
 107:hr_sensor_hw.c ****  *  Private Function Implementations
 108:hr_sensor_hw.c ****  *============================================================================*/
 109:hr_sensor_hw.c **** 
 110:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 111:hr_sensor_hw.c **** 
 112:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 113:hr_sensor_hw.c ****  *  NAME
 114:hr_sensor_hw.c ****  *      appBuzzerTimerHandler
 115:hr_sensor_hw.c ****  *
 116:hr_sensor_hw.c ****  *  DESCRIPTION
 117:hr_sensor_hw.c ****  *      This function is used to stop the Buzzer at the expiry of 
 118:hr_sensor_hw.c ****  *      timer.
 119:hr_sensor_hw.c ****  *
 120:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 121:hr_sensor_hw.c ****  *      Nothing.
 122:hr_sensor_hw.c ****  *
 123:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 124:hr_sensor_hw.c **** static void appBuzzerTimerHandler(timer_id tid)
 125:hr_sensor_hw.c **** {
 126:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 127:hr_sensor_hw.c **** 
 128:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 129:hr_sensor_hw.c **** 
 130:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 131:hr_sensor_hw.c ****     {
 132:hr_sensor_hw.c ****         case buzzer_beep_short: /* FALLTHROUGH */
 133:hr_sensor_hw.c ****         case buzzer_beep_long:
 134:hr_sensor_hw.c ****         {
 135:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 136:hr_sensor_hw.c **** 
 137:hr_sensor_hw.c ****             /* Disable buzzer */
 138:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 139:hr_sensor_hw.c ****         }
 140:hr_sensor_hw.c ****         break;
 141:hr_sensor_hw.c ****         case buzzer_beep_twice:
 142:hr_sensor_hw.c ****         {
 143:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 144:hr_sensor_hw.c ****             {
 145:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 146:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 147:hr_sensor_hw.c **** 
 148:hr_sensor_hw.c ****                 /* Disable buzzer */
 149:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 150:hr_sensor_hw.c **** 
 151:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 152:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 153:hr_sensor_hw.c ****             }
 154:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 155:hr_sensor_hw.c ****             {
 156:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 157:hr_sensor_hw.c **** 
 158:hr_sensor_hw.c ****                 /* Enable buzzer */
 159:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 160:hr_sensor_hw.c **** 
 161:hr_sensor_hw.c ****                 /* Start another short beep */
 162:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 163:hr_sensor_hw.c ****             }
 164:hr_sensor_hw.c ****             else
 165:hr_sensor_hw.c ****             {
 166:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 167:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 168:hr_sensor_hw.c **** 
 169:hr_sensor_hw.c ****                 /* Disable buzzer */
 170:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 171:hr_sensor_hw.c **** 
 172:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 173:hr_sensor_hw.c ****             }
 174:hr_sensor_hw.c ****         }
 175:hr_sensor_hw.c ****         break;
 176:hr_sensor_hw.c ****         case buzzer_beep_thrice:
 177:hr_sensor_hw.c ****         {
 178:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 179:hr_sensor_hw.c ****                g_app_hw_data.beep_count == 2)
 180:hr_sensor_hw.c ****             {
 181:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 182:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 183:hr_sensor_hw.c **** 
 184:hr_sensor_hw.c ****                 /* Disable buzzer */
 185:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 186:hr_sensor_hw.c **** 
 187:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 188:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 189:hr_sensor_hw.c ****             }
 190:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 191:hr_sensor_hw.c ****                     g_app_hw_data.beep_count == 3)
 192:hr_sensor_hw.c ****             {
 193:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 194:hr_sensor_hw.c **** 
 195:hr_sensor_hw.c ****                 /* Enable buzzer */
 196:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 197:hr_sensor_hw.c **** 
 198:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 199:hr_sensor_hw.c ****             }
 200:hr_sensor_hw.c ****             else
 201:hr_sensor_hw.c ****             {
 202:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 203:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 204:hr_sensor_hw.c **** 
 205:hr_sensor_hw.c ****                 /* Disable buzzer */
 206:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 207:hr_sensor_hw.c **** 
 208:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 209:hr_sensor_hw.c ****             }
 210:hr_sensor_hw.c ****         }
 211:hr_sensor_hw.c ****         break;
 212:hr_sensor_hw.c **** 
 213:hr_sensor_hw.c ****         default:
 214:hr_sensor_hw.c ****         {
 215:hr_sensor_hw.c ****             /* No such beep type */
 216:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 217:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 218:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 219:hr_sensor_hw.c ****              */
 220:hr_sensor_hw.c ****         }
 221:hr_sensor_hw.c ****         break;
 222:hr_sensor_hw.c ****     }
 223:hr_sensor_hw.c **** 
 224:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 225:hr_sensor_hw.c ****     {
 226:hr_sensor_hw.c ****         /* start the timer */
 227:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 228:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 229:hr_sensor_hw.c ****     }
 230:hr_sensor_hw.c **** }
 231:hr_sensor_hw.c **** 
 232:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER*/
 233:hr_sensor_hw.c **** 
 234:hr_sensor_hw.c **** /*============================================================================*
 235:hr_sensor_hw.c ****  *  Public Function Implementations
 236:hr_sensor_hw.c ****  *============================================================================*/
 237:hr_sensor_hw.c **** 
 238:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 239:hr_sensor_hw.c ****  *  NAME
 240:hr_sensor_hw.c ****  *      HrInitHardware 
 241:hr_sensor_hw.c ****  *
 242:hr_sensor_hw.c ****  *  DESCRIPTION
 243:hr_sensor_hw.c ****  *      This function is called to initialise heart rate hardware
 244:hr_sensor_hw.c ****  *
 245:hr_sensor_hw.c ****  *  RETURNS
 246:hr_sensor_hw.c ****  *      Nothing.
 247:hr_sensor_hw.c ****  *
 248:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 249:hr_sensor_hw.c **** 
 250:hr_sensor_hw.c **** extern void HrInitHardware(void)
 251:hr_sensor_hw.c **** {
 252:hr_sensor_hw.c ****     /* Setup PIOs
 253:hr_sensor_hw.c ****      * PIO3 - Buzzer
 254:hr_sensor_hw.c ****      * PIO4 - LED 1
 255:hr_sensor_hw.c ****      * PIO9 - On Board Input - HR input 
 256:hr_sensor_hw.c ****      *            when actual measurements 
 257:hr_sensor_hw.c ****      *            are enabled
 258:hr_sensor_hw.c ****      * PIO10 - LED 2 (Not Used)
 259:hr_sensor_hw.c ****      * PIO11 - Button
 260:hr_sensor_hw.c ****      */
 261:hr_sensor_hw.c **** #ifdef NO_ACTUAL_MEASUREMENT
 262:hr_sensor_hw.c **** 
 263:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 264:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 265:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 266:hr_sensor_hw.c **** 
 267:hr_sensor_hw.c ****     /* Setup button on PIO11 */
 268:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 269:hr_sensor_hw.c **** 
 270:hr_sensor_hw.c **** #else /* NO_ACTUAL_MEASUREMENT */
 271:hr_sensor_hw.c **** 
 272:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 273:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 274:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 275:hr_sensor_hw.c **** 
 276:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 277:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 278:hr_sensor_hw.c **** 
 279:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 280:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 281:hr_sensor_hw.c **** 
 282:hr_sensor_hw.c **** #endif /* ! NO_ACTUAL_MEASUREMENT */
 283:hr_sensor_hw.c **** 
 284:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 285:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 286:hr_sensor_hw.c **** 
 287:hr_sensor_hw.c ****     /* Configure the buzzer on PIO3 */
 288:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 289:hr_sensor_hw.c ****                  DULL_BUZZ_OFF_TIME, DULL_BUZZ_HOLD_TIME, BRIGHT_BUZZ_ON_TIME,
 290:hr_sensor_hw.c ****                  BRIGHT_BUZZ_OFF_TIME, BRIGHT_BUZZ_HOLD_TIME, BUZZ_RAMP_RATE);
 291:hr_sensor_hw.c **** 
 292:hr_sensor_hw.c **** 
 293:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 294:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 295:hr_sensor_hw.c **** 
 296:hr_sensor_hw.c **** 
 297:hr_sensor_hw.c ****     /* Save power by changing the I2C pull mode to pull down.*/
 298:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 299:hr_sensor_hw.c **** 
 300:hr_sensor_hw.c ****     HrInitSwitchHardware();
 301:hr_sensor_hw.c **** }
 302:hr_sensor_hw.c **** 
 303:hr_sensor_hw.c **** 
 304:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 305:hr_sensor_hw.c ****  *  NAME
 306:hr_sensor_hw.c ****  *      HrHwDataInit
 307:hr_sensor_hw.c ****  *
 308:hr_sensor_hw.c ****  *  DESCRIPTION
 309:hr_sensor_hw.c ****  *      This function initialises HR sensor hardware data structure
 310:hr_sensor_hw.c ****  *
 311:hr_sensor_hw.c ****  *  RETURNS
 312:hr_sensor_hw.c ****  *      Nothing.
 313:hr_sensor_hw.c ****  *
 314:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 315:hr_sensor_hw.c **** 
 316:hr_sensor_hw.c **** extern void HrHwDataInit(void)
 317:hr_sensor_hw.c **** {
 318:hr_sensor_hw.c **** 
 319:hr_sensor_hw.c ****     /* Delete button press timer */
 320:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
 321:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
 322:hr_sensor_hw.c ****     HrInitSwitchData();
 323:hr_sensor_hw.c **** }
 324:hr_sensor_hw.c **** 
 325:hr_sensor_hw.c **** 
 326:hr_sensor_hw.c **** 
 327:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 328:hr_sensor_hw.c ****  *  NAME
 329:hr_sensor_hw.c ****  *      SoundBuzzer
 330:hr_sensor_hw.c ****  *
 331:hr_sensor_hw.c ****  *  DESCRIPTION
 332:hr_sensor_hw.c ****  *      This function is called to trigger beeps of different types 
 333:hr_sensor_hw.c ****  *      'buzzer_beep_type'.
 334:hr_sensor_hw.c ****  *
 335:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 336:hr_sensor_hw.c ****  *      Nothing.
 337:hr_sensor_hw.c ****  *
 338:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 339:hr_sensor_hw.c **** 
 340:hr_sensor_hw.c **** extern void SoundBuzzer(buzzer_beep_type beep_type)
 341:hr_sensor_hw.c **** {
 342:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 343:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 344:hr_sensor_hw.c **** 
 345:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 346:hr_sensor_hw.c **** 
 347:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 348:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 349:hr_sensor_hw.c **** 
 350:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 351:hr_sensor_hw.c **** 
 352:hr_sensor_hw.c ****     /* Store the beep type in some global variable. It will used on timer 
 353:hr_sensor_hw.c ****      * expiry to check the type of beeps being sounded.
 354:hr_sensor_hw.c ****      */
 355:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 356:hr_sensor_hw.c **** 
 357:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 358:hr_sensor_hw.c ****     {
 359:hr_sensor_hw.c ****         case buzzer_beep_off:
 360:hr_sensor_hw.c ****         {
 361:hr_sensor_hw.c ****             /* Don't do anything */
 362:hr_sensor_hw.c ****         }
 363:hr_sensor_hw.c ****         break;
 364:hr_sensor_hw.c **** 
 365:hr_sensor_hw.c ****         case buzzer_beep_short: /* One short beep will be sounded */
 366:hr_sensor_hw.c ****             /* FALLTHROUGH */
 367:hr_sensor_hw.c ****         case buzzer_beep_twice: /* Two short beeps will be sounded */
 368:hr_sensor_hw.c ****             /* FALLTHROUGH */
 369:hr_sensor_hw.c ****         case buzzer_beep_thrice: /* Three short beeps will be sounded */
 370:hr_sensor_hw.c ****         {
 371:hr_sensor_hw.c ****             beep_timer = SHORT_BEEP_TIMER_VALUE;
 372:hr_sensor_hw.c ****         }
 373:hr_sensor_hw.c ****         break;
 374:hr_sensor_hw.c **** 
 375:hr_sensor_hw.c ****         case buzzer_beep_long:
 376:hr_sensor_hw.c ****         {
 377:hr_sensor_hw.c ****             /* One long beep will be sounded */
 378:hr_sensor_hw.c ****             beep_timer = LONG_BEEP_TIMER_VALUE;
 379:hr_sensor_hw.c ****         }
 380:hr_sensor_hw.c ****         break;
 381:hr_sensor_hw.c **** 
 382:hr_sensor_hw.c ****         default:
 383:hr_sensor_hw.c ****         {
 384:hr_sensor_hw.c ****             /* No such beep type defined */
 385:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 386:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 387:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 388:hr_sensor_hw.c ****              */
 389:hr_sensor_hw.c ****         }
 390:hr_sensor_hw.c ****         break;
 391:hr_sensor_hw.c ****     }
 392:hr_sensor_hw.c **** 
 393:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 394:hr_sensor_hw.c ****     {
 395:hr_sensor_hw.c ****         /* Initialize beep count to zero */
 396:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 397:hr_sensor_hw.c **** 
 398:hr_sensor_hw.c ****         /* Enable buzzer */
 399:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 400:hr_sensor_hw.c **** 
 401:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 402:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 403:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 404:hr_sensor_hw.c ****     }
 405:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 406:hr_sensor_hw.c **** }
 407:hr_sensor_hw.c **** 
 408:hr_sensor_hw.c **** 
 409:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 410:hr_sensor_hw.c **** 
 411:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 412:hr_sensor_hw.c ****  *  NAME
 413:hr_sensor_hw.c ****  *      GetRRValue
 414:hr_sensor_hw.c ****  *
 415:hr_sensor_hw.c ****  *  DESCRIPTION
 416:hr_sensor_hw.c ****  *      Get RR value by reading the HR_INPUT_PIO
 417:hr_sensor_hw.c ****  *
 418:hr_sensor_hw.c ****  *  RETURNS
 419:hr_sensor_hw.c ****  *      UINT32: RR value 
 420:hr_sensor_hw.c ****  *
 421:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 422:hr_sensor_hw.c **** 
 423:hr_sensor_hw.c **** extern uint32 GetRRValue(void)
 424:hr_sensor_hw.c **** {
 425:hr_sensor_hw.c **** 
 426:hr_sensor_hw.c ****     /* handle heartrate events ie changes to HR_INPUT_PIO */
 427:hr_sensor_hw.c ****     /* value is in 30.517us (32768KHz) intervals */
 428:hr_sensor_hw.c **** 
 429:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 430:hr_sensor_hw.c **** 
 431:hr_sensor_hw.c **** }
 432:hr_sensor_hw.c **** 
 433:hr_sensor_hw.c **** #endif /* !NO_ACTUAL_MEASUREMENT */
 434:hr_sensor_hw.c **** 
 435:hr_sensor_hw.c **** 
 436:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 437:hr_sensor_hw.c ****  *  NAME
 438:hr_sensor_hw.c ****  *      HandlePIOChangedEvent
 439:hr_sensor_hw.c ****  *
 440:hr_sensor_hw.c ****  *  DESCRIPTION
 441:hr_sensor_hw.c ****  *      This function handles PIO Changed event
 442:hr_sensor_hw.c ****  *
 443:hr_sensor_hw.c ****  *  RETURNS
 444:hr_sensor_hw.c ****  *      Nothing.
 445:hr_sensor_hw.c ****  *
 446:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 447:hr_sensor_hw.c **** 
 448:hr_sensor_hw.c **** extern void HandlePIOChangedEvent(uint32 pio_changed)
 449:hr_sensor_hw.c **** {
 450:hr_sensor_hw.c ****     /* PIO changed */
 451:hr_sensor_hw.c ****     uint32 pios = PioGets();
 452:hr_sensor_hw.c **** 
 453:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 454:hr_sensor_hw.c ****     {
 455:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 456:hr_sensor_hw.c ****         {
 457:hr_sensor_hw.c ****             /* This event comes when a button is pressed */
 458:hr_sensor_hw.c **** 
 459:hr_sensor_hw.c ****             /* Start a timer for LONG_BUTTON_PRESS_TIMER seconds. If timer expi-
 460:hr_sensor_hw.c ****              * res before we receive a button release event then it was a long -
 461:hr_sensor_hw.c ****              * press and if we receive a button release pio changed event, it -
 462:hr_sensor_hw.c ****              * means it was a short press.
 463:hr_sensor_hw.c ****              */
 464:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 465:hr_sensor_hw.c **** 
 466:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 467:hr_sensor_hw.c ****                                            EXTRA_LONG_BUTTON_PRESS_TIMER,
 468:hr_sensor_hw.c ****                                            TRUE,
 469:hr_sensor_hw.c ****                                            HandleExtraLongButtonPress);
 470:hr_sensor_hw.c ****         }
 471:hr_sensor_hw.c ****         else
 472:hr_sensor_hw.c ****         {
 473:hr_sensor_hw.c ****             /* This event comes when a button is released */
 474:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 475:hr_sensor_hw.c ****             {
 476:hr_sensor_hw.c ****                 /* Timer was already running. This means it was a short button 
 477:hr_sensor_hw.c ****                  * press.
 478:hr_sensor_hw.c ****                  */
 479:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 480:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 481:hr_sensor_hw.c **** 
 482:hr_sensor_hw.c ****                 HandleShortButtonPress();
 483:hr_sensor_hw.c ****             }
 484:hr_sensor_hw.c ****         }
 485:hr_sensor_hw.c ****     }
 486:hr_sensor_hw.c ****     /* Move DIMMER_PIO_MASK directly into file if problems */
 487:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 488:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 489:hr_sensor_hw.c ****     }
 490:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 491:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 492:hr_sensor_hw.c ****     {
 493:hr_sensor_hw.c ****         /* Process the event on the falling edge and ignore the rising edge 
 494:hr_sensor_hw.c ****          * events.
 495:hr_sensor_hw.c ****          */
 496:hr_sensor_hw.c ****         // FlipSwitch();
 497:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 498:hr_sensor_hw.c ****         {
 499:hr_sensor_hw.c ****             HandleHRInputEvent();
 500:hr_sensor_hw.c ****         }
 501:hr_sensor_hw.c ****     }
 502:hr_sensor_hw.c **** #endif
 503:hr_sensor_hw.c **** 
 504:hr_sensor_hw.c **** }
 505:hr_sensor_hw.c **** 
 506:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 507:hr_sensor_hw.c ****  *  NAME
 508:hr_sensor_hw.c ****  *      HrInitSwitchHardware 
 509:hr_sensor_hw.c ****  *
 510:hr_sensor_hw.c ****  *  DESCRIPTION
 511:hr_sensor_hw.c ****  *      This function is called to initialise switch hardware
 512:hr_sensor_hw.c ****  *
 513:hr_sensor_hw.c ****  *  RETURNS
 514:hr_sensor_hw.c ****  *      Nothing.
 515:hr_sensor_hw.c ****  *
 516:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 517:hr_sensor_hw.c **** 
 518:hr_sensor_hw.c **** extern void HrInitSwitchHardware(void)
 519:hr_sensor_hw.c **** {
 520:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
 521:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
 522:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
 523:hr_sensor_hw.c **** 
 524:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 525:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 526:hr_sensor_hw.c **** 
 527:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 528:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
 529:hr_sensor_hw.c **** }
 530:hr_sensor_hw.c **** 
 531:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 532:hr_sensor_hw.c ****  *  NAME
 533:hr_sensor_hw.c ****  *      HrHwDataInit
 534:hr_sensor_hw.c ****  *
 535:hr_sensor_hw.c ****  *  DESCRIPTION
 536:hr_sensor_hw.c ****  *      This function initialises switch hardware data structure
 537:hr_sensor_hw.c ****  *
 538:hr_sensor_hw.c ****  *  RETURNS
 539:hr_sensor_hw.c ****  *      Nothing.
 540:hr_sensor_hw.c ****  *
 541:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 542:hr_sensor_hw.c **** 
 543:hr_sensor_hw.c **** extern void HrInitSwitchData(void)
 544:hr_sensor_hw.c **** {
  20                 	 1 547 0
 545:hr_sensor_hw.c ****     /* Reset last value */
 546:hr_sensor_hw.c **** }
  21                 	bra	0,X
  22 0000 00 E2       	.LFE9:
  23                 		.size	HrInitSwitchData, .-HrInitSwitchData
  24                 		.global	__size_of_HrInitSwitchData
  25                 		.equ	__size_of_HrInitSwitchData,. - HrInitSwitchData
  26                 		.section	.text.HandleSwitchPIOChangedEvent,"ax",@progbits
  27                 		.global	HandleSwitchPIOChangedEvent
  28                 		.type	HandleSwitchPIOChangedEvent, @function
  29                 	HandleSwitchPIOChangedEvent:
  30                 	.LFB10:
  31                 		.loc 1 562 0
 547:hr_sensor_hw.c **** 
 548:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 549:hr_sensor_hw.c ****  *  NAME
 550:hr_sensor_hw.c ****  *      HandleSwitchPIOChangedEvent
 551:hr_sensor_hw.c ****  *
 552:hr_sensor_hw.c ****  *  DESCRIPTION
 553:hr_sensor_hw.c ****  *      This function handles Switch PIO Changed event
 554:hr_sensor_hw.c ****  *
 555:hr_sensor_hw.c ****  *  RETURNS
 556:hr_sensor_hw.c ****  *      Nothing.
 557:hr_sensor_hw.c ****  *
 558:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 559:hr_sensor_hw.c **** 
 560:hr_sensor_hw.c **** extern void HandleSwitchPIOChangedEvent(uint32 pio_changed)
 561:hr_sensor_hw.c **** {
  32                 	c 1 563 0
  33                 		ld	AL,#0x0000
 562:hr_sensor_hw.c ****     g_dimmer_data.last_dimmer_var = 0;
  34                 	t	AL,@g_dimmer_data
  35 0000 00 14       		.loc 1 565 0
  36 0001 00 00 00 25 		bra	0,X
 563:hr_sensor_hw.c ****     // FlipSwitch();
 564:hr_sensor_hw.c **** }...
  37                 	E10:
  38 0003 00 E2       		.size	HandleSwitchPIOChangedEvent, .-HandleSwitchPIOChangedEvent
  39                 		.global	__size_of_HandleSwitchPIOChangedEvent
  40                 		.equ	__size_of_HandleSwitchPIOChangedEvent,. - HandleSwitchPIOChangedEvent
  41                 		.section	.text.HrInitSwitchHardware,"ax",@progbits
  42                 		.global	HrInitSwitchHardware
  43                 		.type	HrInitSwitchHardware, @function
  44                 	HrInitSwitchHardware:
  45                 	.LFB8:
  46                 		.loc 1 520 0
  47                 		enter	#0x0002
 520:hr_sensor_hw.c **** {
  48                 	oc 1 521 0
  49 0000 02 0B       		ld	AL,#0x0001
  50                 		st	AL,@(0,Y)
 521:hr_sensor_hw.c ****     PioSetModes(DIMMER_PIO_MASK, pio_mode_edge_capture); 
  51                 		AH,#0x0000
  52 0001 01 14       		ld	AL,#0x0008
  53 0002 00 27       		bsr	PioSetModes
  54 0003 00 10       		.loc 1 522 0
  55 0004 08 14       		ld	AL,#0x0003
  56 0005 00 00 00 00 		ld	AH,#0x0000
  56      00 9C 
 522:hr_sensor_hw.c ****     PioSetDir(DIMMER_PIO, PIO_DIRECTION_INPUT);
  57                 	ioSetDir
  58 0008 03 14       		.loc 1 523 0
  59 0009 00 10       		ld	AL,#0x0007
  60 000a 00 00 00 00 		st	AL,@(0,Y)
  60      00 9C 
 523:hr_sensor_hw.c ****     PioSetPullModes(DIMMER_PIO_MASK, pio_mode_strong_pull_up);
  61                 	AH,#0x0000
  62 000d 07 14       		ld	AL,#0x0008
  63 000e 00 27       		bsr	PioSetPullModes
  64 000f 00 10       		.loc 1 526 0
  65 0010 08 14       		ld	AL,#0x0001
  66 0011 00 00 00 00 		ld	AH,#0x0000
  66      00 9C 
 526:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
  67                 	ioEnableEdgeCapture
  68 0014 01 14       		.loc 1 529 0
  69 0015 00 10       		ld	AL,#0x0003
  70 0016 00 00 00 00 		st	AL,@(0,Y)
  70      00 9C 
 529:hr_sensor_hw.c ****     PioSetEventMask(DIMMER_PIO_MASK, pio_event_mode_both);
  71                 	AH,#0x0000
  72 0019 03 14       		ld	AL,#0x0008
  73 001a 00 27       		bsr	PioSetEventMask
  74 001b 00 10       		.loc 1 530 0
  75 001c 08 14       		leave	#0x0002
  76 001d 00 00 00 00 	.LFE8:
  76      00 9C 
 530:hr_sensor_hw.c **** }
  77                 		HrInitSwitchHardware, .-HrInitSwitchHardware
  78 0020 02 0F       		.global	__size_of_HrInitSwitchHardware
  79                 		.equ	__size_of_HrInitSwitchHardware,. - HrInitSwitchHardware
  80                 		.section	.text.HrHwDataInit,"ax",@progbits
  81                 		.global	HrHwDataInit
  82                 		.type	HrHwDataInit, @function
  83                 	HrHwDataInit:
  84                 	.LFB4:
  85                 		.loc 1 318 0
  86                 		enter	#0x0001
  87                 	.LCFI1:
 318:hr_sensor_hw.c **** {
  88                 	 0
  89 0000 01 0B       		ld	X,#g_app_hw_data+3
  90                 		ld	AL,@(0,X)
 321:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
  91                 	r	TimerDelete
  92 0001 00 00 00 18 		.loc 1 322 0
  93 0003 00 16       		ld	AL,#0x0000
  94 0004 00 00 00 00 		ld	X,#g_app_hw_data+3
  94      00 9C 
 322:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
  95                 	AL,@(0,X)
  96 0007 00 14       		.loc 1 324 0
  97 0008 00 00 00 18 		leave	#0x0001
  98 000a 00 26       	.LFE4:
 324:hr_sensor_hw.c **** }
  99                 	ze	HrHwDataInit, .-HrHwDataInit
 100 000b 01 0F       		.global	__size_of_HrHwDataInit
 101                 		.equ	__size_of_HrHwDataInit,. - HrHwDataInit
 102                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
 103                 		.global	HandlePIOChangedEvent
 104                 		.type	HandlePIOChangedEvent, @function
 105                 	HandlePIOChangedEvent:
 106                 	.LFB7:
 107                 		.loc 1 450 0
 108                 	.LVL1:
 109                 		enter	#0x0005
 450:hr_sensor_hw.c **** {
 110                 		AH,@(0x0002,Y)
 111                 		st	AL,@(0x0003,Y)
 112 0000 05 0B       	.LVL2:
 113                 		.loc 1 452 0
 114 0001 02 23       		bsr	PioGets
 115 0002 03 27       	.LVL3:
 116                 		ld	AH,@$XAP_AL
 452:hr_sensor_hw.c ****     uint32 pios = PioGets();
 117                 		.loc 1 454 0
 118 0003 00 00 00 00 		ld	AL,@(0x0003,Y)
 118      00 9C 
 119                 		and	AL,#0x0800
 120 0006 00 00 00 11 		beq	.L10
 121                 		.loc 1 456 0
 454:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
 122                 	L,@$XAP_AH
 123 0008 03 17       		and	AL,#0x0800
 124 0009 08 00 00 C4 		bne	.L11
 125 000b 00 00 00 00 		.loc 1 465 0
 125      00 F4 
 456:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
 126                 	AL,@g_app_hw_data+0x0003
 127 000e 00 00 00 15 		bsr	TimerDelete
 128 0010 08 00 00 C4 	.LVL5:
 129 0012 00 00 00 00 		.loc 1 467 0
 129      00 F0 
 465:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
 130                 	AL,#0x0001
 131 0015 00 00 00 15 		st	AL,@(0,Y)
 132 0017 00 00 00 00 		ld	AL,#HandleExtraLongButtonPress
 132      00 9C 
 133                 		st	AL,@(0x0001,Y)
 467:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
 134                 	AH,#0x003d
 135 001a 01 14       		ld	AL,#0x0900
 136 001b 00 27       		bsr	TimerCreate
 137 001c 00 00 00 14 		st	AL,@g_app_hw_data+0x0003
 138 001e 01 27       		bra	.L14
 139 001f 3D 10       	.LVL6:
 140 0020 09 00 00 14 	.L11:
 141 0022 00 00 00 00 		.loc 1 475 0
 141      00 9C 
 142 0025 00 00 00 25 		ld	AL,@g_app_hw_data+0x0003
 143 0027 00 00 00 00 		beq	.L14
 143      00 E0 
 144                 		.loc 1 480 0
 145                 		bsr	TimerDelete
 475:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
 146                 	 1 481 0
 147 002a 00 00 00 15 		ld	AL,#0x0000
 148 002c 00 00 00 00 		st	AL,@g_app_hw_data+0x0003
 148      00 F4 
 480:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
 149                 	oc 1 483 0
 150 002f 00 00 00 00 		bsr	HandleShortButtonPress
 150      00 9C 
 151                 		bra	.L14
 481:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
 152                 	L8:
 153 0032 00 14       	.L10:
 154 0033 00 00 00 25 		.loc 1 488 0
 483:hr_sensor_hw.c ****                 HandleShortButtonPress();
 155                 		AL,@(0x0003,Y)
 156 0035 00 00 00 00 		and	AL,#0x0008
 156      00 9C 
 157 0038 00 00 00 00 		beq	.L13
 157      00 E0 
 158                 		.loc 1 489 0
 159                 		ld	AH,@(0x0002,Y)
 488:hr_sensor_hw.c ****     else if (pio_changed & DIMMER_PIO_MASK) {
 160                 	:
 161 003b 03 17       		ld	AL,@(0x0003,Y)
 162 003c 08 C4       		bsr	HandleSwitchPIOChangedEvent
 163 003d 00 00 00 00 		bra	.L14
 163      00 F4 
 489:hr_sensor_hw.c ****         HandleSwitchPIOChangedEvent(pio_changed);
 164                 	10:
 165 0040 02 13       	.L13:
 166                 		.loc 1 492 0
 167 0041 03 17       		ld	AL,@(0x0003,Y)
 168 0042 00 00 00 00 		and	AL,#0x0200
 168      00 9C 
 169 0045 00 00 00 00 		beq	.L14
 169      00 E0 
 170                 		.loc 1 498 0
 171                 		ld	AL,@$XAP_AH
 492:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 172                 	#0x0200
 173 0048 03 17       		bne	.L14
 174 0049 02 00 00 C4 		.loc 1 500 0
 175 004b 00 00 00 00 		bsr	HandleHRInputEvent
 175      00 F4 
 498:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 176                 	11:
 177 004e 00 00 00 15 	.L14:
 178 0050 02 00 00 C4 		.loc 1 505 0
 179 0052 00 00 00 00 		leave	#0x0005
 179      00 F0 
 500:hr_sensor_hw.c ****             HandleHRInputEvent();
 180                 	7:
 181 0055 00 00 00 00 		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
 181      00 9C 
 182                 		.global	__size_of_HandlePIOChangedEvent
 183                 		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
 505:hr_sensor_hw.c **** }
 184                 	ction	.text.GetRRValue,"ax",@progbits
 185 0058 05 0F       		.global	GetRRValue
 186                 		.type	GetRRValue, @function
 187                 	GetRRValue:
 188                 	.LFB6:
 189                 		.loc 1 425 0
 190                 		.loc 1 430 0
 191                 		bra	PioReadEdgeCapture
 192                 	.LFE6:
 193                 		.size	GetRRValue, .-GetRRValue
 194                 		.global	__size_of_GetRRValue
 425:hr_sensor_hw.c **** {
 195                 	e_of_GetRRValue,. - GetRRValue
 430:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 196                 	.section	.text.SoundBuzzer,"ax",@progbits
 197 0000 00 00 00 00 		.global	SoundBuzzer
 197      00 E0 
 198                 		.type	SoundBuzzer, @function
 199                 	SoundBuzzer:
 200                 	.LFB5:
 201                 		.loc 1 342 0
 202                 	.LVL12:
 203                 		enter	#0x0006
 204                 	.LCFI3:
 205                 		st	AL,@(0x0002,Y)
 206                 		.loc 1 346 0
 342:hr_sensor_hw.c **** {
 207                 	000
 208                 	.LVL13:
 209 0000 06 0B       		ld	AH,#0x0000
 210                 		bsr	PioEnablePWM
 211 0001 02 27       		.loc 1 348 0
 346:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 212                 	L,@g_app_hw_data
 213 0002 00 14       		bsr	TimerDelete
 214                 		.loc 1 349 0
 215 0003 00 10       		ld	AL,#0x0000
 216 0004 00 00 00 00 		st	AL,@g_app_hw_data
 216      00 9C 
 348:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 217                 	 1 351 0
 218 0007 00 00 00 15 		st	AL,@g_app_hw_data+0x0002
 219 0009 00 00 00 00 		.loc 1 356 0
 219      00 9C 
 349:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 220                 		AL,@(0x0002,Y)
 221 000c 00 14       		st	AL,@g_app_hw_data+0x0001
 222 000d 00 00 00 25 		.loc 1 358 0
 351:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 223                 	p	AL,#0x0005
 224 000f 00 00 00 25 		bcc	.L18
 356:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 225                 	d	AL,#0x0001
 226 0011 02 17       		asl	@(0x0002,Y)
 227 0012 00 00 00 25 		ld	AH,@$XAP_AL
 358:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 228                 	d	AL,#0x001b
 229 0014 05 84       		bne	.L25
 230 0015 00 00 00 00 		ld	AL,@$XAP_AH
 230      00 F8 
 231 0018 01 14       		and	AL,#0x0004
 232 0019 02 A3       		beq	.L18
 233 001a 00 00 00 11 		ld	AL,#0x0007
 234 001c 1B C4       		st	AL,@(0x0003,Y)
 235 001d 00 00 00 00 		ld	AL,#0xa120
 235      00 F0 
 236 0020 00 00 00 15 		bra	.L24
 237 0022 04 C4       	.L18:
 238 0023 00 00 00 00 		.loc 1 386 0
 238      00 F4 
 239 0026 07 14       		ld	AL,#0x000b
 240 0027 03 27       		bsr	ReportPanic
 241 0028 A1 00 20 14 	.L25:
 242 002a 00 00 00 00 		ld	AL,#0x0001
 242      00 E0 
 243                 		st	AL,@(0x0003,Y)
 386:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 244                 	L24:
 245 002d 0B 14       		st	AL,@(0x0004,Y)
 246 002e 00 00 00 00 		.loc 1 394 0
 246      00 9C 
 247                 		tst	@g_app_hw_data+0x0001
 248 0031 01 14       		beq	.L23
 249 0032 03 27       		.loc 1 397 0
 250 0033 87 00 A0 14 		ld	AL,#0x0000
 251                 		st	AL,@g_app_hw_data+0x0002
 252 0035 04 27       		.loc 1 400 0
 394:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 253                 	x0001
 254 0036 00 00 00 99 		bsr	PioEnablePWM
 255 0038 00 00 00 00 		.loc 1 402 0
 255      00 F4 
 397:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 256                 		AL,@g_app_hw_data
 257 003b 00 14       		bsr	TimerDelete
 258 003c 00 00 00 25 		.loc 1 403 0
 400:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 259                 		AL,#0x0001
 260 003e 01 10       		st	AL,@(0,Y)
 261 003f 00 00 00 00 		ld	AL,#appBuzzerTimerHandler
 261      00 9C 
 402:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 262                 		AL,@(0x0001,Y)
 263 0042 00 00 00 15 		ld	AH,@(0x0003,Y)
 264 0044 00 00 00 00 		ld	AL,@(0x0004,Y)
 264      00 9C 
 403:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 265                 	r	TimerCreate
 266 0047 01 14       		st	AL,@g_app_hw_data
 267 0048 00 27       	.L23:
 268 0049 00 00 00 14 		.loc 1 407 0
 269 004b 01 27       		leave	#0x0006
 270 004c 03 13       	.LFE5:
 271 004d 04 17       		.size	SoundBuzzer, .-SoundBuzzer
 272 004e 00 00 00 00 		.global	__size_of_SoundBuzzer
 272      00 9C 
 273 0051 00 00 00 25 		.equ	__size_of_SoundBuzzer,. - SoundBuzzer
 274                 		.section	.text.appBuzzerTimerHandler,"ax",@progbits
 407:hr_sensor_hw.c **** }
 275                 	BuzzerTimerHandler, @function
 276 0053 06 0F       	appBuzzerTimerHandler:
 277                 	.LFB2:
 278                 		.loc 1 126 0
 279                 	.LVL14:
 280                 		enter	#0x0003
 281                 	.LCFI4:
 282                 		.loc 1 129 0
 283                 		ld	AL,#0x0000
 284                 	.LVL15:
 126:hr_sensor_hw.c **** {
 285                 	app_hw_data
 286                 		.loc 1 131 0
 287 0000 03 0B       		ld	AL,@g_app_hw_data+0x0001
 288                 		cmp	AL,#0x0003
 129:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 289                 		.L29
 290 0001 00 14       		cmp	AL,#0x0004
 291                 		bcc	.L31
 292 0002 00 00 00 25 		cmp	AL,#0x0001
 131:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 293                 		.L27
 294 0004 00 00 00 15 		bra	.L46
 295 0006 03 84       	.L31:
 296 0007 00 00 00 00 		cmp	AL,#0x0004
 296      00 F4 
 297 000a 04 84       		bne	.L27
 298 000b 00 00 00 00 		bra	.L47
 298      00 F8 
 299 000e 01 84       	.L46:
 300 000f 00 00 00 00 		.loc 1 136 0
 300      00 FC 
 301 0012 00 00 00 00 		ld	X,#0x0000
 301      00 E0 
 302                 		st	X,@g_app_hw_data+0x0001
 303 0015 04 84       		.loc 1 139 0
 304 0016 00 00 00 00 		ld	AL,#0x0000
 304      00 F0 
 305 0019 00 00 00 00 		ld	AH,#0x0000
 305      00 E0 
 306                 		bra	.L44
 136:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 307                 	144 0
 308 001c 00 18       		ld	AL,@g_app_hw_data+0x0002
 309 001d 00 00 00 29 		bne	.L33
 139:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 310                 	oc 1 147 0
 311 001f 00 14       		ld	AL,#0x0001
 312 0020 00 10       		bra	.L43
 313 0021 00 00 00 00 	.L33:
 313      00 E0 
 314                 		.loc 1 155 0
 144:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 315                 	AL,#0x0001
 316 0024 00 00 00 15 		bne	.L38
 317 0026 00 00 00 00 		.loc 1 157 0
 317      00 F0 
 147:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 318                 		X,#0x0002
 319 0029 01 14       		st	X,@g_app_hw_data+0x0002
 320 002a 00 00 00 00 		bra	.L45
 320      00 E0 
 321                 	.L47:
 155:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 322                 	c 1 179 0
 323 002d 01 84       		ld	AL,@g_app_hw_data+0x0002
 324 002e 00 00 00 00 		beq	.L35
 324      00 F0 
 157:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 325                 	p	AL,#0x0002
 326 0031 02 18       		bne	.L36
 327 0032 00 00 00 29 	.L35:
 328 0034 00 00 00 00 		.loc 1 183 0
 328      00 E0 
 329                 		add	AL,#0x0001
 179:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 330                 	
 331 0037 00 00 00 15 		st	AL,@g_app_hw_data+0x0002
 332 0039 00 00 00 00 		.loc 1 186 0
 332      00 F4 
 333 003c 02 84       		ld	AL,#0x0000
 334 003d 00 00 00 00 		ld	AH,#0x0000
 334      00 F0 
 335                 		bsr	PioEnablePWM
 183:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 336                 	H,#0x0000
 337 0040 01 34       	.LVL16:
 338                 		ld	AL,#0x61a8
 339 0041 00 00 00 25 	.LVL17:
 186:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 340                 		.L32
 341 0043 00 14       	.LVL18:
 342 0044 00 10       	.L36:
 343 0045 00 00 00 00 		.loc 1 191 0
 343      00 9C 
 344 0048 00 10       		cmp	AL,#0x0001
 345                 		beq	.L37
 346 0049 62 00 A8 14 		cmp	AL,#0x0003
 347                 		bne	.L38
 348 004b 00 00 00 00 	.L37:
 348      00 E0 
 349                 		.loc 1 194 0
 350                 		add	AL,#0x0001
 191:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 351                 	pp_hw_data+0x0002
 352 004e 01 84       	.L45:
 353 004f 00 00 00 00 		.loc 1 197 0
 353      00 F4 
 354 0052 03 84       		ld	AL,#0x0000
 355 0053 00 00 00 00 		ld	AH,#0x0001
 355      00 F0 
 356                 	.L44:
 194:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 357                 	ioEnablePWM
 358 0056 01 34       		bra	.L42
 359 0057 00 00 00 25 	.L38:
 360                 		.loc 1 204 0
 197:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 361                 	AL,#0x0000
 362 0059 00 14       		st	AL,@g_app_hw_data+0x0002
 363 005a 01 10       		.loc 1 207 0
 364                 		ld	AH,#0x0000
 365 005b 00 00 00 00 		bsr	PioEnablePWM
 365      00 9C 
 366 005e 00 00 00 00 		.loc 1 209 0
 366      00 E0 
 367                 		ld	X,#0x0000
 204:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 368                 	g_app_hw_data+0x0001
 369 0061 00 14       		bra	.L42
 370 0062 00 00 00 25 	.L27:
 207:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 371                 	oc 1 217 0
 372 0064 00 10       		ld	AL,#0x000b
 373 0065 00 00 00 00 		bsr	ReportPanic
 373      00 9C 
 209:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 374                 	2:
 375 0068 00 18       		ld	AH,#0x0001
 376 0069 00 00 00 29 	.LVL19:
 377 006b 00 00 00 00 		ld	AL,#0x86a0
 377      00 E0 
 378                 	.LVL20:
 217:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 379                 	
 380 006e 0B 14       		.loc 1 225 0
 381 006f 00 00 00 00 		tst	@g_app_hw_data+0x0001
 381      00 9C 
 382                 		beq	.L40
 383 0072 01 10       		.loc 1 228 0
 384                 		ld	X,#0x0001
 385 0073 87 00 A0 14 		st	X,@(0,Y)
 386                 		ld	X,#appBuzzerTimerHandler
 387                 		st	X,@(0x0001,Y)
 225:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 388                 	erCreate
 389 0075 00 00 00 99 	.LVL21:
 390 0077 00 00 00 00 		st	AL,@g_app_hw_data
 390      00 F4 
 228:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 391                 	L22:
 392 007a 01 18       	.L40:
 393 007b 00 2B       		.loc 1 231 0
 394 007c 00 00 00 18 		leave	#0x0003
 395 007e 01 2B       	.LFE2:
 396 007f 00 00 00 00 		.size	appBuzzerTimerHandler, .-appBuzzerTimerHandler
 396      00 9C 
 397                 		.equ	__size_of_appBuzzerTimerHandler,. - appBuzzerTimerHandler
 398 0082 00 00 00 25 		.section	.text.HrInitHardware,"ax",@progbits
 399                 		.global	HrInitHardware
 400                 		.type	HrInitHardware, @function
 231:hr_sensor_hw.c **** }
 401                 	ware:
 402 0084 03 0F       	.LFB3:
 403                 		.loc 1 252 0
 404                 		enter	#0x0008
 405                 	.LCFI5:
 406                 		.loc 1 273 0
 407                 		ld	AL,#0x0001
 408                 		st	AL,@(0,Y)
 409                 		ld	AH,#0x0000
 410                 		ld	AL,#0x0200
 252:hr_sensor_hw.c **** {
 411                 	tModes
 412 0000 08 0B       		.loc 1 274 0
 413                 		ld	AL,#0x0009
 273:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 414                 		AH,#0x0000
 415 0001 01 14       		bsr	PioSetDir
 416 0002 00 27       		.loc 1 275 0
 417 0003 00 10       		ld	AL,#0x0007
 418 0004 02 00 00 14 		st	AL,@(0,Y)
 419 0006 00 00 00 00 		ld	AH,#0x0000
 419      00 9C 
 274:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 420                 	,#0x0200
 421 0009 09 14       		bsr	PioSetPullModes
 422 000a 00 10       		.loc 1 278 0
 423 000b 00 00 00 00 		ld	AL,#0x0001
 423      00 9C 
 275:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 424                 	AH,#0x0000
 425 000e 07 14       		bsr	PioEnableEdgeCapture
 426 000f 00 27       		.loc 1 281 0
 427 0010 00 10       		ld	AL,#0x0003
 428 0011 02 00 00 14 		st	AL,@(0,Y)
 429 0013 00 00 00 00 		ld	AH,#0x0000
 429      00 9C 
 278:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 430                 	,#0x0200
 431 0016 01 14       		bsr	PioSetEventMask
 432 0017 00 10       		.loc 1 286 0
 433 0018 00 00 00 00 		ld	AL,#0x0004
 433      00 9C 
 281:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 434                 	AL,@(0,Y)
 435 001b 03 14       		ld	AH,#0x0000
 436 001c 00 27       		ld	AL,#0x0008
 437 001d 00 10       		bsr	PioSetModes
 438 001e 02 00 00 14 		.loc 1 289 0
 439 0020 00 00 00 00 		ld	AL,#0x0002
 439      00 9C 
 286:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 440                 	,@(0,Y)
 441 0023 04 14       		ld	AL,#0x000f
 442 0024 00 27       		st	AL,@(0x0001,Y)
 443 0025 00 10       		ld	AL,#0x0000
 444 0026 08 14       		st	AL,@(0x0002,Y)
 445 0027 00 00 00 00 		ld	AL,#0x0002
 445      00 9C 
 289:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 446                 	,@(0x0003,Y)
 447 002a 02 14       		ld	AL,#0x000f
 448 002b 00 27       		st	AL,@(0x0004,Y)
 449 002c 0F 14       		ld	AL,#0x0000
 450 002d 01 27       		st	AL,@(0x0005,Y)
 451 002e 00 14       		ld	AL,#0x00ff
 452 002f 02 27       		st	AL,@(0x0006,Y)
 453 0030 02 14       		ld	AL,#0x0000
 454 0031 03 27       		ld	AH,#0x0000
 455 0032 0F 14       		bsr	PioConfigPWM
 456 0033 04 27       		.loc 1 294 0
 457 0034 00 14       		ld	AL,#0x0000
 458 0035 05 27       		ld	AH,#0x0000
 459 0036 01 00 FF 14 		bsr	PioEnablePWM
 460 0038 06 27       		.loc 1 299 0
 461 0039 00 14       		ld	AL,#0x0005
 462 003a 00 10       		bsr	PioSetI2CPullMode
 463 003b 00 00 00 00 		.loc 1 301 0
 463      00 9C 
 294:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 464                 	ardware
 465 003e 00 14       		.loc 1 302 0
 466 003f 00 10       		leave	#0x0008
 467 0040 00 00 00 00 	.LFE3:
 467      00 9C 
 299:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 468                 	ze	HrInitHardware, .-HrInitHardware
 469 0043 05 14       		.global	__size_of_HrInitHardware
 470 0044 00 00 00 00 		.equ	__size_of_HrInitHardware,. - HrInitHardware
 470      00 9C 
 301:hr_sensor_hw.c ****     HrInitSwitchHardware();
 471                 	omm g_app_hw_data, 4, 1
 472 0047 00 00 00 00 	
 472      00 9C 
 302:hr_sensor_hw.c **** }
 473                 	comm g_dimmer_data, 1, 1
 474 004a 08 0F       	
 475                 		.section	.debug_frame,"",@progbits
 476                 	.Lframe0:
 477                 		.4byte	.LECIE0-.LSCIE0
 478                 	.LSCIE0:
 479                 		.4byte	0xffffffff
 480                 		.1byte	0x1
 481                 		.ascii "\000"
 482                 		.1byte	0x1
 483                 		.1byte	0x7f
 484                 		.1byte	0x3
 485 0000 00 00 00 00 		.1byte	0xc
 486                 		.1byte	0x5
 487 0002 FF FF FF FF 		.1byte	0x0
 488 0004 01          		.p2align	2
 489 0004 00          	.LECIE0:
 490 0005 01          	.LSFDE0:
 491 0005 7F          		.4byte	.LEFDE0-.LASFDE0
 492 0006 03          	.LASFDE0:
 493 0006 0C          		.4byte	.Lframe0
 494 0007 05          		.4byte	.LFB9
 495 0007 00          		.4byte	.LFE9-.LFB9
 496                 		.p2align	2
 497                 	.LEFDE0:
 498                 	.LSFDE2:
 499 0008 00 00 00 00 		.4byte	.LEFDE2-.LASFDE2
 500                 	.LASFDE2:
 501 000a 00 00 00 00 		.4byte	.Lframe0
 502 000c 00 00 00 00 		.4byte	.LFB10
 503 000e 00 00 00 01 		.4byte	.LFE10-.LFB10
 504                 		.p2align	2
 505                 	.LEFDE2:
 506                 	.LSFDE4:
 507 0010 00 00 00 00 		.4byte	.LEFDE4-.LASFDE4
 508                 	.LASFDE4:
 509 0012 00 00 00 00 		.4byte	.Lframe0
 510 0014 00 00 00 00 		.4byte	.LFB8
 511 0016 00 00 00 00 		.4byte	.LFE8-.LFB8
 512                 		.1byte	0x4
 513                 		.4byte	.LCFI0-.LFB8
 514                 		.1byte	0xe
 515 0018 00 00 00 00 		.1byte	0x2
 516                 		.1byte	0x83
 517 001a 00 00 00 00 		.1byte	0x1
 518 001c 00 00 00 00 		.p2align	2
 519 001e 00 00 00 00 	.LEFDE4:
 520 0020 41          	.LSFDE6:
 521                 		.4byte	.LEFDE6-.LASFDE6
 522 0020 0E          	.LASFDE6:
 523 0021 02          		.4byte	.Lframe0
 524 0021 83          		.4byte	.LFB4
 525 0022 01          		.4byte	.LFE4-.LFB4
 526 0022 00 00 00    		.1byte	0x4
 527                 		.4byte	.LCFI1-.LFB4
 528                 		.1byte	0xe
 529 0024 00 00 00 00 		.1byte	0x1
 530                 		.1byte	0x83
 531 0026 00 00 00 00 		.1byte	0x1
 532 0028 00 00 00 00 		.p2align	2
 533 002a 00 00 00 00 	.LEFDE6:
 534 002c 41          	.LSFDE8:
 535                 		.4byte	.LEFDE8-.LASFDE8
 536 002c 0E          	.LASFDE8:
 537 002d 01          		.4byte	.Lframe0
 538 002d 83          		.4byte	.LFB7
 539 002e 01          		.4byte	.LFE7-.LFB7
 540 002e 00 00 00    		.1byte	0x4
 541                 		.4byte	.LCFI2-.LFB7
 542                 		.1byte	0xe
 543 0030 00 00 00 00 		.1byte	0x5
 544                 		.1byte	0x83
 545 0032 00 00 00 00 		.1byte	0x1
 546 0034 00 00 00 00 		.p2align	2
 547 0036 00 00 00 00 	.LEFDE8:
 548 0038 41          	.LSFDE10:
 549                 		.4byte	.LEFDE10-.LASFDE10
 550 0038 0E          	.LASFDE10:
 551 0039 05          		.4byte	.Lframe0
 552 0039 83          		.4byte	.LFB6
 553 003a 01          		.4byte	.LFE6-.LFB6
 554 003a 00 00 00    		.p2align	2
 555                 	.LEFDE10:
 556                 	.LSFDE12:
 557 003c 00 00 00 00 		.4byte	.LEFDE12-.LASFDE12
 558                 	.LASFDE12:
 559 003e 00 00 00 00 		.4byte	.Lframe0
 560 0040 00 00 00 00 		.4byte	.LFB5
 561 0042 00 00 00 00 		.4byte	.LFE5-.LFB5
 562                 		.1byte	0x4
 563                 		.4byte	.LCFI3-.LFB5
 564                 		.1byte	0xe
 565 0044 00 00 00 00 		.1byte	0x6
 566                 		.1byte	0x83
 567 0046 00 00 00 00 		.1byte	0x1
 568 0048 00 00 00 00 		.p2align	2
 569 004a 00 00 00 00 	.LEFDE12:
 570 004c 41          	.LSFDE14:
 571                 		.4byte	.LEFDE14-.LASFDE14
 572 004c 0E          	.LASFDE14:
 573 004d 06          		.4byte	.Lframe0
 574 004d 83          		.4byte	.LFB2
 575 004e 01          		.4byte	.LFE2-.LFB2
 576 004e 00 00 00    		.1byte	0x4
 577                 		.4byte	.LCFI4-.LFB2
 578                 		.1byte	0xe
 579 0050 00 00 00 00 		.1byte	0x3
 580                 		.1byte	0x83
 581 0052 00 00 00 00 		.1byte	0x1
 582 0054 00 00 00 00 		.p2align	2
 583 0056 00 00 00 00 	.LEFDE14:
 584 0058 41          	.LSFDE16:
 585                 		.4byte	.LEFDE16-.LASFDE16
 586 0058 0E          	.LASFDE16:
 587 0059 03          		.4byte	.Lframe0
 588 0059 83          		.4byte	.LFB3
 589 005a 01          		.4byte	.LFE3-.LFB3
 590 005a 00 00 00    		.1byte	0x4
 591                 		.4byte	.LCFI5-.LFB3
 592                 		.1byte	0xe
 593 005c 00 00 00 00 		.1byte	0x8
 594                 		.1byte	0x83
 595 005e 00 00 00 00 		.1byte	0x1
 596 0060 00 00 00 00 		.p2align	2
 597 0062 00 00 00 00 	.LEFDE16:
 598 0064 41          		.text
 599                 	.Letext0:
 600 0064 0E          		.section	.debug_loc,"",@progbits
 601 0065 08          	.Ldebug_loc0:
 602 0065 83          	.LLST2:
 603 0066 01          		.4byte	.LFB8
 604 0066 00 00 00    		.4byte	.LCFI0
 605                 		.2byte	0x1
 606                 		.1byte	0x55
 607                 		.4byte	.LCFI0
 608                 		.4byte	.LFE8
 609                 		.2byte	0x2
 610                 		.1byte	0x75
 611 0000 00 00 00 00 		.1byte	0x2
 612 0002 00 00 00 00 		.4byte	0x0
 613 0004 00 01       		.4byte	0x0
 614 0005 55          	.LLST3:
 615 0005 00 00 00 00 		.4byte	.LFB4
 616 0007 00 00 00 00 		.4byte	.LCFI1
 617 0009 00 02       		.2byte	0x1
 618 000a 75          		.1byte	0x55
 619 000b 02          		.4byte	.LCFI1
 620 000b 00 00 00 00 		.4byte	.LFE4
 621 000d 00 00 00 00 		.2byte	0x2
 622                 		.1byte	0x75
 623 000f 00 00 00 00 		.1byte	0x1
 624 0011 00 00 00 00 		.4byte	0x0
 625 0013 00 01       		.4byte	0x0
 626 0014 55          	.LLST4:
 627 0015 00 00 00 00 		.4byte	.LFB7
 628 0017 00 00 00 00 		.4byte	.LCFI2
 629 0019 00 02       		.2byte	0x1
 630 001a 75          		.1byte	0x55
 631 001a 01          		.4byte	.LCFI2
 632 001b 00 00 00 00 		.4byte	.LFE7
 633 001d 00 00 00 00 		.2byte	0x2
 634                 		.1byte	0x75
 635 001f 00 00 00 00 		.1byte	0x5
 636 0021 00 00 00 00 		.4byte	0x0
 637 0023 00 01       		.4byte	0x0
 638 0024 55          	.LLST5:
 639 0024 00 00 00 00 		.4byte	.LVL1
 640 0026 00 00 00 00 		.4byte	.LVL3
 641 0028 00 02       		.2byte	0x6
 642 0029 75          		.1byte	0x50
 643 002a 05          		.1byte	0x93
 644 002a 00 00 00 00 		.1byte	0x2
 645 002c 00 00 00 00 		.1byte	0x51
 646                 		.1byte	0x93
 647 002e 00 00 00 00 		.1byte	0x2
 648 0030 00 00 00 00 		.4byte	0x0
 649 0032 00 06       		.4byte	0x0
 650 0033 50          	.LLST7:
 651 0034 93          		.4byte	.LFB5
 652 0034 02          		.4byte	.LCFI3
 653 0035 51          		.2byte	0x1
 654 0035 93          		.1byte	0x55
 655 0036 02          		.4byte	.LCFI3
 656 0036 00 00 00 00 		.4byte	.LFE5
 657 0038 00 00 00 00 		.2byte	0x2
 658                 		.1byte	0x75
 659 003a 00 00 00 00 		.1byte	0x6
 660 003c 00 00 00 00 		.4byte	0x0
 661 003e 00 01       		.4byte	0x0
 662 003f 55          	.LLST8:
 663 0040 00 00 00 00 		.4byte	.LVL12
 664 0042 00 00 00 00 		.4byte	.LVL13
 665 0044 00 02       		.2byte	0x1
 666 0045 75          		.1byte	0x51
 667 0045 06          		.4byte	.LVL13
 668 0046 00 00 00 00 		.4byte	.LFE5
 669 0048 00 00 00 00 		.2byte	0x2
 670                 		.1byte	0x76
 671 004a 00 00 00 00 		.1byte	0x2
 672 004c 00 00 00 00 		.4byte	0x0
 673 004e 00 01       		.4byte	0x0
 674 004f 51          	.LLST9:
 675 004f 00 00 00 00 		.4byte	.LFB2
 676 0051 00 00 00 00 		.4byte	.LCFI4
 677 0053 00 02       		.2byte	0x1
 678 0054 76          		.1byte	0x55
 679 0055 02          		.4byte	.LCFI4
 680 0055 00 00 00 00 		.4byte	.LFE2
 681 0057 00 00 00 00 		.2byte	0x2
 682                 		.1byte	0x75
 683 0059 00 00 00 00 		.1byte	0x3
 684 005b 00 00 00 00 		.4byte	0x0
 685 005d 00 01       		.4byte	0x0
 686 005e 55          	.LLST10:
 687 005f 00 00 00 00 		.4byte	.LVL14
 688 0061 00 00 00 00 		.4byte	.LVL15
 689 0063 00 02       		.2byte	0x1
 690 0064 75          		.1byte	0x51
 691 0064 03          		.4byte	0x0
 692 0065 00 00 00 00 		.4byte	0x0
 693 0067 00 00 00 00 	.LLST11:
 694                 		.4byte	.LVL17
 695 0069 00 00 00 00 		.4byte	.LVL18
 696 006b 00 00 00 00 		.2byte	0x6
 697 006d 00 01       		.1byte	0x50
 698 006e 51          		.1byte	0x93
 699 006e 00 00 00 00 		.1byte	0x2
 700 0070 00 00 00 00 		.1byte	0x51
 701                 		.1byte	0x93
 702 0072 00 00 00 00 		.1byte	0x2
 703 0074 00 00 00 00 		.4byte	.LVL20
 704 0076 00 06       		.4byte	.LVL21
 705 0077 50          		.2byte	0x6
 706 0078 93          		.1byte	0x50
 707 0078 02          		.1byte	0x93
 708 0079 51          		.1byte	0x2
 709 0079 93          		.1byte	0x51
 710 007a 02          		.1byte	0x93
 711 007a 00 00 00 00 		.1byte	0x2
 712 007c 00 00 00 00 		.4byte	.LVL22
 713 007e 00 06       		.4byte	.LFE2
 714 007f 50          		.2byte	0x6
 715 0080 93          		.1byte	0x50
 716 0080 02          		.1byte	0x93
 717 0081 51          		.1byte	0x2
 718 0081 93          		.1byte	0x51
 719 0082 02          		.1byte	0x93
 720 0082 00 00 00 00 		.1byte	0x2
 721 0084 00 00 00 00 		.4byte	0x0
 722 0086 00 06       		.4byte	0x0
 723 0087 50          	.LLST12:
 724 0088 93          		.4byte	.LFB3
 725 0088 02          		.4byte	.LCFI5
 726 0089 51          		.2byte	0x1
 727 0089 93          		.1byte	0x55
 728 008a 02          		.4byte	.LCFI5
 729 008a 00 00 00 00 		.4byte	.LFE3
 730 008c 00 00 00 00 		.2byte	0x2
 731                 		.1byte	0x75
 732 008e 00 00 00 00 		.1byte	0x8
 733 0090 00 00 00 00 		.4byte	0x0
 734 0092 00 01       		.4byte	0x0
 735 0093 55          		.file 2 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/types.h"
 736 0094 00 00 00 00 		.file 3 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/pio.h"
 737 0096 00 00 00 00 		.file 4 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/timer.h"
 738 0098 00 02       		.file 5 "hr_sensor_hw.h"
 739 0099 75          		.file 6 "app_gatt.h"
 740 0099 08          		.section	.debug_info
 741 009a 00 00 00 00 		.4byte	0x41f
 742 009c 00 00 00 00 		.2byte	0x2
 743                 		.4byte	.Ldebug_abbrev0
 744                 		.1byte	0x4
 745                 		.1byte	0x1
 746                 		.4byte	.LASF93
 747                 		.1byte	0x1
 748                 		.4byte	.LASF94
 749 0000 00 00 04 1F 		.4byte	.LASF95
 750 0002 00 02       		.4byte	0x0
 751 0003 00 00 00 00 		.4byte	0x0
 752 0005 04          		.4byte	.Ldebug_ranges0+0x0
 753 0005 01          		.4byte	.Ldebug_line0
 754 0006 00 00 00 00 		.1byte	0x2
 755 0008 01          		.1byte	0x2
 756 0008 00 00 00 00 		.1byte	0x8
 757 000a 00 00 00 00 		.4byte	.LASF0
 758 000c 00 00 00 00 		.1byte	0x3
 759 000e 00 00 00 00 		.4byte	.LASF2
 760 0010 00 00 00 00 		.1byte	0x2
 761 0012 00 00 00 00 		.1byte	0x1f
 762 0014 02          		.4byte	0x3b
 763 0015 02          		.1byte	0x2
 764 0015 08          		.1byte	0x2
 765 0016 00 00 00 00 		.1byte	0x7
 766 0018 03          		.4byte	.LASF1
 767 0018 00 00 00 00 		.1byte	0x3
 768 001a 02          		.4byte	.LASF3
 769 001b 1F          		.1byte	0x2
 770 001b 00 00 00 3B 		.1byte	0x20
 771 001d 02          		.4byte	0x4d
 772 001e 02          		.1byte	0x2
 773 001e 07          		.1byte	0x4
 774 001f 00 00 00 00 		.1byte	0x7
 775 0021 03          		.4byte	.LASF4
 776 0021 00 00 00 00 		.1byte	0x2
 777 0023 02          		.1byte	0x2
 778 0024 20          		.1byte	0x6
 779 0024 00 00 00 4D 		.4byte	.LASF5
 780 0026 02          		.1byte	0x2
 781 0027 04          		.1byte	0x2
 782 0027 07          		.1byte	0x5
 783 0028 00 00 00 00 		.4byte	.LASF6
 784 002a 02          		.1byte	0x2
 785 002a 02          		.1byte	0x4
 786 002b 06          		.1byte	0x5
 787 002b 00 00 00 00 		.4byte	.LASF7
 788 002d 02          		.1byte	0x2
 789 002e 02          		.1byte	0x2
 790 002e 05          		.1byte	0x7
 791 002f 00 00 00 00 		.4byte	.LASF8
 792 0031 02          		.1byte	0x4
 793 0031 04          		.1byte	0x2
 794 0032 05          		.1byte	0x3
 795 0032 00 00 00 00 		.1byte	0x1b
 796 0034 02          		.4byte	0x10f
 797 0035 02          		.1byte	0x5
 798 0035 07          		.4byte	.LASF9
 799 0036 00 00 00 00 		.1byte	0x0
 800 0038 04          		.1byte	0x5
 801 0038 02          		.4byte	.LASF10
 802 0039 03          		.1byte	0x1
 803 0039 1B          		.1byte	0x5
 804 003a 00 00 01 0F 		.4byte	.LASF11
 805 003c 05          		.1byte	0x3
 806 003c 00 00 00 00 		.1byte	0x5
 807 003e 00          		.4byte	.LASF12
 808 003f 05          		.1byte	0x4
 809 003f 00 00 00 00 		.1byte	0x5
 810 0041 01          		.4byte	.LASF13
 811 0042 05          		.1byte	0x5
 812 0042 00 00 00 00 		.1byte	0x5
 813 0044 03          		.4byte	.LASF14
 814 0045 05          		.1byte	0x6
 815 0045 00 00 00 00 		.1byte	0x5
 816 0047 04          		.4byte	.LASF15
 817 0048 05          		.1byte	0x7
 818 0048 00 00 00 00 		.1byte	0x5
 819 004a 05          		.4byte	.LASF16
 820 004b 05          		.1byte	0x8
 821 004b 00 00 00 00 		.1byte	0x5
 822 004d 06          		.4byte	.LASF17
 823 004e 05          		.1byte	0x9
 824 004e 00 00 00 00 		.1byte	0x5
 825 0050 07          		.4byte	.LASF18
 826 0051 05          		.1byte	0xa
 827 0051 00 00 00 00 		.1byte	0x5
 828 0053 08          		.4byte	.LASF19
 829 0054 05          		.1byte	0xb
 830 0054 00 00 00 00 		.1byte	0x5
 831 0056 09          		.4byte	.LASF20
 832 0057 05          		.1byte	0xc
 833 0057 00 00 00 00 		.1byte	0x5
 834 0059 0A          		.4byte	.LASF21
 835 005a 05          		.1byte	0xd
 836 005a 00 00 00 00 		.1byte	0x5
 837 005c 0B          		.4byte	.LASF22
 838 005d 05          		.1byte	0xe
 839 005d 00 00 00 00 		.1byte	0x5
 840 005f 0C          		.4byte	.LASF23
 841 0060 05          		.1byte	0xf
 842 0060 00 00 00 00 		.1byte	0x5
 843 0062 0D          		.4byte	.LASF24
 844 0063 05          		.1byte	0x10
 845 0063 00 00 00 00 		.1byte	0x5
 846 0065 0E          		.4byte	.LASF25
 847 0066 05          		.1byte	0x11
 848 0066 00 00 00 00 		.1byte	0x5
 849 0068 0F          		.4byte	.LASF26
 850 0069 05          		.1byte	0x12
 851 0069 00 00 00 00 		.1byte	0x5
 852 006b 10          		.4byte	.LASF27
 853 006c 05          		.1byte	0x13
 854 006c 00 00 00 00 		.1byte	0x5
 855 006e 11          		.4byte	.LASF28
 856 006f 05          		.1byte	0x14
 857 006f 00 00 00 00 		.1byte	0x5
 858 0071 12          		.4byte	.LASF29
 859 0072 05          		.1byte	0x15
 860 0072 00 00 00 00 		.1byte	0x5
 861 0074 13          		.4byte	.LASF30
 862 0075 05          		.1byte	0x16
 863 0075 00 00 00 00 		.1byte	0x5
 864 0077 14          		.4byte	.LASF31
 865 0078 05          		.1byte	0x17
 866 0078 00 00 00 00 		.1byte	0x5
 867 007a 15          		.4byte	.LASF32
 868 007b 05          		.1byte	0x18
 869 007b 00 00 00 00 		.1byte	0x5
 870 007d 16          		.4byte	.LASF33
 871 007e 05          		.1byte	0x19
 872 007e 00 00 00 00 		.1byte	0x0
 873 0080 17          		.1byte	0x4
 874 0081 05          		.1byte	0x2
 875 0081 00 00 00 00 		.1byte	0x3
 876 0083 18          		.1byte	0x90
 877 0084 05          		.4byte	0x142
 878 0084 00 00 00 00 		.1byte	0x5
 879 0086 19          		.4byte	.LASF34
 880 0087 00          		.1byte	0x0
 881 0087 04          		.1byte	0x5
 882 0088 02          		.4byte	.LASF35
 883 0088 03          		.1byte	0x1
 884 0089 90          		.1byte	0x5
 885 0089 00 00 01 42 		.4byte	.LASF36
 886 008b 05          		.1byte	0x3
 887 008c 00 00 00 00 		.1byte	0x5
 888 008e 00          		.4byte	.LASF37
 889 008e 05          		.1byte	0x5
 890 008f 00 00 00 00 		.1byte	0x5
 891 0091 01          		.4byte	.LASF38
 892 0091 05          		.1byte	0x7
 893 0092 00 00 00 00 		.1byte	0x5
 894 0094 03          		.4byte	.LASF39
 895 0094 05          		.1byte	0x9
 896 0095 00 00 00 00 		.1byte	0x5
 897 0097 05          		.4byte	.LASF40
 898 0097 05          		.1byte	0xd
 899 0098 00 00 00 00 		.1byte	0x0
 900 009a 07          		.1byte	0x4
 901 009a 05          		.1byte	0x2
 902 009b 00 00 00 00 		.1byte	0x3
 903 009d 09          		.1byte	0xa7
 904 009d 05          		.4byte	0x175
 905 009e 00 00 00 00 		.1byte	0x5
 906 00a0 0D          		.4byte	.LASF41
 907 00a0 00          		.1byte	0x0
 908 00a1 04          		.1byte	0x5
 909 00a1 02          		.4byte	.LASF42
 910 00a2 03          		.1byte	0x1
 911 00a2 A7          		.1byte	0x5
 912 00a3 00 00 01 75 		.4byte	.LASF43
 913 00a5 05          		.1byte	0x3
 914 00a5 00 00 00 00 		.1byte	0x5
 915 00a7 00          		.4byte	.LASF44
 916 00a8 05          		.1byte	0x5
 917 00a8 00 00 00 00 		.1byte	0x5
 918 00aa 01          		.4byte	.LASF45
 919 00ab 05          		.1byte	0x7
 920 00ab 00 00 00 00 		.1byte	0x5
 921 00ad 03          		.4byte	.LASF46
 922 00ae 05          		.1byte	0x9
 923 00ae 00 00 00 00 		.1byte	0x5
 924 00b0 05          		.4byte	.LASF47
 925 00b1 05          		.1byte	0xd
 926 00b1 00 00 00 00 		.1byte	0x0
 927 00b3 07          		.1byte	0x4
 928 00b4 05          		.1byte	0x2
 929 00b4 00 00 00 00 		.1byte	0x3
 930 00b6 09          		.1byte	0xb9
 931 00b7 05          		.4byte	0x196
 932 00b7 00 00 00 00 		.1byte	0x5
 933 00b9 0D          		.4byte	.LASF48
 934 00ba 00          		.1byte	0x0
 935 00ba 04          		.1byte	0x5
 936 00bb 02          		.4byte	.LASF49
 937 00bb 03          		.1byte	0x1
 938 00bc B9          		.1byte	0x5
 939 00bc 00 00 01 96 		.4byte	.LASF50
 940 00be 05          		.1byte	0x2
 941 00bf 00 00 00 00 		.1byte	0x5
 942 00c1 00          		.4byte	.LASF51
 943 00c1 05          		.1byte	0x3
 944 00c2 00 00 00 00 		.1byte	0x0
 945 00c4 01          		.1byte	0x6
 946 00c4 05          		.1byte	0x2
 947 00c5 00 00 00 00 		.1byte	0x3
 948 00c7 02          		.2byte	0x1a3
 949 00c7 05          		.4byte	0x1b8
 950 00c8 00 00 00 00 		.1byte	0x5
 951 00ca 03          		.4byte	.LASF52
 952 00ca 00          		.1byte	0x0
 953 00cb 06          		.1byte	0x5
 954 00cb 02          		.4byte	.LASF53
 955 00cc 03          		.1byte	0x1
 956 00cc 01 A3       		.1byte	0x5
 957 00cd 00 00 01 B8 		.4byte	.LASF54
 958 00cf 05          		.1byte	0x2
 959 00d0 00 00 00 00 		.1byte	0x5
 960 00d2 00          		.4byte	.LASF55
 961 00d2 05          		.1byte	0x3
 962 00d3 00 00 00 00 		.1byte	0x0
 963 00d5 01          		.1byte	0x7
 964 00d5 05          		.1byte	0x2
 965 00d6 00 00 00 00 		.1byte	0x7
 966 00d8 02          		.1byte	0x3
 967 00d8 05          		.4byte	.LASF56
 968 00d9 00 00 00 00 		.1byte	0x4
 969 00db 03          		.1byte	0x1f
 970 00db 00          		.4byte	0x30
 971 00dc 07          		.1byte	0x4
 972 00dc 02          		.1byte	0x2
 973 00dd 07          		.1byte	0x5
 974 00dd 03          		.1byte	0x29
 975 00de 00 00 00 00 		.4byte	0x1ed
 976 00e0 04          		.1byte	0x5
 977 00e0 1F          		.4byte	.LASF57
 978 00e1 00 00 00 30 		.1byte	0x0
 979 00e3 04          		.1byte	0x5
 980 00e3 02          		.4byte	.LASF58
 981 00e4 05          		.1byte	0x1
 982 00e4 29          		.1byte	0x5
 983 00e5 00 00 01 ED 		.4byte	.LASF59
 984 00e7 05          		.1byte	0x2
 985 00e7 00 00 00 00 		.1byte	0x5
 986 00e9 00          		.4byte	.LASF60
 987 00ea 05          		.1byte	0x3
 988 00ea 00 00 00 00 		.1byte	0x5
 989 00ec 01          		.4byte	.LASF61
 990 00ed 05          		.1byte	0x4
 991 00ed 00 00 00 00 		.1byte	0x0
 992 00ef 02          		.1byte	0x3
 993 00f0 05          		.4byte	.LASF62
 994 00f0 00 00 00 00 		.1byte	0x5
 995 00f2 03          		.1byte	0x39
 996 00f3 05          		.4byte	0x1c6
 997 00f3 00 00 00 00 		.1byte	0x8
 998 00f5 04          		.1byte	0x8
 999 00f6 00          		.1byte	0x5
 1000 00f6 03          		.1byte	0x3c
 1001 00f7 00 00 00 00 		.4byte	0x239
 1002 00f9 05          		.1byte	0x9
 1003 00f9 39          		.4byte	.LASF63
 1004 00fa 00 00 01 C6 		.1byte	0x5
 1005 00fc 08          		.1byte	0x40
 1006 00fc 08          		.4byte	0x1bb
 1007 00fd 05          		.1byte	0x2
 1008 00fd 3C          		.1byte	0x23
 1009 00fe 00 00 02 39 		.1byte	0x0
 1010 0100 09          		.1byte	0x9
 1011 0100 00 00 00 00 		.4byte	.LASF64
 1012 0102 05          		.1byte	0x5
 1013 0103 40          		.1byte	0x43
 1014 0103 00 00 01 BB 		.4byte	0x1ed
 1015 0105 02          		.1byte	0x2
 1016 0106 23          		.1byte	0x23
 1017 0106 00          		.1byte	0x1
 1018 0107 09          		.1byte	0x9
 1019 0107 00 00 00 00 		.4byte	.LASF65
 1020 0109 05          		.1byte	0x5
 1021 010a 43          		.1byte	0x49
 1022 010a 00 00 01 ED 		.4byte	0x30
 1023 010c 02          		.1byte	0x2
 1024 010d 23          		.1byte	0x23
 1025 010d 01          		.1byte	0x2
 1026 010e 09          		.1byte	0x9
 1027 010e 00 00 00 00 		.4byte	.LASF66
 1028 0110 05          		.1byte	0x5
 1029 0111 49          		.1byte	0x4d
 1030 0111 00 00 00 30 		.4byte	0x1bb
 1031 0113 02          		.1byte	0x2
 1032 0114 23          		.1byte	0x23
 1033 0114 02          		.1byte	0x3
 1034 0115 09          		.1byte	0x0
 1035 0115 00 00 00 00 		.1byte	0x3
 1036 0117 05          		.4byte	.LASF67
 1037 0118 4D          		.1byte	0x5
 1038 0118 00 00 01 BB 		.1byte	0x4f
 1039 011a 02          		.4byte	0x1f8
 1040 011b 23          		.1byte	0x8
 1041 011b 03          		.1byte	0x2
 1042 011c 00          		.1byte	0x5
 1043 011c 03          		.1byte	0x52
 1044 011d 00 00 00 00 		.4byte	0x25b
 1045 011f 05          		.1byte	0x9
 1046 011f 4F          		.4byte	.LASF68
 1047 0120 00 00 01 F8 		.1byte	0x5
 1048 0122 08          		.1byte	0x53
 1049 0122 02          		.4byte	0x30
 1050 0123 05          		.1byte	0x2
 1051 0123 52          		.1byte	0x23
 1052 0124 00 00 02 5B 		.1byte	0x0
 1053 0126 09          		.1byte	0x0
 1054 0126 00 00 00 00 		.1byte	0x3
 1055 0128 05          		.4byte	.LASF69
 1056 0129 53          		.1byte	0x5
 1057 0129 00 00 00 30 		.1byte	0x54
 1058 012b 02          		.4byte	0x244
 1059 012c 23          		.1byte	0x4
 1060 012c 00          		.1byte	0x2
 1061 012d 00          		.1byte	0x6
 1062 012d 03          		.1byte	0x46
 1063 012e 00 00 00 00 		.4byte	0x2b7
 1064 0130 05          		.1byte	0x5
 1065 0130 54          		.4byte	.LASF70
 1066 0131 00 00 02 44 		.1byte	0x0
 1067 0133 04          		.1byte	0x5
 1068 0133 02          		.4byte	.LASF71
 1069 0134 06          		.1byte	0x1
 1070 0134 46          		.1byte	0x5
 1071 0135 00 00 02 B7 		.4byte	.LASF72
 1072 0137 05          		.1byte	0x2
 1073 0137 00 00 00 00 		.1byte	0x5
 1074 0139 00          		.4byte	.LASF73
 1075 013a 05          		.1byte	0x3
 1076 013a 00 00 00 00 		.1byte	0x5
 1077 013c 01          		.4byte	.LASF74
 1078 013d 05          		.1byte	0x4
 1079 013d 00 00 00 00 		.1byte	0x5
 1080 013f 02          		.4byte	.LASF75
 1081 0140 05          		.1byte	0x5
 1082 0140 00 00 00 00 		.1byte	0x5
 1083 0142 03          		.4byte	.LASF76
 1084 0143 05          		.1byte	0x6
 1085 0143 00 00 00 00 		.1byte	0x5
 1086 0145 04          		.4byte	.LASF77
 1087 0146 05          		.1byte	0x7
 1088 0146 00 00 00 00 		.1byte	0x5
 1089 0148 05          		.4byte	.LASF78
 1090 0149 05          		.1byte	0x8
 1091 0149 00 00 00 00 		.1byte	0x5
 1092 014b 06          		.4byte	.LASF79
 1093 014c 05          		.1byte	0x9
 1094 014c 00 00 00 00 		.1byte	0x5
 1095 014e 07          		.4byte	.LASF80
 1096 014f 05          		.1byte	0xa
 1097 014f 00 00 00 00 		.1byte	0x5
 1098 0151 08          		.4byte	.LASF81
 1099 0152 05          		.1byte	0xb
 1100 0152 00 00 00 00 		.1byte	0x0
 1101 0154 09          		.1byte	0xa
 1102 0155 05          		.1byte	0x1
 1103 0155 00 00 00 00 		.4byte	.LASF82
 1104 0157 0A          		.1byte	0x1
 1105 0158 05          		.2byte	0x221
 1106 0158 00 00 00 00 		.1byte	0x1
 1107 015a 0B          		.4byte	.LFB9
 1108 015b 00          		.4byte	.LFE9
 1109 015b 0A          		.1byte	0x1
 1110 015c 01          		.1byte	0x55
 1111 015c 00 00 00 00 		.1byte	0xb
 1112 015e 01          		.1byte	0x1
 1113 015f 02 21       		.4byte	.LASF85
 1114 0160 01          		.1byte	0x1
 1115 0160 00 00 00 00 		.2byte	0x232
 1116 0162 00 00 00 00 		.1byte	0x1
 1117 0164 01          		.4byte	.LFB10
 1118 0165 55          		.4byte	.LFE10
 1119 0165 0B          		.1byte	0x1
 1120 0166 01          		.1byte	0x55
 1121 0166 00 00 00 00 		.4byte	0x2f7
 1122 0168 01          		.1byte	0xc
 1123 0169 02 32       		.4byte	.LASF87
 1124 016a 01          		.1byte	0x1
 1125 016a 00 00 00 00 		.2byte	0x231
 1126 016c 00 00 00 00 		.4byte	0x42
 1127 016e 01          		.1byte	0x6
 1128 016f 55          		.1byte	0x50
 1129 016f 00 00 02 F7 		.1byte	0x93
 1130 0171 0C          		.1byte	0x2
 1131 0172 00 00 00 00 		.1byte	0x51
 1132 0174 01          		.1byte	0x93
 1133 0174 02 31       		.1byte	0x2
 1134 0175 00 00 00 42 		.1byte	0x0
 1135 0177 06          		.1byte	0xd
 1136 0178 50          		.1byte	0x1
 1137 0178 93          		.4byte	.LASF83
 1138 0179 02          		.1byte	0x1
 1139 0179 51          		.2byte	0x208
 1140 017a 93          		.1byte	0x1
 1141 017a 02          		.4byte	.LFB8
 1142 017b 00          		.4byte	.LFE8
 1143 017b 0D          		.4byte	.LLST2
 1144 017c 01          		.1byte	0xd
 1145 017c 00 00 00 00 		.1byte	0x1
 1146 017e 01          		.4byte	.LASF84
 1147 017f 02 08       		.1byte	0x1
 1148 0180 01          		.2byte	0x13e
 1149 0180 00 00 00 00 		.1byte	0x1
 1150 0182 00 00 00 00 		.4byte	.LFB4
 1151 0184 00 00 00 00 		.4byte	.LFE4
 1152 0186 0D          		.4byte	.LLST3
 1153 0187 01          		.1byte	0xe
 1154 0187 00 00 00 00 		.1byte	0x1
 1155 0189 01          		.4byte	.LASF86
 1156 018a 01 3E       		.1byte	0x1
 1157 018b 01          		.2byte	0x1c2
 1158 018b 00 00 00 00 		.1byte	0x1
 1159 018d 00 00 00 00 		.4byte	.LFB7
 1160 018f 00 00 00 00 		.4byte	.LFE7
 1161 0191 0E          		.4byte	.LLST4
 1162 0192 01          		.4byte	0x35a
 1163 0192 00 00 00 00 		.1byte	0xf
 1164 0194 01          		.4byte	.LASF87
 1165 0195 01 C2       		.1byte	0x1
 1166 0196 01          		.2byte	0x1c1
 1167 0196 00 00 00 00 		.4byte	0x42
 1168 0198 00 00 00 00 		.4byte	.LLST5
 1169 019a 00 00 00 00 		.1byte	0x10
 1170 019c 00 00 03 5A 		.4byte	.LASF96
 1171 019e 0F          		.1byte	0x1
 1172 019f 00 00 00 00 		.2byte	0x1c4
 1173 01a1 01          		.4byte	0x42
 1174 01a1 01 C1       		.1byte	0x0
 1175 01a2 00 00 00 42 		.1byte	0x11
 1176 01a4 00 00 00 00 		.1byte	0x1
 1177 01a6 10          		.4byte	.LASF97
 1178 01a7 00 00 00 00 		.1byte	0x1
 1179 01a9 01          		.2byte	0x1a9
 1180 01a9 01 C4       		.1byte	0x1
 1181 01aa 00 00 00 42 		.4byte	0x42
 1182 01ac 00          		.4byte	.LFB6
 1183 01ad 11          		.4byte	.LFE6
 1184 01ad 01          		.1byte	0x1
 1185 01ae 00 00 00 00 		.1byte	0x55
 1186 01b0 01          		.1byte	0xe
 1187 01b0 01 A9       		.1byte	0x1
 1188 01b1 01          		.4byte	.LASF88
 1189 01b2 00 00 00 42 		.1byte	0x1
 1190 01b4 00 00 00 00 		.2byte	0x156
 1191 01b6 00 00 00 00 		.1byte	0x1
 1192 01b8 01          		.4byte	.LFB5
 1193 01b8 55          		.4byte	.LFE5
 1194 01b9 0E          		.4byte	.LLST7
 1195 01b9 01          		.4byte	0x3b2
 1196 01ba 00 00 00 00 		.1byte	0xf
 1197 01bc 01          		.4byte	.LASF64
 1198 01bc 01 56       		.1byte	0x1
 1199 01bd 01          		.2byte	0x155
 1200 01be 00 00 00 00 		.4byte	0x1ed
 1201 01c0 00 00 00 00 		.4byte	.LLST8
 1202 01c2 00 00 00 00 		.1byte	0x12
 1203 01c4 00 00 03 B2 		.4byte	.LASF89
 1204 01c6 0F          		.1byte	0x1
 1205 01c6 00 00 00 00 		.2byte	0x158
 1206 01c8 01          		.4byte	0x42
 1207 01c9 01 55       		.1byte	0x8
 1208 01ca 00 00 01 ED 		.1byte	0x76
 1209 01cc 00 00 00 00 		.1byte	0x3
 1210 01ce 12          		.1byte	0x93
 1211 01ce 00 00 00 00 		.1byte	0x1
 1212 01d0 01          		.1byte	0x76
 1213 01d1 01 58       		.1byte	0x4
 1214 01d2 00 00 00 42 		.1byte	0x93
 1215 01d4 08          		.1byte	0x1
 1216 01d4 76          		.1byte	0x0
 1217 01d5 03          		.1byte	0x13
 1218 01d5 93          		.4byte	.LASF98
 1219 01d6 01          		.1byte	0x1
 1220 01d6 76          		.1byte	0x7e
 1221 01d7 04          		.1byte	0x1
 1222 01d7 93          		.4byte	.LFB2
 1223 01d8 01          		.4byte	.LFE2
 1224 01d8 00          		.4byte	.LLST9
 1225 01d9 13          		.4byte	0x3e9
 1226 01d9 00 00 00 00 		.1byte	0x14
 1227 01db 01          		.ascii "tid\000"
 1228 01dc 7E          		.1byte	0x1
 1229 01dc 01          		.1byte	0x7d
 1230 01dd 00 00 00 00 		.4byte	0x1bb
 1231 01df 00 00 00 00 		.4byte	.LLST10
 1232 01e1 00 00 00 00 		.1byte	0x15
 1233 01e3 00 00 03 E9 		.4byte	.LASF89
 1234 01e5 14          		.1byte	0x1
 1235 01e5 74 69 64 00 		.1byte	0x7f
 1236 01e7 01          		.4byte	0x42
 1237 01e8 7D          		.4byte	.LLST11
 1238 01e8 00 00 01 BB 		.1byte	0x0
 1239 01ea 00 00 00 00 		.1byte	0x16
 1240 01ec 15          		.1byte	0x1
 1241 01ed 00 00 00 00 		.4byte	.LASF90
 1242 01ef 01          		.1byte	0x1
 1243 01ef 7F          		.1byte	0xfc
 1244 01f0 00 00 00 42 		.1byte	0x1
 1245 01f2 00 00 00 00 		.4byte	.LFB3
 1246 01f4 00          		.4byte	.LFE3
 1247 01f4 16          		.4byte	.LLST12
 1248 01f5 01          		.1byte	0x17
 1249 01f5 00 00 00 00 		.4byte	.LASF91
 1250 01f7 01          		.1byte	0x1
 1251 01f8 FC          		.1byte	0x66
 1252 01f8 01          		.4byte	0x239
 1253 01f9 00 00 00 00 		.1byte	0x1
 1254 01fb 00 00 00 00 		.1byte	0x5
 1255 01fd 00 00 00 00 		.1byte	0x3
 1256 01ff 17          		.4byte	g_app_hw_data
 1257 01ff 00 00 00 00 		.1byte	0x17
 1258 0201 01          		.4byte	.LASF92
 1259 0202 66          		.1byte	0x1
 1260 0202 00 00 02 39 		.1byte	0x69
 1261 0204 01          		.4byte	0x25b
 1262 0205 05          		.1byte	0x1
 1263 0205 03          		.1byte	0x5
 1264 0206 00 00 00 00 		.1byte	0x3
 1265 0208 17          		.4byte	g_dimmer_data
 1266 0208 00 00 00 00 		.1byte	0x0
 1267 020a 01          		.section	.debug_abbrev
 1268 020b 69          		.1byte	0x1
 1269 020b 00 00 02 5B 		.1byte	0x11
 1270 020d 01          		.1byte	0x1
 1271 020e 05          		.1byte	0x25
 1272 020e 03          		.1byte	0xe
 1273 020f 00 00 00 00 		.1byte	0x13
 1274 0211 00          		.1byte	0xb
 1275                 		.1byte	0x3
 1276 0000 01          		.1byte	0xe
 1277 0000 11          		.1byte	0x1b
 1278 0001 01          		.1byte	0xe
 1279 0001 25          		.1byte	0x11
 1280 0002 0E          		.1byte	0x1
 1281 0002 13          		.1byte	0x52
 1282 0003 0B          		.1byte	0x1
 1283 0003 03          		.1byte	0x55
 1284 0004 0E          		.1byte	0x6
 1285 0004 1B          		.1byte	0x10
 1286 0005 0E          		.1byte	0x6
 1287 0005 11          		.1byte	0x0
 1288 0006 01          		.1byte	0x0
 1289 0006 52          		.1byte	0x2
 1290 0007 01          		.1byte	0x24
 1291 0007 55          		.1byte	0x0
 1292 0008 06          		.1byte	0xb
 1293 0008 10          		.1byte	0xb
 1294 0009 06          		.1byte	0x3e
 1295 0009 00          		.1byte	0xb
 1296 000a 00          		.1byte	0x3
 1297 000a 02          		.1byte	0xe
 1298 000b 24          		.1byte	0x0
 1299 000b 00          		.1byte	0x0
 1300 000c 0B          		.1byte	0x3
 1301 000c 0B          		.1byte	0x16
 1302 000d 3E          		.1byte	0x0
 1303 000d 0B          		.1byte	0x3
 1304 000e 03          		.1byte	0xe
 1305 000e 0E          		.1byte	0x3a
 1306 000f 00          		.1byte	0xb
 1307 000f 00          		.1byte	0x3b
 1308 0010 03          		.1byte	0xb
 1309 0010 16          		.1byte	0x49
 1310 0011 00          		.1byte	0x13
 1311 0011 03          		.1byte	0x0
 1312 0012 0E          		.1byte	0x0
 1313 0012 3A          		.1byte	0x4
 1314 0013 0B          		.1byte	0x4
 1315 0013 3B          		.1byte	0x1
 1316 0014 0B          		.1byte	0xb
 1317 0014 49          		.1byte	0xb
 1318 0015 13          		.1byte	0x3a
 1319 0015 00          		.1byte	0xb
 1320 0016 00          		.1byte	0x3b
 1321 0016 04          		.1byte	0xb
 1322 0017 04          		.1byte	0x1
 1323 0017 01          		.1byte	0x13
 1324 0018 0B          		.1byte	0x0
 1325 0018 0B          		.1byte	0x0
 1326 0019 3A          		.1byte	0x5
 1327 0019 0B          		.1byte	0x28
 1328 001a 3B          		.1byte	0x0
 1329 001a 0B          		.1byte	0x3
 1330 001b 01          		.1byte	0xe
 1331 001b 13          		.1byte	0x1c
 1332 001c 00          		.1byte	0xd
 1333 001c 00          		.1byte	0x0
 1334 001d 05          		.1byte	0x0
 1335 001d 28          		.1byte	0x6
 1336 001e 00          		.1byte	0x4
 1337 001e 03          		.1byte	0x1
 1338 001f 0E          		.1byte	0xb
 1339 001f 1C          		.1byte	0xb
 1340 0020 0D          		.1byte	0x3a
 1341 0020 00          		.1byte	0xb
 1342 0021 00          		.1byte	0x3b
 1343 0021 06          		.1byte	0x5
 1344 0022 04          		.1byte	0x1
 1345 0022 01          		.1byte	0x13
 1346 0023 0B          		.1byte	0x0
 1347 0023 0B          		.1byte	0x0
 1348 0024 3A          		.1byte	0x7
 1349 0024 0B          		.1byte	0x24
 1350 0025 3B          		.1byte	0x0
 1351 0025 05          		.1byte	0xb
 1352 0026 01          		.1byte	0xb
 1353 0026 13          		.1byte	0x3e
 1354 0027 00          		.1byte	0xb
 1355 0027 00          		.1byte	0x0
 1356 0028 07          		.1byte	0x0
 1357 0028 24          		.1byte	0x8
 1358 0029 00          		.1byte	0x13
 1359 0029 0B          		.1byte	0x1
 1360 002a 0B          		.1byte	0xb
 1361 002a 3E          		.1byte	0xb
 1362 002b 0B          		.1byte	0x3a
 1363 002b 00          		.1byte	0xb
 1364 002c 00          		.1byte	0x3b
 1365 002c 08          		.1byte	0xb
 1366 002d 13          		.1byte	0x1
 1367 002d 01          		.1byte	0x13
 1368 002e 0B          		.1byte	0x0
 1369 002e 0B          		.1byte	0x0
 1370 002f 3A          		.1byte	0x9
 1371 002f 0B          		.1byte	0xd
 1372 0030 3B          		.1byte	0x0
 1373 0030 0B          		.1byte	0x3
 1374 0031 01          		.1byte	0xe
 1375 0031 13          		.1byte	0x3a
 1376 0032 00          		.1byte	0xb
 1377 0032 00          		.1byte	0x3b
 1378 0033 09          		.1byte	0xb
 1379 0033 0D          		.1byte	0x49
 1380 0034 00          		.1byte	0x13
 1381 0034 03          		.1byte	0x38
 1382 0035 0E          		.1byte	0xa
 1383 0035 3A          		.1byte	0x0
 1384 0036 0B          		.1byte	0x0
 1385 0036 3B          		.1byte	0xa
 1386 0037 0B          		.1byte	0x2e
 1387 0037 49          		.1byte	0x0
 1388 0038 13          		.1byte	0x3f
 1389 0038 38          		.1byte	0xc
 1390 0039 0A          		.1byte	0x3
 1391 0039 00          		.1byte	0xe
 1392 003a 00          		.1byte	0x3a
 1393 003a 0A          		.1byte	0xb
 1394 003b 2E          		.1byte	0x3b
 1395 003b 00          		.1byte	0x5
 1396 003c 3F          		.1byte	0x27
 1397 003c 0C          		.1byte	0xc
 1398 003d 03          		.1byte	0x11
 1399 003d 0E          		.1byte	0x1
 1400 003e 3A          		.1byte	0x12
 1401 003e 0B          		.1byte	0x1
 1402 003f 3B          		.1byte	0x40
 1403 003f 05          		.1byte	0xa
 1404 0040 27          		.1byte	0x0
 1405 0040 0C          		.1byte	0x0
 1406 0041 11          		.1byte	0xb
 1407 0041 01          		.1byte	0x2e
 1408 0042 12          		.1byte	0x1
 1409 0042 01          		.1byte	0x3f
 1410 0043 40          		.1byte	0xc
 1411 0043 0A          		.1byte	0x3
 1412 0044 00          		.1byte	0xe
 1413 0044 00          		.1byte	0x3a
 1414 0045 0B          		.1byte	0xb
 1415 0045 2E          		.1byte	0x3b
 1416 0046 01          		.1byte	0x5
 1417 0046 3F          		.1byte	0x27
 1418 0047 0C          		.1byte	0xc
 1419 0047 03          		.1byte	0x11
 1420 0048 0E          		.1byte	0x1
 1421 0048 3A          		.1byte	0x12
 1422 0049 0B          		.1byte	0x1
 1423 0049 3B          		.1byte	0x40
 1424 004a 05          		.1byte	0xa
 1425 004a 27          		.1byte	0x1
 1426 004b 0C          		.1byte	0x13
 1427 004b 11          		.1byte	0x0
 1428 004c 01          		.1byte	0x0
 1429 004c 12          		.1byte	0xc
 1430 004d 01          		.1byte	0x5
 1431 004d 40          		.1byte	0x0
 1432 004e 0A          		.1byte	0x3
 1433 004e 01          		.1byte	0xe
 1434 004f 13          		.1byte	0x3a
 1435 004f 00          		.1byte	0xb
 1436 0050 00          		.1byte	0x3b
 1437 0050 0C          		.1byte	0x5
 1438 0051 05          		.1byte	0x49
 1439 0051 00          		.1byte	0x13
 1440 0052 03          		.1byte	0x2
 1441 0052 0E          		.1byte	0xa
 1442 0053 3A          		.1byte	0x0
 1443 0053 0B          		.1byte	0x0
 1444 0054 3B          		.1byte	0xd
 1445 0054 05          		.1byte	0x2e
 1446 0055 49          		.1byte	0x0
 1447 0055 13          		.1byte	0x3f
 1448 0056 02          		.1byte	0xc
 1449 0056 0A          		.1byte	0x3
 1450 0057 00          		.1byte	0xe
 1451 0057 00          		.1byte	0x3a
 1452 0058 0D          		.1byte	0xb
 1453 0058 2E          		.1byte	0x3b
 1454 0059 00          		.1byte	0x5
 1455 0059 3F          		.1byte	0x27
 1456 005a 0C          		.1byte	0xc
 1457 005a 03          		.1byte	0x11
 1458 005b 0E          		.1byte	0x1
 1459 005b 3A          		.1byte	0x12
 1460 005c 0B          		.1byte	0x1
 1461 005c 3B          		.1byte	0x40
 1462 005d 05          		.1byte	0x6
 1463 005d 27          		.1byte	0x0
 1464 005e 0C          		.1byte	0x0
 1465 005e 11          		.1byte	0xe
 1466 005f 01          		.1byte	0x2e
 1467 005f 12          		.1byte	0x1
 1468 0060 01          		.1byte	0x3f
 1469 0060 40          		.1byte	0xc
 1470 0061 06          		.1byte	0x3
 1471 0061 00          		.1byte	0xe
 1472 0062 00          		.1byte	0x3a
 1473 0062 0E          		.1byte	0xb
 1474 0063 2E          		.1byte	0x3b
 1475 0063 01          		.1byte	0x5
 1476 0064 3F          		.1byte	0x27
 1477 0064 0C          		.1byte	0xc
 1478 0065 03          		.1byte	0x11
 1479 0065 0E          		.1byte	0x1
 1480 0066 3A          		.1byte	0x12
 1481 0066 0B          		.1byte	0x1
 1482 0067 3B          		.1byte	0x40
 1483 0067 05          		.1byte	0x6
 1484 0068 27          		.1byte	0x1
 1485 0068 0C          		.1byte	0x13
 1486 0069 11          		.1byte	0x0
 1487 0069 01          		.1byte	0x0
 1488 006a 12          		.1byte	0xf
 1489 006a 01          		.1byte	0x5
 1490 006b 40          		.1byte	0x0
 1491 006b 06          		.1byte	0x3
 1492 006c 01          		.1byte	0xe
 1493 006c 13          		.1byte	0x3a
 1494 006d 00          		.1byte	0xb
 1495 006d 00          		.1byte	0x3b
 1496 006e 0F          		.1byte	0x5
 1497 006e 05          		.1byte	0x49
 1498 006f 00          		.1byte	0x13
 1499 006f 03          		.1byte	0x2
 1500 0070 0E          		.1byte	0x6
 1501 0070 3A          		.1byte	0x0
 1502 0071 0B          		.1byte	0x0
 1503 0071 3B          		.1byte	0x10
 1504 0072 05          		.1byte	0x34
 1505 0072 49          		.1byte	0x0
 1506 0073 13          		.1byte	0x3
 1507 0073 02          		.1byte	0xe
 1508 0074 06          		.1byte	0x3a
 1509 0074 00          		.1byte	0xb
 1510 0075 00          		.1byte	0x3b
 1511 0075 10          		.1byte	0x5
 1512 0076 34          		.1byte	0x49
 1513 0076 00          		.1byte	0x13
 1514 0077 03          		.1byte	0x0
 1515 0077 0E          		.1byte	0x0
 1516 0078 3A          		.1byte	0x11
 1517 0078 0B          		.1byte	0x2e
 1518 0079 3B          		.1byte	0x0
 1519 0079 05          		.1byte	0x3f
 1520 007a 49          		.1byte	0xc
 1521 007a 13          		.1byte	0x3
 1522 007b 00          		.1byte	0xe
 1523 007b 00          		.1byte	0x3a
 1524 007c 11          		.1byte	0xb
 1525 007c 2E          		.1byte	0x3b
 1526 007d 00          		.1byte	0x5
 1527 007d 3F          		.1byte	0x27
 1528 007e 0C          		.1byte	0xc
 1529 007e 03          		.1byte	0x49
 1530 007f 0E          		.1byte	0x13
 1531 007f 3A          		.1byte	0x11
 1532 0080 0B          		.1byte	0x1
 1533 0080 3B          		.1byte	0x12
 1534 0081 05          		.1byte	0x1
 1535 0081 27          		.1byte	0x40
 1536 0082 0C          		.1byte	0xa
 1537 0082 49          		.1byte	0x0
 1538 0083 13          		.1byte	0x0
 1539 0083 11          		.1byte	0x12
 1540 0084 01          		.1byte	0x34
 1541 0084 12          		.1byte	0x0
 1542 0085 01          		.1byte	0x3
 1543 0085 40          		.1byte	0xe
 1544 0086 0A          		.1byte	0x3a
 1545 0086 00          		.1byte	0xb
 1546 0087 00          		.1byte	0x3b
 1547 0087 12          		.1byte	0x5
 1548 0088 34          		.1byte	0x49
 1549 0088 00          		.1byte	0x13
 1550 0089 03          		.1byte	0x2
 1551 0089 0E          		.1byte	0xa
 1552 008a 3A          		.1byte	0x0
 1553 008a 0B          		.1byte	0x0
 1554 008b 3B          		.1byte	0x13
 1555 008b 05          		.1byte	0x2e
 1556 008c 49          		.1byte	0x1
 1557 008c 13          		.1byte	0x3
 1558 008d 02          		.1byte	0xe
 1559 008d 0A          		.1byte	0x3a
 1560 008e 00          		.1byte	0xb
 1561 008e 00          		.1byte	0x3b
 1562 008f 13          		.1byte	0xb
 1563 008f 2E          		.1byte	0x27
 1564 0090 01          		.1byte	0xc
 1565 0090 03          		.1byte	0x11
 1566 0091 0E          		.1byte	0x1
 1567 0091 3A          		.1byte	0x12
 1568 0092 0B          		.1byte	0x1
 1569 0092 3B          		.1byte	0x40
 1570 0093 0B          		.1byte	0x6
 1571 0093 27          		.1byte	0x1
 1572 0094 0C          		.1byte	0x13
 1573 0094 11          		.1byte	0x0
 1574 0095 01          		.1byte	0x0
 1575 0095 12          		.1byte	0x14
 1576 0096 01          		.1byte	0x5
 1577 0096 40          		.1byte	0x0
 1578 0097 06          		.1byte	0x3
 1579 0097 01          		.1byte	0x8
 1580 0098 13          		.1byte	0x3a
 1581 0098 00          		.1byte	0xb
 1582 0099 00          		.1byte	0x3b
 1583 0099 14          		.1byte	0xb
 1584 009a 05          		.1byte	0x49
 1585 009a 00          		.1byte	0x13
 1586 009b 03          		.1byte	0x2
 1587 009b 08          		.1byte	0x6
 1588 009c 3A          		.1byte	0x0
 1589 009c 0B          		.1byte	0x0
 1590 009d 3B          		.1byte	0x15
 1591 009d 0B          		.1byte	0x34
 1592 009e 49          		.1byte	0x0
 1593 009e 13          		.1byte	0x3
 1594 009f 02          		.1byte	0xe
 1595 009f 06          		.1byte	0x3a
 1596 00a0 00          		.1byte	0xb
 1597 00a0 00          		.1byte	0x3b
 1598 00a1 15          		.1byte	0xb
 1599 00a1 34          		.1byte	0x49
 1600 00a2 00          		.1byte	0x13
 1601 00a2 03          		.1byte	0x2
 1602 00a3 0E          		.1byte	0x6
 1603 00a3 3A          		.1byte	0x0
 1604 00a4 0B          		.1byte	0x0
 1605 00a4 3B          		.1byte	0x16
 1606 00a5 0B          		.1byte	0x2e
 1607 00a5 49          		.1byte	0x0
 1608 00a6 13          		.1byte	0x3f
 1609 00a6 02          		.1byte	0xc
 1610 00a7 06          		.1byte	0x3
 1611 00a7 00          		.1byte	0xe
 1612 00a8 00          		.1byte	0x3a
 1613 00a8 16          		.1byte	0xb
 1614 00a9 2E          		.1byte	0x3b
 1615 00a9 00          		.1byte	0xb
 1616 00aa 3F          		.1byte	0x27
 1617 00aa 0C          		.1byte	0xc
 1618 00ab 03          		.1byte	0x11
 1619 00ab 0E          		.1byte	0x1
 1620 00ac 3A          		.1byte	0x12
 1621 00ac 0B          		.1byte	0x1
 1622 00ad 3B          		.1byte	0x40
 1623 00ad 0B          		.1byte	0x6
 1624 00ae 27          		.1byte	0x0
 1625 00ae 0C          		.1byte	0x0
 1626 00af 11          		.1byte	0x17
 1627 00af 01          		.1byte	0x34
 1628 00b0 12          		.1byte	0x0
 1629 00b0 01          		.1byte	0x3
 1630 00b1 40          		.1byte	0xe
 1631 00b1 06          		.1byte	0x3a
 1632 00b2 00          		.1byte	0xb
 1633 00b2 00          		.1byte	0x3b
 1634 00b3 17          		.1byte	0xb
 1635 00b3 34          		.1byte	0x49
 1636 00b4 00          		.1byte	0x13
 1637 00b4 03          		.1byte	0x3f
 1638 00b5 0E          		.1byte	0xc
 1639 00b5 3A          		.1byte	0x2
 1640 00b6 0B          		.1byte	0xa
 1641 00b6 3B          		.1byte	0x0
 1642 00b7 0B          		.1byte	0x0
 1643 00b7 49          		.1byte	0x0
 1644 00b8 13          		.section	.debug_pubnames,"",@progbits
 1645 00b8 3F          		.4byte	0xdd
 1646 00b9 0C          		.2byte	0x2
 1647 00b9 02          		.4byte	.Ldebug_info0
 1648 00ba 0A          		.4byte	0x423
 1649 00ba 00          		.4byte	0x2b7
 1650 00bb 00          		.ascii "HrInitSwitchData\000"
 1651 00bb 00          		.4byte	0x2cb
 1652                 		.ascii "HandleSwitchPIOChangedEvent\000"
 1653 0000 00 00 00 DD 		.4byte	0x2f7
 1654 0002 00 02       		.ascii "HrInitSwitchHardware\000"
 1655 0003 00 00 00 00 		.4byte	0x30d
 1656 0005 00 00 04 23 		.ascii "HrHwDataInit\000"
 1657 0007 00 00 02 B7 		.4byte	0x323
 1658 0009 48 72 49 6E 		.ascii "HandlePIOChangedEvent\000"
 1658      69 74 53 77 
 1658      69 74 63 68 
 1658      44 61 74 61 
 1658      00 
 1659 0011 00 00 02 CB 		.4byte	0x35a
 1660 0013 48 61 6E 64 		.ascii "GetRRValue\000"
 1660      6C 65 53 77 
 1660      69 74 63 68 
 1660      50 49 4F 43 
 1660      68 61 6E 67 
 1661 0021 00 00 02 F7 		.4byte	0x372
 1662 0023 48 72 49 6E 		.ascii "SoundBuzzer\000"
 1662      69 74 53 77 
 1662      69 74 63 68 
 1662      48 61 72 64 
 1662      77 61 72 65 
 1663 002e 00 00 03 0D 		.4byte	0x3e9
 1664 0030 48 72 48 77 		.ascii "HrInitHardware\000"
 1664      44 61 74 61 
 1664      49 6E 69 74 
 1664      00 
 1665 0036 00 00 03 23 		.4byte	0x3fe
 1666 0038 48 61 6E 64 		.ascii "g_app_hw_data\000"
 1666      6C 65 50 49 
 1666      4F 43 68 61 
 1666      6E 67 65 64 
 1666      45 76 65 6E 
 1667 0043 00 00 03 5A 		.4byte	0x410
 1668 0045 47 65 74 52 		.ascii "g_dimmer_data\000"
 1668      52 56 61 6C 
 1668      75 65 00 
 1669 004b 00 00 03 72 		.4byte	0x0
 1670 004d 53 6F 75 6E 		.section	.debug_aranges,"",@progbits
 1670      64 42 75 7A 
 1670      7A 65 72 00 
 1671 0053 00 00 03 E9 		.4byte	0x5c
 1672 0055 48 72 49 6E 		.2byte	0x2
 1672      69 74 48 61 
 1672      72 64 77 61 
 1672      72 65 00 
 1673 005c 00 00 03 FE 		.4byte	.Ldebug_info0
 1674 005e 67 5F 61 70 		.1byte	0x4
 1674      70 5F 68 77 
 1674      5F 64 61 74 
 1674      61 00 
 1675 0065 00 00 04 10 		.1byte	0x0
 1676 0067 67 5F 64 69 		.2byte	0x0
 1676      6D 6D 65 72 
 1676      5F 64 61 74 
 1676      61 00 
 1677 006e 00 00 00 00 		.2byte	0x0
 1678                 		.4byte	.LFB9
 1679 0000 00 00 00 5C 		.4byte	.LFE9-.LFB9
 1680 0002 00 02       		.4byte	.LFB10
 1681 0003 00 00 00 00 		.4byte	.LFE10-.LFB10
 1682 0005 04          		.4byte	.LFB8
 1683 0005 00          		.4byte	.LFE8-.LFB8
 1684 0006 00 00       		.4byte	.LFB4
 1685 0007 00 00       		.4byte	.LFE4-.LFB4
 1686 0008 00 00 00 00 		.4byte	.LFB7
 1687 000a 00 00 00 01 		.4byte	.LFE7-.LFB7
 1688 000c 00 00 00 00 		.4byte	.LFB6
 1689 000e 00 00 00 00 		.4byte	.LFE6-.LFB6
 1690 0010 00 00 00 00 		.4byte	.LFB5
 1691 0012 00 00 00 00 		.4byte	.LFE5-.LFB5
 1692 0014 00 00 00 00 		.4byte	.LFB2
 1693 0016 00 00 00 00 		.4byte	.LFE2-.LFB2
 1694 0018 00 00 00 00 		.4byte	.LFB3
 1695 001a 00 00 00 00 		.4byte	.LFE3-.LFB3
 1696 001c 00 00 00 00 		.4byte	0x0
 1697 001e 00 00 00 00 		.4byte	0x0
 1698 0020 00 00 00 00 		.section	.debug_ranges,"",@progbits
 1699 0022 00 00 00 00 	.Ldebug_ranges0:
 1700 0024 00 00 00 00 		.4byte	.Ltext0
 1701 0026 00 00 00 00 		.4byte	.Letext0
 1702 0028 00 00 00 00 		.4byte	.LFB9
 1703 002a 00 00 00 00 		.4byte	.LFE9
 1704 002c 00 00 00 00 		.4byte	.LFB10
 1705 002e 00 00 00 00 		.4byte	.LFE10
 1706                 		.4byte	.LFB8
 1707                 		.4byte	.LFE8
 1708 0000 00 00 00 00 		.4byte	.LFB4
 1709 0002 00 00 00 00 		.4byte	.LFE4
 1710 0004 00 00 00 00 		.4byte	.LFB7
 1711 0006 00 00 00 00 		.4byte	.LFE7
 1712 0008 00 00 00 00 		.4byte	.LFB6
 1713 000a 00 00 00 00 		.4byte	.LFE6
 1714 000c 00 00 00 00 		.4byte	.LFB5
 1715 000e 00 00 00 00 		.4byte	.LFE5
 1716 0010 00 00 00 00 		.4byte	.LFB2
 1717 0012 00 00 00 00 		.4byte	.LFE2
 1718 0014 00 00 00 00 		.4byte	.LFB3
 1719 0016 00 00 00 00 		.4byte	.LFE3
 1720 0018 00 00 00 00 		.4byte	0x0
 1721 001a 00 00 00 00 		.4byte	0x0
 1722 001c 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 1723 001e 00 00 00 00 	.LASF82:
 1724 0020 00 00 00 00 		.ascii "HrInitSwitchData\000"
 1725 0022 00 00 00 00 	.LASF33:
 1726 0024 00 00 00 00 		.ascii "pio_mode_ana_mon_clk_pio\000"
 1727 0026 00 00 00 00 	.LASF83:
 1728 0028 00 00 00 00 		.ascii "HrInitSwitchHardware\000"
 1729 002a 00 00 00 00 	.LASF21:
 1730                 		.ascii "pio_mode_radio_rx_en\000"
 1731                 	.LASF80:
 1732 0000 48 72 49 6E 		.ascii "app_panic_invalid_state\000"
 1732      69 74 53 77 
 1732      69 74 63 68 
 1732      44 61 74 61 
 1732      00 
 1733                 	.LASF64:
 1734 0008 70 69 6F 5F 		.ascii "beep_type\000"
 1734      6D 6F 64 65 
 1734      5F 61 6E 61 
 1734      5F 6D 6F 6E 
 1734      5F 63 6C 6B 
 1735                 	.LASF29:
 1736 0015 48 72 49 6E 		.ascii "pio_mode_i2c_data\000"
 1736      69 74 53 77 
 1736      69 74 63 68 
 1736      48 61 72 64 
 1736      77 61 72 65 
 1737                 	.LASF6:
 1738 001f 70 69 6F 5F 		.ascii "short int\000"
 1738      6D 6F 64 65 
 1738      5F 72 61 64 
 1738      69 6F 5F 72 
 1738      78 5F 65 6E 
 1739                 	.LASF87:
 1740 002a 61 70 70 5F 		.ascii "pio_changed\000"
 1740      70 61 6E 69 
 1740      63 5F 69 6E 
 1740      76 61 6C 69 
 1740      64 5F 73 74 
 1741                 	.LASF59:
 1742 0036 62 65 65 70 		.ascii "buzzer_beep_long\000"
 1742      5F 74 79 70 
 1742      65 00 
 1743                 	.LASF41:
 1744 003b 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_no_pulls\000"
 1744      6D 6F 64 65 
 1744      5F 69 32 63 
 1744      5F 64 61 74 
 1744      61 00 
 1745                 	.LASF94:
 1746 0044 73 68 6F 72 		.ascii "hr_sensor_hw.c\000"
 1746      74 20 69 6E 
 1746      74 00 
 1747                 	.LASF26:
 1748 0049 70 69 6F 5F 		.ascii "pio_mode_pio_control_rxd\000"
 1748      63 68 61 6E 
 1748      67 65 64 00 
 1749                 	.LASF23:
 1750 004f 62 75 7A 7A 		.ascii "pio_mode_nvm_power_en\000"
 1750      65 72 5F 62 
 1750      65 65 70 5F 
 1750      6C 6F 6E 67 
 1750      00 
 1751                 	.LASF86:
 1752 0057 70 69 6F 5F 		.ascii "HandlePIOChangedEvent\000"
 1752      69 32 63 5F 
 1752      70 75 6C 6C 
 1752      5F 6D 6F 64 
 1752      65 5F 6E 6F 
 1753                 	.LASF89:
 1754 0065 68 72 5F 73 		.ascii "beep_timer\000"
 1754      65 6E 73 6F 
 1754      72 5F 68 77 
 1754      2E 63 00 
 1755                 	.LASF98:
 1756 006c 70 69 6F 5F 		.ascii "appBuzzerTimerHandler\000"
 1756      6D 6F 64 65 
 1756      5F 70 69 6F 
 1756      5F 63 6F 6E 
 1756      74 72 6F 6C 
 1757                 	.LASF95:
 1758 0079 70 69 6F 5F 		.ascii "C:\\Users\\hiro\\Documents\\GitHub\\heekari\\HeekariFirmware\000"
 1758      6D 6F 64 65 
 1758      5F 6E 76 6D 
 1758      5F 70 6F 77 
 1758      65 72 5F 65 
 1759                 	.LASF48:
 1760 0084 48 61 6E 64 		.ascii "pio_event_mode_disable\000"
 1760      6C 65 50 49 
 1760      4F 43 68 61 
 1760      6E 67 65 64 
 1760      45 76 65 6E 
 1761                 	.LASF31:
 1762 008f 62 65 65 70 		.ascii "pio_mode_uart_flow_ctrl\000"
 1762      5F 74 69 6D 
 1762      65 72 00 
 1763                 	.LASF68:
 1764 0094 61 70 70 42 		.ascii "last_dimmer_var\000"
 1764      75 7A 7A 65 
 1764      72 54 69 6D 
 1764      65 72 48 61 
 1764      6E 64 6C 65 
 1765                 	.LASF30:
 1766 009f 43 3A 5C 55 		.ascii "pio_mode_i2c_clock\000"
 1766      73 65 72 73 
 1766      5C 68 69 72 
 1766      6F 5C 44 6F 
 1766      63 75 6D 65 
 1767                 	.LASF65:
 1768 00bb 70 69 6F 5F 		.ascii "beep_count\000"
 1768      65 76 65 6E 
 1768      74 5F 6D 6F 
 1768      64 65 5F 64 
 1768      69 73 61 62 
 1769                 	.LASF49:
 1770 00c6 70 69 6F 5F 		.ascii "pio_event_mode_rising\000"
 1770      6D 6F 64 65 
 1770      5F 75 61 72 
 1770      74 5F 66 6C 
 1770      6F 77 5F 63 
 1771                 	.LASF45:
 1772 00d2 6C 61 73 74 		.ascii "pio_i2c_pull_mode_strong_pull_up\000"
 1772      5F 64 69 6D 
 1772      6D 65 72 5F 
 1772      76 61 72 00 
 1773                 	.LASF34:
 1774 00da 70 69 6F 5F 		.ascii "pio_mode_no_pulls\000"
 1774      6D 6F 64 65 
 1774      5F 69 32 63 
 1774      5F 63 6C 6F 
 1774      63 6B 00 
 1775                 	.LASF79:
 1776 00e4 62 65 65 70 		.ascii "app_panic_con_param_update\000"
 1776      5F 63 6F 75 
 1776      6E 74 00 
 1777                 	.LASF54:
 1778 00e9 70 69 6F 5F 		.ascii "pio_pwm_mode_open_source\000"
 1778      65 76 65 6E 
 1778      74 5F 6D 6F 
 1778      64 65 5F 72 
 1778      69 73 69 6E 
 1779                 	.LASF85:
 1780 00f4 70 69 6F 5F 		.ascii "HandleSwitchPIOChangedEvent\000"
 1780      69 32 63 5F 
 1780      70 75 6C 6C 
 1780      5F 6D 6F 64 
 1780      65 5F 73 74 
 1781                 	.LASF47:
 1782 0105 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_sticky\000"
 1782      6D 6F 64 65 
 1782      5F 6E 6F 5F 
 1782      70 75 6C 6C 
 1782      73 00 
 1783                 	.LASF69:
 1784 010e 61 70 70 5F 		.ascii "SWITCH_DIMMER_DATA_T\000"
 1784      70 61 6E 69 
 1784      63 5F 63 6F 
 1784      6E 5F 70 61 
 1784      72 61 6D 5F 
 1785                 	.LASF73:
 1786 011b 70 69 6F 5F 		.ascii "app_panic_db_registration\000"
 1786      70 77 6D 5F 
 1786      6D 6F 64 65 
 1786      5F 6F 70 65 
 1786      6E 5F 73 6F 
 1787                 	.LASF9:
 1788 0128 48 61 6E 64 		.ascii "pio_mode_user\000"
 1788      6C 65 53 77 
 1788      69 74 63 68 
 1788      50 49 4F 43 
 1788      68 61 6E 67 
 1789                 	.LASF39:
 1790 0136 70 69 6F 5F 		.ascii "pio_mode_weak_sticky\000"
 1790      69 32 63 5F 
 1790      70 75 6C 6C 
 1790      5F 6D 6F 64 
 1790      65 5F 73 74 
 1791                 	.LASF16:
 1792 0146 53 57 49 54 		.ascii "pio_mode_quadrature0\000"
 1792      43 48 5F 44 
 1792      49 4D 4D 45 
 1792      52 5F 44 41 
 1792      54 41 5F 54 
 1793                 	.LASF17:
 1794 0150 61 70 70 5F 		.ascii "pio_mode_quadrature1\000"
 1794      70 61 6E 69 
 1794      63 5F 64 62 
 1794      5F 72 65 67 
 1794      69 73 74 72 
 1795                 	.LASF18:
 1796 015d 70 69 6F 5F 		.ascii "pio_mode_quadrature2\000"
 1796      6D 6F 64 65 
 1796      5F 75 73 65 
 1796      72 00 
 1797                 	.LASF19:
 1798 0164 70 69 6F 5F 		.ascii "pio_mode_quadrature3\000"
 1798      6D 6F 64 65 
 1798      5F 77 65 61 
 1798      6B 5F 73 74 
 1798      69 63 6B 79 
 1799                 	.LASF70:
 1800 016f 70 69 6F 5F 		.ascii "app_panic_set_advert_params\000"
 1800      6D 6F 64 65 
 1800      5F 71 75 61 
 1800      64 72 61 74 
 1800      75 72 65 30 
 1801                 	.LASF88:
 1802 0179 70 69 6F 5F 		.ascii "SoundBuzzer\000"
 1802      6D 6F 64 65 
 1802      5F 71 75 61 
 1802      64 72 61 74 
 1802      75 72 65 31 
 1803                 	.LASF0:
 1804 0184 70 69 6F 5F 		.ascii "unsigned char\000"
 1804      6D 6F 64 65 
 1804      5F 71 75 61 
 1804      64 72 61 74 
 1804      75 72 65 32 
 1805                 	.LASF11:
 1806 018e 70 69 6F 5F 		.ascii "pio_mode_clk_req\000"
 1806      6D 6F 64 65 
 1806      5F 71 75 61 
 1806      64 72 61 74 
 1806      75 72 65 33 
 1807                 	.LASF60:
 1808 0199 61 70 70 5F 		.ascii "buzzer_beep_twice\000"
 1808      70 61 6E 69 
 1808      63 5F 73 65 
 1808      74 5F 61 64 
 1808      76 65 72 74 
 1809                 	.LASF78:
 1810 01a7 53 6F 75 6E 		.ascii "app_panic_add_whitelist\000"
 1810      64 42 75 7A 
 1810      7A 65 72 00 
 1811                 	.LASF43:
 1812 01ad 75 6E 73 69 		.ascii "pio_i2c_pull_mode_weak_pull_up\000"
 1812      67 6E 65 64 
 1812      20 63 68 61 
 1812      72 00 
 1813                 	.LASF75:
 1814 01b4 70 69 6F 5F 		.ascii "app_panic_nvm_write\000"
 1814      6D 6F 64 65 
 1814      5F 63 6C 6B 
 1814      5F 72 65 71 
 1814      00 
 1815                 	.LASF5:
 1816 01bc 62 75 7A 7A 		.ascii "signed char\000"
 1816      65 72 5F 62 
 1816      65 65 70 5F 
 1816      74 77 69 63 
 1816      65 00 
 1817                 	.LASF12:
 1818 01c5 61 70 70 5F 		.ascii "pio_mode_pwm0\000"
 1818      70 61 6E 69 
 1818      63 5F 61 64 
 1818      64 5F 77 68 
 1818      69 74 65 6C 
 1819                 	.LASF13:
 1820 01d1 70 69 6F 5F 		.ascii "pio_mode_pwm1\000"
 1820      69 32 63 5F 
 1820      70 75 6C 6C 
 1820      5F 6D 6F 64 
 1820      65 5F 77 65 
 1821                 	.LASF14:
 1822 01e1 61 70 70 5F 		.ascii "pio_mode_pwm2\000"
 1822      70 61 6E 69 
 1822      63 5F 6E 76 
 1822      6D 5F 77 72 
 1822      69 74 65 00 
 1823                 	.LASF15:
 1824 01eb 73 69 67 6E 		.ascii "pio_mode_pwm3\000"
 1824      65 64 20 63 
 1824      68 61 72 00 
 1825                 	.LASF8:
 1826 01f1 70 69 6F 5F 		.ascii "unsigned int\000"
 1826      6D 6F 64 65 
 1826      5F 70 77 6D 
 1826      30 00 
 1827                 	.LASF62:
 1828 01f8 70 69 6F 5F 		.ascii "buzzer_beep_type\000"
 1828      6D 6F 64 65 
 1828      5F 70 77 6D 
 1828      31 00 
 1829                 	.LASF74:
 1830 01ff 70 69 6F 5F 		.ascii "app_panic_nvm_read\000"
 1830      6D 6F 64 65 
 1830      5F 70 77 6D 
 1830      32 00 
 1831                 	.LASF55:
 1832 0206 70 69 6F 5F 		.ascii "pio_pwm_mode_inverted_push_pull\000"
 1832      6D 6F 64 65 
 1832      5F 70 77 6D 
 1832      33 00 
 1833                 	.LASF1:
 1834 020d 75 6E 73 69 		.ascii "short unsigned int\000"
 1834      67 6E 65 64 
 1834      20 69 6E 74 
 1834      00 
 1835                 	.LASF97:
 1836 0213 62 75 7A 7A 		.ascii "GetRRValue\000"
 1836      65 72 5F 62 
 1836      65 65 70 5F 
 1836      74 79 70 65 
 1836      00 
 1837                 	.LASF37:
 1838 021c 61 70 70 5F 		.ascii "pio_mode_strong_pull_down\000"
 1838      70 61 6E 69 
 1838      63 5F 6E 76 
 1838      6D 5F 72 65 
 1838      61 64 00 
 1839                 	.LASF91:
 1840 0225 70 69 6F 5F 		.ascii "g_app_hw_data\000"
 1840      70 77 6D 5F 
 1840      6D 6F 64 65 
 1840      5F 69 6E 76 
 1840      65 72 74 65 
 1841                 	.LASF96:
 1842 0235 73 68 6F 72 		.ascii "pios\000"
 1842      74 20 75 6E 
 1842      73 69 67 6E 
 1842      65 64 20 69 
 1842      6E 74 00 
 1843                 	.LASF92:
 1844 023f 47 65 74 52 		.ascii "g_dimmer_data\000"
 1844      52 56 61 6C 
 1844      75 65 00 
 1845                 	.LASF58:
 1846 0244 70 69 6F 5F 		.ascii "buzzer_beep_short\000"
 1846      6D 6F 64 65 
 1846      5F 73 74 72 
 1846      6F 6E 67 5F 
 1846      70 75 6C 6C 
 1847                 	.LASF7:
 1848 0251 67 5F 61 70 		.ascii "long int\000"
 1848      70 5F 68 77 
 1848      5F 64 61 74 
 1848      61 00 
 1849                 	.LASF56:
 1850 0258 70 69 6F 73 		.ascii "timer_id\000"
 1850      00 
 1851                 	.LASF36:
 1852 025b 67 5F 64 69 		.ascii "pio_mode_weak_pull_up\000"
 1852      6D 6D 65 72 
 1852      5F 64 61 74 
 1852      61 00 
 1853                 	.LASF50:
 1854 0262 62 75 7A 7A 		.ascii "pio_event_mode_falling\000"
 1854      65 72 5F 62 
 1854      65 65 70 5F 
 1854      73 68 6F 72 
 1854      74 00 
 1855                 	.LASF90:
 1856 026b 6C 6F 6E 67 		.ascii "HrInitHardware\000"
 1856      20 69 6E 74 
 1856      00 
 1857                 	.LASF2:
 1858 026f 74 69 6D 65 		.ascii "uint16\000"
 1858      72 5F 69 64 
 1858      00 
 1859                 	.LASF22:
 1860 0274 70 69 6F 5F 		.ascii "pio_mode_radio_tx_en\000"
 1860      6D 6F 64 65 
 1860      5F 77 65 61 
 1860      6B 5F 70 75 
 1860      6C 6C 5F 75 
 1861                 	.LASF3:
 1862 027f 70 69 6F 5F 		.ascii "uint32\000"
 1862      65 76 65 6E 
 1862      74 5F 6D 6F 
 1862      64 65 5F 66 
 1862      61 6C 6C 69 
 1863                 	.LASF61:
 1864 028a 48 72 49 6E 		.ascii "buzzer_beep_thrice\000"
 1864      69 74 48 61 
 1864      72 64 77 61 
 1864      72 65 00 
 1865                 	.LASF4:
 1866 0292 75 69 6E 74 		.ascii "long unsigned int\000"
 1866      31 36 00 
 1867                 	.LASF27:
 1868 0295 70 69 6F 5F 		.ascii "pio_mode_ser_flash_dout\000"
 1868      6D 6F 64 65 
 1868      5F 72 61 64 
 1868      69 6F 5F 74 
 1868      78 5F 65 6E 
 1869                 	.LASF32:
 1870 02a0 75 69 6E 74 		.ascii "pio_mode_pio_control_timer\000"
 1870      33 32 00 
 1871                 	.LASF72:
 1872 02a3 62 75 7A 7A 		.ascii "app_panic_set_scan_rsp_data\000"
 1872      65 72 5F 62 
 1872      65 65 70 5F 
 1872      74 68 72 69 
 1872      63 65 00 
 1873                 	.LASF66:
 1874 02ad 6C 6F 6E 67 		.ascii "button_press_tid\000"
 1874      20 75 6E 73 
 1874      69 67 6E 65 
 1874      64 20 69 6E 
 1874      74 00 
 1875                 	.LASF40:
 1876 02b6 70 69 6F 5F 		.ascii "pio_mode_strong_sticky\000"
 1876      6D 6F 64 65 
 1876      5F 73 65 72 
 1876      5F 66 6C 61 
 1876      73 68 5F 64 
 1877                 	.LASF44:
 1878 02c2 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_pull_down\000"
 1878      6D 6F 64 65 
 1878      5F 70 69 6F 
 1878      5F 63 6F 6E 
 1878      74 72 6F 6C 
 1879                 	.LASF63:
 1880 02cf 61 70 70 5F 		.ascii "buzzer_tid\000"
 1880      70 61 6E 69 
 1880      63 5F 73 65 
 1880      74 5F 73 63 
 1880      61 6E 5F 72 
 1881                 	.LASF53:
 1882 02dd 62 75 74 74 		.ascii "pio_pwm_mode_open_drain\000"
 1882      6F 6E 5F 70 
 1882      72 65 73 73 
 1882      5F 74 69 64 
 1882      00 
 1883                 	.LASF84:
 1884 02e6 70 69 6F 5F 		.ascii "HrHwDataInit\000"
 1884      6D 6F 64 65 
 1884      5F 73 74 72 
 1884      6F 6E 67 5F 
 1884      73 74 69 63 
 1885                 	.LASF28:
 1886 02f1 70 69 6F 5F 		.ascii "pio_mode_ser_flash_csb\000"
 1886      69 32 63 5F 
 1886      70 75 6C 6C 
 1886      5F 6D 6F 64 
 1886      65 5F 73 74 
 1887                 	.LASF24:
 1888 0303 62 75 7A 7A 		.ascii "pio_mode_pio_controller\000"
 1888      65 72 5F 74 
 1888      69 64 00 
 1889                 	.LASF57:
 1890 0308 70 69 6F 5F 		.ascii "buzzer_beep_off\000"
 1890      70 77 6D 5F 
 1890      6D 6F 64 65 
 1890      5F 6F 70 65 
 1890      6E 5F 64 72 
 1891                 	.LASF52:
 1892 0314 48 72 48 77 		.ascii "pio_pwm_mode_push_pull\000"
 1892      44 61 74 61 
 1892      49 6E 69 74 
 1892      00 
 1893                 	.LASF10:
 1894 031b 70 69 6F 5F 		.ascii "pio_mode_edge_capture\000"
 1894      6D 6F 64 65 
 1894      5F 73 65 72 
 1894      5F 66 6C 61 
 1894      73 68 5F 63 
 1895                 	.LASF42:
 1896 0326 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_pull_down\000"
 1896      6D 6F 64 65 
 1896      5F 70 69 6F 
 1896      5F 63 6F 6E 
 1896      74 72 6F 6C 
 1897                 	.LASF38:
 1898 0332 62 75 7A 7A 		.ascii "pio_mode_strong_pull_up\000"
 1898      65 72 5F 62 
 1898      65 65 70 5F 
 1898      6F 66 66 00 
 1899                 	.LASF71:
 1900 033a 70 69 6F 5F 		.ascii "app_panic_set_advert_data\000"
 1900      70 77 6D 5F 
 1900      6D 6F 64 65 
 1900      5F 70 75 73 
 1900      68 5F 70 75 
 1901                 	.LASF76:
 1902 0346 70 69 6F 5F 		.ascii "app_panic_read_tx_pwr_level\000"
 1902      6D 6F 64 65 
 1902      5F 65 64 67 
 1902      65 5F 63 61 
 1902      70 74 75 72 
 1903                 	.LASF35:
 1904 0351 70 69 6F 5F 		.ascii "pio_mode_weak_pull_down\000"
 1904      69 32 63 5F 
 1904      70 75 6C 6C 
 1904      5F 6D 6F 64 
 1904      65 5F 77 65 
 1905                 	.LASF46:
 1906 0361 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_sticky\000"
 1906      6D 6F 64 65 
 1906      5F 73 74 72 
 1906      6F 6E 67 5F 
 1906      70 75 6C 6C 
 1907                 	.LASF81:
 1908 036d 61 70 70 5F 		.ascii "app_panic_unexpected_beep_type\000"
 1908      70 61 6E 69 
 1908      63 5F 73 65 
 1908      74 5F 61 64 
 1908      76 65 72 74 
 1909                 	.LASF25:
 1910 037a 61 70 70 5F 		.ascii "pio_mode_pio_control_txd\000"
 1910      70 61 6E 69 
 1910      63 5F 72 65 
 1910      61 64 5F 74 
 1910      78 5F 70 77 
 1911                 	.LASF67:
 1912 0388 70 69 6F 5F 		.ascii "APP_HW_DATA_T\000"
 1912      6D 6F 64 65 
 1912      5F 77 65 61 
 1912      6B 5F 70 75 
 1912      6C 6C 5F 64 
 1913                 	.LASF51:
 1914 0394 70 69 6F 5F 		.ascii "pio_event_mode_both\000"
 1914      69 32 63 5F 
 1914      70 75 6C 6C 
 1914      5F 6D 6F 64 
 1914      65 5F 77 65 
 1915                 	.LASF20:
 1916 03a3 61 70 70 5F 		.ascii "pio_mode_uart\000"
 1916      70 61 6E 69 
 1916      63 5F 75 6E 
 1916      65 78 70 65 
 1916      63 74 65 64 
 1917                 	.LASF93:
 1918 03b3 70 69 6F 5F 		.ascii "GNU C 4.3.4 CSR version 21 for xap [1468380]\000"
 1918      6D 6F 64 65 
 1918      5F 70 69 6F 
 1918      5F 63 6F 6E 
 1918      74 72 6F 6C 
 1919                 	.LASF77:
 1920 03bf 41 50 50 5F 		.ascii "app_panic_delete_whitelist\000"
 1920      48 57 5F 44 
 1920      41 54 41 5F 
 1920      54 00 
 1921                 		.ident	"GCC: (GNU) 4.3.4 CSR version 21 for xap [1468380]"
 1922 03c6 70 69 6F 5F 	...
 1922      65 76 65 6E 
 1922      74 5F 6D 6F 
 1922      64 65 5F 62 
 1922      6F 74 68 00 
