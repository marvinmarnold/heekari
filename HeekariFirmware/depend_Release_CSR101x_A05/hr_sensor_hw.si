   1                 		.file	"hr_sensor_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.HrHwDataInit,"ax",@progbits
  15                 		.global	HrHwDataInit
  16                 		.type	HrHwDataInit, @function
  17                 	HrHwDataInit:
  18                 	.LFB4:
  19                 		.file 1 "hr_sensor_hw.c"
   0:hr_sensor_hw.c **** /******************************************************************************
   1:hr_sensor_hw.c ****  *  Copyright (C) Cambridge Silicon Radio Limited 2012-2013
   2:hr_sensor_hw.c ****  *  Part of CSR uEnergy SDK 2.2.2
   3:hr_sensor_hw.c ****  *  Application version 2.2.2.0
   4:hr_sensor_hw.c ****  *
   5:hr_sensor_hw.c ****  *  FILE
   6:hr_sensor_hw.c ****  *      hr_sensor_hw.c
   7:hr_sensor_hw.c ****  *
   8:hr_sensor_hw.c ****  *  DESCRIPTION
   9:hr_sensor_hw.c ****  *      This file defines the Heart Rate sensors hardware specific routines.
  10:hr_sensor_hw.c ****  *
  11:hr_sensor_hw.c ****  *****************************************************************************/
  12:hr_sensor_hw.c **** 
  13:hr_sensor_hw.c **** /*============================================================================*
  14:hr_sensor_hw.c ****  *  SDK Header Files
  15:hr_sensor_hw.c ****  *============================================================================*/
  16:hr_sensor_hw.c **** 
  17:hr_sensor_hw.c **** #include <pio.h>
  18:hr_sensor_hw.c **** #include <pio_ctrlr.h>
  19:hr_sensor_hw.c **** #include <timer.h>
  20:hr_sensor_hw.c **** 
  21:hr_sensor_hw.c **** /*============================================================================*
  22:hr_sensor_hw.c ****  *  Local Header Files
  23:hr_sensor_hw.c ****  *============================================================================*/
  24:hr_sensor_hw.c **** 
  25:hr_sensor_hw.c **** #include "hr_sensor.h"
  26:hr_sensor_hw.c **** #include "hr_sensor_gatt.h"
  27:hr_sensor_hw.c **** #include "hr_sensor_hw.h"
  28:hr_sensor_hw.c **** #include "heart_rate_service.h"
  29:hr_sensor_hw.c **** #include "app_gatt_db.h"
  30:hr_sensor_hw.c **** #include "app_gatt.h"
  31:hr_sensor_hw.c **** 
  32:hr_sensor_hw.c **** /*============================================================================*
  33:hr_sensor_hw.c ****  *  Private Definitions
  34:hr_sensor_hw.c ****  *============================================================================*/
  35:hr_sensor_hw.c **** 
  36:hr_sensor_hw.c **** /* Setup PIOs
  37:hr_sensor_hw.c ****  *  PIO3    Buzzer
  38:hr_sensor_hw.c ****  *  PIO4    LED 1
  39:hr_sensor_hw.c ****  *  PIO9    On Board Input - HR Input
  40:hr_sensor_hw.c ****  *  PIO10   LED 2 (Not Used)
  41:hr_sensor_hw.c ****  *  PIO11   Button
  42:hr_sensor_hw.c ****  */
  43:hr_sensor_hw.c **** 
  44:hr_sensor_hw.c **** #define BUZZER_PIO              (3)
  45:hr_sensor_hw.c **** #define HR_INPUT_PIO            (9)
  46:hr_sensor_hw.c **** #define BUTTON_PIO              (11)
  47:hr_sensor_hw.c **** 
  48:hr_sensor_hw.c **** #define PIO_BIT_MASK(pio)       (0x01 << (pio))
  49:hr_sensor_hw.c **** 
  50:hr_sensor_hw.c **** #define BUZZER_PIO_MASK         (PIO_BIT_MASK(BUZZER_PIO))
  51:hr_sensor_hw.c **** #define HR_INPUT_PIO_MASK       (PIO_BIT_MASK(HR_INPUT_PIO))
  52:hr_sensor_hw.c **** #define BUTTON_PIO_MASK         (PIO_BIT_MASK(BUTTON_PIO))
  53:hr_sensor_hw.c **** 
  54:hr_sensor_hw.c **** /* PIO direction */
  55:hr_sensor_hw.c **** #define PIO_DIRECTION_INPUT     (FALSE)
  56:hr_sensor_hw.c **** #define PIO_DIRECTION_OUTPUT    (TRUE)
  57:hr_sensor_hw.c **** 
  58:hr_sensor_hw.c **** /* PIO state */
  59:hr_sensor_hw.c **** #define PIO_STATE_HIGH          (TRUE)
  60:hr_sensor_hw.c **** #define PIO_STATE_LOW           (FALSE)
  61:hr_sensor_hw.c **** 
  62:hr_sensor_hw.c **** /* Extra long button press timer */
  63:hr_sensor_hw.c **** #define EXTRA_LONG_BUTTON_PRESS_TIMER \
  64:hr_sensor_hw.c ****                                 (4*SECOND)
  65:hr_sensor_hw.c **** 
  66:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
  67:hr_sensor_hw.c **** 
  68:hr_sensor_hw.c **** /* The index (0-3) of the PWM unit to be configured */
  69:hr_sensor_hw.c **** #define BUZZER_PWM_INDEX_0      (0)
  70:hr_sensor_hw.c **** 
  71:hr_sensor_hw.c **** /* PWM parameters for Buzzer */
  72:hr_sensor_hw.c **** 
  73:hr_sensor_hw.c **** /* Dull on. off and hold times */
  74:hr_sensor_hw.c **** #define DULL_BUZZ_ON_TIME       (2)    /* 60us */
  75:hr_sensor_hw.c **** #define DULL_BUZZ_OFF_TIME      (15)   /* 450us */
  76:hr_sensor_hw.c **** #define DULL_BUZZ_HOLD_TIME     (0)
  77:hr_sensor_hw.c **** 
  78:hr_sensor_hw.c **** /* Bright on, off and hold times */
  79:hr_sensor_hw.c **** #define BRIGHT_BUZZ_ON_TIME     (2)    /* 60us */
  80:hr_sensor_hw.c **** #define BRIGHT_BUZZ_OFF_TIME    (15)   /* 450us */
  81:hr_sensor_hw.c **** #define BRIGHT_BUZZ_HOLD_TIME   (0)    /* 0us */
  82:hr_sensor_hw.c **** 
  83:hr_sensor_hw.c **** #define BUZZ_RAMP_RATE          (0xFF)
  84:hr_sensor_hw.c **** 
  85:hr_sensor_hw.c **** /* TIMER values for Buzzer */
  86:hr_sensor_hw.c **** #define SHORT_BEEP_TIMER_VALUE  (100* MILLISECOND)
  87:hr_sensor_hw.c **** #define LONG_BEEP_TIMER_VALUE   (500* MILLISECOND)
  88:hr_sensor_hw.c **** #define BEEP_GAP_TIMER_VALUE    (25* MILLISECOND)
  89:hr_sensor_hw.c **** 
  90:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
  91:hr_sensor_hw.c **** 
  92:hr_sensor_hw.c **** /*============================================================================*
  93:hr_sensor_hw.c ****  *  Public data
  94:hr_sensor_hw.c ****  *============================================================================*/
  95:hr_sensor_hw.c **** 
  96:hr_sensor_hw.c **** /* Blood pressure application hardware data instance */
  97:hr_sensor_hw.c **** APP_HW_DATA_T                   g_app_hw_data;
  98:hr_sensor_hw.c **** 
  99:hr_sensor_hw.c **** /*============================================================================*
 100:hr_sensor_hw.c ****  *  Private Function Implementations
 101:hr_sensor_hw.c ****  *============================================================================*/
 102:hr_sensor_hw.c **** 
 103:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 104:hr_sensor_hw.c **** 
 105:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 106:hr_sensor_hw.c ****  *  NAME
 107:hr_sensor_hw.c ****  *      appBuzzerTimerHandler
 108:hr_sensor_hw.c ****  *
 109:hr_sensor_hw.c ****  *  DESCRIPTION
 110:hr_sensor_hw.c ****  *      This function is used to stop the Buzzer at the expiry of 
 111:hr_sensor_hw.c ****  *      timer.
 112:hr_sensor_hw.c ****  *
 113:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 114:hr_sensor_hw.c ****  *      Nothing.
 115:hr_sensor_hw.c ****  *
 116:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 117:hr_sensor_hw.c **** static void appBuzzerTimerHandler(timer_id tid)
 118:hr_sensor_hw.c **** {
 119:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 120:hr_sensor_hw.c **** 
 121:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 122:hr_sensor_hw.c **** 
 123:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 124:hr_sensor_hw.c ****     {
 125:hr_sensor_hw.c ****         case buzzer_beep_short: /* FALLTHROUGH */
 126:hr_sensor_hw.c ****         case buzzer_beep_long:
 127:hr_sensor_hw.c ****         {
 128:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 129:hr_sensor_hw.c **** 
 130:hr_sensor_hw.c ****             /* Disable buzzer */
 131:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 132:hr_sensor_hw.c ****         }
 133:hr_sensor_hw.c ****         break;
 134:hr_sensor_hw.c ****         case buzzer_beep_twice:
 135:hr_sensor_hw.c ****         {
 136:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 137:hr_sensor_hw.c ****             {
 138:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 139:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 140:hr_sensor_hw.c **** 
 141:hr_sensor_hw.c ****                 /* Disable buzzer */
 142:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 143:hr_sensor_hw.c **** 
 144:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 145:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 146:hr_sensor_hw.c ****             }
 147:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 148:hr_sensor_hw.c ****             {
 149:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 150:hr_sensor_hw.c **** 
 151:hr_sensor_hw.c ****                 /* Enable buzzer */
 152:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 153:hr_sensor_hw.c **** 
 154:hr_sensor_hw.c ****                 /* Start another short beep */
 155:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 156:hr_sensor_hw.c ****             }
 157:hr_sensor_hw.c ****             else
 158:hr_sensor_hw.c ****             {
 159:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 160:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 161:hr_sensor_hw.c **** 
 162:hr_sensor_hw.c ****                 /* Disable buzzer */
 163:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 164:hr_sensor_hw.c **** 
 165:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 166:hr_sensor_hw.c ****             }
 167:hr_sensor_hw.c ****         }
 168:hr_sensor_hw.c ****         break;
 169:hr_sensor_hw.c ****         case buzzer_beep_thrice:
 170:hr_sensor_hw.c ****         {
 171:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 172:hr_sensor_hw.c ****                g_app_hw_data.beep_count == 2)
 173:hr_sensor_hw.c ****             {
 174:hr_sensor_hw.c ****                 /* First beep sounded. Start the silent gap*/
 175:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 176:hr_sensor_hw.c **** 
 177:hr_sensor_hw.c ****                 /* Disable buzzer */
 178:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 179:hr_sensor_hw.c **** 
 180:hr_sensor_hw.c ****                 /* Time gap between two beeps */
 181:hr_sensor_hw.c ****                 beep_timer = BEEP_GAP_TIMER_VALUE;
 182:hr_sensor_hw.c ****             }
 183:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 184:hr_sensor_hw.c ****                     g_app_hw_data.beep_count == 3)
 185:hr_sensor_hw.c ****             {
 186:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 187:hr_sensor_hw.c **** 
 188:hr_sensor_hw.c ****                 /* Enable buzzer */
 189:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 190:hr_sensor_hw.c **** 
 191:hr_sensor_hw.c ****                 beep_timer = SHORT_BEEP_TIMER_VALUE;
 192:hr_sensor_hw.c ****             }
 193:hr_sensor_hw.c ****             else
 194:hr_sensor_hw.c ****             {
 195:hr_sensor_hw.c ****                 /* Two beeps have been sounded. Stop buzzer now*/
 196:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 197:hr_sensor_hw.c **** 
 198:hr_sensor_hw.c ****                 /* Disable buzzer */
 199:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 200:hr_sensor_hw.c **** 
 201:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 202:hr_sensor_hw.c ****             }
 203:hr_sensor_hw.c ****         }
 204:hr_sensor_hw.c ****         break;
 205:hr_sensor_hw.c **** 
 206:hr_sensor_hw.c ****         default:
 207:hr_sensor_hw.c ****         {
 208:hr_sensor_hw.c ****             /* No such beep type */
 209:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 210:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 211:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 212:hr_sensor_hw.c ****              */
 213:hr_sensor_hw.c ****         }
 214:hr_sensor_hw.c ****         break;
 215:hr_sensor_hw.c ****     }
 216:hr_sensor_hw.c **** 
 217:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 218:hr_sensor_hw.c ****     {
 219:hr_sensor_hw.c ****         /* start the timer */
 220:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 221:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 222:hr_sensor_hw.c ****     }
 223:hr_sensor_hw.c **** }
 224:hr_sensor_hw.c **** 
 225:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER*/
 226:hr_sensor_hw.c **** 
 227:hr_sensor_hw.c **** /*============================================================================*
 228:hr_sensor_hw.c ****  *  Public Function Implementations
 229:hr_sensor_hw.c ****  *============================================================================*/
 230:hr_sensor_hw.c **** 
 231:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 232:hr_sensor_hw.c ****  *  NAME
 233:hr_sensor_hw.c ****  *      HrInitHardware 
 234:hr_sensor_hw.c ****  *
 235:hr_sensor_hw.c ****  *  DESCRIPTION
 236:hr_sensor_hw.c ****  *      This function is called to initialise heart rate hardware
 237:hr_sensor_hw.c ****  *
 238:hr_sensor_hw.c ****  *  RETURNS
 239:hr_sensor_hw.c ****  *      Nothing.
 240:hr_sensor_hw.c ****  *
 241:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 242:hr_sensor_hw.c **** 
 243:hr_sensor_hw.c **** extern void HrInitHardware(void)
 244:hr_sensor_hw.c **** {
 245:hr_sensor_hw.c ****     /* Setup PIOs
 246:hr_sensor_hw.c ****      * PIO3 - Buzzer
 247:hr_sensor_hw.c ****      * PIO4 - LED 1
 248:hr_sensor_hw.c ****      * PIO9 - On Board Input - HR input 
 249:hr_sensor_hw.c ****      *            when actual measurements 
 250:hr_sensor_hw.c ****      *            are enabled
 251:hr_sensor_hw.c ****      * PIO10 - LED 2 (Not Used)
 252:hr_sensor_hw.c ****      * PIO11 - Button
 253:hr_sensor_hw.c ****      */
 254:hr_sensor_hw.c **** #ifdef NO_ACTUAL_MEASUREMENT
 255:hr_sensor_hw.c **** 
 256:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 257:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 258:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 259:hr_sensor_hw.c **** 
 260:hr_sensor_hw.c ****     /* Setup button on PIO11 */
 261:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 262:hr_sensor_hw.c **** 
 263:hr_sensor_hw.c **** #else /* NO_ACTUAL_MEASUREMENT */
 264:hr_sensor_hw.c **** 
 265:hr_sensor_hw.c ****     PioSetModes(HR_INPUT_PIO_MASK, pio_mode_edge_capture); 
 266:hr_sensor_hw.c ****     PioSetDir(HR_INPUT_PIO, PIO_DIRECTION_INPUT);
 267:hr_sensor_hw.c ****     PioSetPullModes(HR_INPUT_PIO_MASK, pio_mode_strong_pull_up);
 268:hr_sensor_hw.c **** 
 269:hr_sensor_hw.c ****     /* Enable the falling edge capture on PIO9 for heart rate */
 270:hr_sensor_hw.c ****     PioEnableEdgeCapture(TRUE, FALSE);
 271:hr_sensor_hw.c **** 
 272:hr_sensor_hw.c ****     /* Setup events on both rising as well as falling edges */
 273:hr_sensor_hw.c ****     PioSetEventMask(HR_INPUT_PIO_MASK, pio_event_mode_both);
 274:hr_sensor_hw.c **** 
 275:hr_sensor_hw.c **** #endif /* ! NO_ACTUAL_MEASUREMENT */
 276:hr_sensor_hw.c **** 
 277:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 278:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 279:hr_sensor_hw.c **** 
 280:hr_sensor_hw.c ****     /* Configure the buzzer on PIO3 */
 281:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 282:hr_sensor_hw.c ****                  DULL_BUZZ_OFF_TIME, DULL_BUZZ_HOLD_TIME, BRIGHT_BUZZ_ON_TIME,
 283:hr_sensor_hw.c ****                  BRIGHT_BUZZ_OFF_TIME, BRIGHT_BUZZ_HOLD_TIME, BUZZ_RAMP_RATE);
 284:hr_sensor_hw.c **** 
 285:hr_sensor_hw.c **** 
 286:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 287:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 288:hr_sensor_hw.c **** 
 289:hr_sensor_hw.c **** 
 290:hr_sensor_hw.c ****     /* Save power by changing the I2C pull mode to pull down.*/
 291:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 292:hr_sensor_hw.c **** 
 293:hr_sensor_hw.c **** }
 294:hr_sensor_hw.c **** 
 295:hr_sensor_hw.c **** 
 296:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 297:hr_sensor_hw.c ****  *  NAME
 298:hr_sensor_hw.c ****  *      HrHwDataInit
 299:hr_sensor_hw.c ****  *
 300:hr_sensor_hw.c ****  *  DESCRIPTION
 301:hr_sensor_hw.c ****  *      This function initialises HR sensor hardware data structure
 302:hr_sensor_hw.c ****  *
 303:hr_sensor_hw.c ****  *  RETURNS
 304:hr_sensor_hw.c ****  *      Nothing.
 305:hr_sensor_hw.c ****  *
 306:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 307:hr_sensor_hw.c **** 
 308:hr_sensor_hw.c **** extern void HrHwDataInit(void)
 309:hr_sensor_hw.c **** {
  20                 	r	#0x0001
  21 0000 01 0B       	.LCFI0:
  22                 		.loc 1 313 0
 310:hr_sensor_hw.c **** 
 311:hr_sensor_hw.c ****     /* Delete button press timer */
 312:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.button_press_tid);
  23                 		X,#g_app_hw_data+3
  24 0001 00 00 00 18 		ld	AL,@(0,X)
  25 0003 00 16       		bsr	TimerDelete
  26 0004 00 00 00 00 		.loc 1 314 0
  26      00 9C 
 313:hr_sensor_hw.c ****     g_app_hw_data.button_press_tid = TIMER_INVALID;
  27                 	AL,#0x0000
  28 0007 00 14       		ld	X,#g_app_hw_data+3
  29 0008 00 00 00 18 		st	AL,@(0,X)
  30 000a 00 26       		.loc 1 316 0
 314:hr_sensor_hw.c **** 
 315:hr_sensor_hw.c **** }
  31                 	ve	#0x0001
  32 000b 01 0F       	.LFE4:
  33                 		.size	HrHwDataInit, .-HrHwDataInit
  34                 		.global	__size_of_HrHwDataInit
  35                 		.equ	__size_of_HrHwDataInit,. - HrHwDataInit
  36                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
  37                 		.global	HandlePIOChangedEvent
  38                 		.type	HandlePIOChangedEvent, @function
  39                 	HandlePIOChangedEvent:
  40                 	.LFB6:
  41                 		.loc 1 442 0
 316:hr_sensor_hw.c **** 
 317:hr_sensor_hw.c **** 
 318:hr_sensor_hw.c **** 
 319:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 320:hr_sensor_hw.c ****  *  NAME
 321:hr_sensor_hw.c ****  *      SoundBuzzer
 322:hr_sensor_hw.c ****  *
 323:hr_sensor_hw.c ****  *  DESCRIPTION
 324:hr_sensor_hw.c ****  *      This function is called to trigger beeps of different types 
 325:hr_sensor_hw.c ****  *      'buzzer_beep_type'.
 326:hr_sensor_hw.c ****  *
 327:hr_sensor_hw.c ****  *  RETURNS/MODIFIES
 328:hr_sensor_hw.c ****  *      Nothing.
 329:hr_sensor_hw.c ****  *
 330:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 331:hr_sensor_hw.c **** 
 332:hr_sensor_hw.c **** extern void SoundBuzzer(buzzer_beep_type beep_type)
 333:hr_sensor_hw.c **** {
 334:hr_sensor_hw.c **** #ifdef ENABLE_BUZZER
 335:hr_sensor_hw.c ****     uint32 beep_timer = SHORT_BEEP_TIMER_VALUE;
 336:hr_sensor_hw.c **** 
 337:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 338:hr_sensor_hw.c **** 
 339:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 340:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 341:hr_sensor_hw.c **** 
 342:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 343:hr_sensor_hw.c **** 
 344:hr_sensor_hw.c ****     /* Store the beep type in some global variable. It will used on timer 
 345:hr_sensor_hw.c ****      * expiry to check the type of beeps being sounded.
 346:hr_sensor_hw.c ****      */
 347:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 348:hr_sensor_hw.c **** 
 349:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 350:hr_sensor_hw.c ****     {
 351:hr_sensor_hw.c ****         case buzzer_beep_off:
 352:hr_sensor_hw.c ****         {
 353:hr_sensor_hw.c ****             /* Don't do anything */
 354:hr_sensor_hw.c ****         }
 355:hr_sensor_hw.c ****         break;
 356:hr_sensor_hw.c **** 
 357:hr_sensor_hw.c ****         case buzzer_beep_short: /* One short beep will be sounded */
 358:hr_sensor_hw.c ****             /* FALLTHROUGH */
 359:hr_sensor_hw.c ****         case buzzer_beep_twice: /* Two short beeps will be sounded */
 360:hr_sensor_hw.c ****             /* FALLTHROUGH */
 361:hr_sensor_hw.c ****         case buzzer_beep_thrice: /* Three short beeps will be sounded */
 362:hr_sensor_hw.c ****         {
 363:hr_sensor_hw.c ****             beep_timer = SHORT_BEEP_TIMER_VALUE;
 364:hr_sensor_hw.c ****         }
 365:hr_sensor_hw.c ****         break;
 366:hr_sensor_hw.c **** 
 367:hr_sensor_hw.c ****         case buzzer_beep_long:
 368:hr_sensor_hw.c ****         {
 369:hr_sensor_hw.c ****             /* One long beep will be sounded */
 370:hr_sensor_hw.c ****             beep_timer = LONG_BEEP_TIMER_VALUE;
 371:hr_sensor_hw.c ****         }
 372:hr_sensor_hw.c ****         break;
 373:hr_sensor_hw.c **** 
 374:hr_sensor_hw.c ****         default:
 375:hr_sensor_hw.c ****         {
 376:hr_sensor_hw.c ****             /* No such beep type defined */
 377:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 378:hr_sensor_hw.c ****             /* Though break statement will not be executed after panic but this
 379:hr_sensor_hw.c ****              * has been kept to avoid any confusion for default case.
 380:hr_sensor_hw.c ****              */
 381:hr_sensor_hw.c ****         }
 382:hr_sensor_hw.c ****         break;
 383:hr_sensor_hw.c ****     }
 384:hr_sensor_hw.c **** 
 385:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 386:hr_sensor_hw.c ****     {
 387:hr_sensor_hw.c ****         /* Initialize beep count to zero */
 388:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 389:hr_sensor_hw.c **** 
 390:hr_sensor_hw.c ****         /* Enable buzzer */
 391:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 392:hr_sensor_hw.c **** 
 393:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 394:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 395:hr_sensor_hw.c ****                                                appBuzzerTimerHandler);
 396:hr_sensor_hw.c ****     }
 397:hr_sensor_hw.c **** #endif /* ENABLE_BUZZER */
 398:hr_sensor_hw.c **** }
 399:hr_sensor_hw.c **** 
 400:hr_sensor_hw.c **** 
 401:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 402:hr_sensor_hw.c **** 
 403:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 404:hr_sensor_hw.c ****  *  NAME
 405:hr_sensor_hw.c ****  *      GetRRValue
 406:hr_sensor_hw.c ****  *
 407:hr_sensor_hw.c ****  *  DESCRIPTION
 408:hr_sensor_hw.c ****  *      Get RR value by reading the HR_INPUT_PIO
 409:hr_sensor_hw.c ****  *
 410:hr_sensor_hw.c ****  *  RETURNS
 411:hr_sensor_hw.c ****  *      UINT32: RR value 
 412:hr_sensor_hw.c ****  *
 413:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 414:hr_sensor_hw.c **** 
 415:hr_sensor_hw.c **** extern uint32 GetRRValue(void)
 416:hr_sensor_hw.c **** {
 417:hr_sensor_hw.c **** 
 418:hr_sensor_hw.c ****     /* handle heartrate events ie changes to HR_INPUT_PIO */
 419:hr_sensor_hw.c ****     /* value is in 30.517us (32768KHz) intervals */
 420:hr_sensor_hw.c **** 
 421:hr_sensor_hw.c ****     return (PioReadEdgeCapture());
 422:hr_sensor_hw.c **** 
 423:hr_sensor_hw.c **** }
 424:hr_sensor_hw.c **** 
 425:hr_sensor_hw.c **** #endif /* !NO_ACTUAL_MEASUREMENT */
 426:hr_sensor_hw.c **** 
 427:hr_sensor_hw.c **** 
 428:hr_sensor_hw.c **** /*----------------------------------------------------------------------------*
 429:hr_sensor_hw.c ****  *  NAME
 430:hr_sensor_hw.c ****  *      HandlePIOChangedEvent
 431:hr_sensor_hw.c ****  *
 432:hr_sensor_hw.c ****  *  DESCRIPTION
 433:hr_sensor_hw.c ****  *      This function handles PIO Changed event
 434:hr_sensor_hw.c ****  *
 435:hr_sensor_hw.c ****  *  RETURNS
 436:hr_sensor_hw.c ****  *      Nothing.
 437:hr_sensor_hw.c ****  *
 438:hr_sensor_hw.c ****  *---------------------------------------------------------------------------*/
 439:hr_sensor_hw.c **** 
 440:hr_sensor_hw.c **** extern void HandlePIOChangedEvent(uint32 pio_changed)
 441:hr_sensor_hw.c **** {
  42                 	er	#0x0004
  43                 	.LCFI1:
  44 0000 04 0B       		st	AL,@(0x0002,Y)
  45                 	.LVL1:
  46 0001 02 27       		.loc 1 444 0
  47                 		bsr	PioGets
 442:hr_sensor_hw.c ****     /* PIO changed */
 443:hr_sensor_hw.c ****     uint32 pios = PioGets();
  48                 	
  49 0002 00 00 00 00 		ld	AH,@$XAP_AL
  49      00 9C 
  50                 	.LVL3:
  51 0005 00 00 00 11 		.loc 1 446 0
  52                 		ld	AL,@(0x0002,Y)
 444:hr_sensor_hw.c **** 
 445:hr_sensor_hw.c ****     if(pio_changed & BUTTON_PIO_MASK)
  53                 		AL,#0x0800
  54 0007 02 17       		beq	.L6
  55 0008 08 00 00 C4 		.loc 1 448 0
  56 000a 00 00 00 00 		ld	AL,@$XAP_AH
  56      00 F4 
 446:hr_sensor_hw.c ****     {
 447:hr_sensor_hw.c ****         if(!(pios & BUTTON_PIO_MASK))
  57                 		AL,#0x0800
  58 000d 00 00 00 15 		bne	.L5
  59 000f 08 00 00 C4 		.loc 1 457 0
  60 0011 00 00 00 00 		ld	AL,@g_app_hw_data+0x0003
  60      00 F0 
 448:hr_sensor_hw.c ****         {
 449:hr_sensor_hw.c ****             /* This event comes when a button is pressed */
 450:hr_sensor_hw.c **** 
 451:hr_sensor_hw.c ****             /* Start a timer for LONG_BUTTON_PRESS_TIMER seconds. If timer expi-
 452:hr_sensor_hw.c ****              * res before we receive a button release event then it was a long -
 453:hr_sensor_hw.c ****              * press and if we receive a button release pio changed event, it -
 454:hr_sensor_hw.c ****              * means it was a short press.
 455:hr_sensor_hw.c ****              */
 456:hr_sensor_hw.c ****             TimerDelete(g_app_hw_data.button_press_tid);
  61                 		TimerDelete
  62 0014 00 00 00 15 	.LVL4:
  63 0016 00 00 00 00 		.loc 1 459 0
  63      00 9C 
  64                 		ld	AL,#0x0001
 457:hr_sensor_hw.c **** 
 458:hr_sensor_hw.c ****             g_app_hw_data.button_press_tid = TimerCreate(
  65                 	AL,@(0,Y)
  66 0019 01 14       		ld	AL,#HandleExtraLongButtonPress
  67 001a 00 27       		st	AL,@(0x0001,Y)
  68 001b 00 00 00 14 		ld	AH,#0x003d
  69 001d 01 27       		ld	AL,#0x0900
  70 001e 3D 10       		bsr	TimerCreate
  71 001f 09 00 00 14 		st	AL,@g_app_hw_data+0x0003
  72 0021 00 00 00 00 		bra	.L6
  72      00 9C 
  73 0024 00 00 00 25 	.LVL5:
  74 0026 00 00 00 00 	.L5:
  74      00 E0 
  75                 		.loc 1 467 0
  76                 		ld	AL,@g_app_hw_data+0x0003
 459:hr_sensor_hw.c ****                                            EXTRA_LONG_BUTTON_PRESS_TIMER,
 460:hr_sensor_hw.c ****                                            TRUE,
 461:hr_sensor_hw.c ****                                            HandleExtraLongButtonPress);
 462:hr_sensor_hw.c ****         }
 463:hr_sensor_hw.c ****         else
 464:hr_sensor_hw.c ****         {
 465:hr_sensor_hw.c ****             /* This event comes when a button is released */
 466:hr_sensor_hw.c ****             if(g_app_hw_data.button_press_tid != TIMER_INVALID)
  77                 	oc 1 472 0
  78 0029 00 00 00 15 		bsr	TimerDelete
  79 002b 00 00 00 00 	.LVL6:
  79      00 F4 
 467:hr_sensor_hw.c ****             {
 468:hr_sensor_hw.c ****                 /* Timer was already running. This means it was a short button 
 469:hr_sensor_hw.c ****                  * press.
 470:hr_sensor_hw.c ****                  */
 471:hr_sensor_hw.c ****                 TimerDelete(g_app_hw_data.button_press_tid);
  80                 	oc 1 473 0
  81 002e 00 00 00 00 		ld	AL,#0x0000
  81      00 9C 
  82                 		st	AL,@g_app_hw_data+0x0003
 472:hr_sensor_hw.c ****                 g_app_hw_data.button_press_tid = TIMER_INVALID;
  83                 	oc 1 475 0
  84 0031 00 14       		bsr	HandleShortButtonPress
  85 0032 00 00 00 25 	.LVL7:
 473:hr_sensor_hw.c **** 
 474:hr_sensor_hw.c ****                 HandleShortButtonPress();
  86                 	:
  87 0034 00 00 00 00 		.loc 1 492 0
  87      00 9C 
  88                 		leave	#0x0004
  89                 	.LFE6:
 475:hr_sensor_hw.c ****             }
 476:hr_sensor_hw.c ****         }
 477:hr_sensor_hw.c ****     }
 478:hr_sensor_hw.c **** #ifndef NO_ACTUAL_MEASUREMENT
 479:hr_sensor_hw.c ****     else if(pio_changed & HR_INPUT_PIO_MASK)
 480:hr_sensor_hw.c ****     {
 481:hr_sensor_hw.c ****         /* Process the event on the falling edge and ignore the rising edge 
 482:hr_sensor_hw.c ****          * events.
 483:hr_sensor_hw.c ****          */
 484:hr_sensor_hw.c ****         if(!(pios & HR_INPUT_PIO_MASK))
 485:hr_sensor_hw.c ****         {
 486:hr_sensor_hw.c ****             HandleHRInputEvent();
 487:hr_sensor_hw.c ****         }
 488:hr_sensor_hw.c ****     }
 489:hr_sensor_hw.c **** #endif
 490:hr_sensor_hw.c **** 
 491:hr_sensor_hw.c **** }
  90                 	ze	HandlePIOChangedEvent, .-HandlePIOChangedEvent
  91 0037 04 0F       		.global	__size_of_HandlePIOChangedEvent
  92                 		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
  93                 		.section	.text.SoundBuzzer,"ax",@progbits
  94                 		.global	SoundBuzzer
  95                 		.type	SoundBuzzer, @function
  96                 	SoundBuzzer:
  97                 	.LFB5:
  98                 		.loc 1 334 0
  99                 	.LVL8:
 100                 		enter	#0x0006
 334:hr_sensor_hw.c **** {
 101                 		AL,@(0x0002,Y)
 102                 		.loc 1 338 0
 103 0000 06 0B       		ld	AL,#0x0000
 104                 	.LVL9:
 105 0001 02 27       		ld	AH,#0x0000
 338:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 106                 	PioEnablePWM
 107 0002 00 14       		.loc 1 340 0
 108                 		ld	AL,@g_app_hw_data
 109 0003 00 10       		bsr	TimerDelete
 110 0004 00 00 00 00 		.loc 1 341 0
 110      00 9C 
 340:hr_sensor_hw.c ****     TimerDelete(g_app_hw_data.buzzer_tid);
 111                 	L,#0x0000
 112 0007 00 00 00 15 		st	AL,@g_app_hw_data
 113 0009 00 00 00 00 		.loc 1 343 0
 113      00 9C 
 341:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 114                 		AL,@g_app_hw_data+0x0002
 115 000c 00 14       		.loc 1 348 0
 116 000d 00 00 00 25 		ld	AL,@(0x0002,Y)
 343:hr_sensor_hw.c ****     g_app_hw_data.beep_count = 0;
 117                 		AL,@g_app_hw_data+0x0001
 118 000f 00 00 00 25 		.loc 1 350 0
 348:hr_sensor_hw.c ****     g_app_hw_data.beep_type = beep_type;
 119                 	mp	AL,#0x0005
 120 0011 02 17       		bcc	.L8
 121 0012 00 00 00 25 		ld	AL,#0x0001
 350:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 122                 	l	@(0x0002,Y)
 123 0014 05 84       		ld	AH,@$XAP_AL
 124 0015 00 00 00 00 		and	AL,#0x001b
 124      00 F8 
 125 0018 01 14       		bne	.L15
 126 0019 02 A3       		ld	AL,@$XAP_AH
 127 001a 00 00 00 11 		and	AL,#0x0004
 128 001c 1B C4       		beq	.L8
 129 001d 00 00 00 00 		ld	AL,#0x0007
 129      00 F0 
 130 0020 00 00 00 15 		st	AL,@(0x0003,Y)
 131 0022 04 C4       		ld	AL,#0xa120
 132 0023 00 00 00 00 		bra	.L14
 132      00 F4 
 133 0026 07 14       	.L8:
 134 0027 03 27       		.loc 1 378 0
 135 0028 A1 00 20 14 		ld	AL,#0x000b
 136 002a 00 00 00 00 		bsr	ReportPanic
 136      00 E0 
 137                 	.L15:
 378:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 138                 	st	AL,@(0x0003,Y)
 139 002d 0B 14       		ld	AL,#0x86a0
 140 002e 00 00 00 00 	.L14:
 140      00 9C 
 141                 		st	AL,@(0x0004,Y)
 142 0031 01 14       		.loc 1 386 0
 143 0032 03 27       		tst	@g_app_hw_data+0x0001
 144 0033 87 00 A0 14 		beq	.L13
 145                 		.loc 1 389 0
 146 0035 04 27       		ld	AL,#0x0000
 386:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 147                 	_app_hw_data+0x0002
 148 0036 00 00 00 99 		.loc 1 392 0
 149 0038 00 00 00 00 		ld	AH,#0x0001
 149      00 F4 
 389:hr_sensor_hw.c ****         g_app_hw_data.beep_count = 0;
 150                 	r	PioEnablePWM
 151 003b 00 14       		.loc 1 394 0
 152 003c 00 00 00 25 		ld	AL,@g_app_hw_data
 392:hr_sensor_hw.c ****         PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 153                 	r	TimerDelete
 154 003e 01 10       		.loc 1 395 0
 155 003f 00 00 00 00 		ld	AL,#0x0001
 155      00 9C 
 394:hr_sensor_hw.c ****         TimerDelete(g_app_hw_data.buzzer_tid);
 156                 		AL,@(0,Y)
 157 0042 00 00 00 15 		ld	AL,#appBuzzerTimerHandler
 158 0044 00 00 00 00 		st	AL,@(0x0001,Y)
 158      00 9C 
 395:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 159                 		AH,@(0x0003,Y)
 160 0047 01 14       		ld	AL,@(0x0004,Y)
 161 0048 00 27       		bsr	TimerCreate
 162 0049 00 00 00 14 		st	AL,@g_app_hw_data
 163 004b 01 27       	.L13:
 164 004c 03 13       		.loc 1 399 0
 165 004d 04 17       		leave	#0x0006
 166 004e 00 00 00 00 	.LFE5:
 166      00 9C 
 167 0051 00 00 00 25 		.size	SoundBuzzer, .-SoundBuzzer
 168                 		.global	__size_of_SoundBuzzer
 399:hr_sensor_hw.c **** }
 169                 	ze_of_SoundBuzzer,. - SoundBuzzer
 170 0053 06 0F       		.section	.text.appBuzzerTimerHandler,"ax",@progbits
 171                 		.type	appBuzzerTimerHandler, @function
 172                 	appBuzzerTimerHandler:
 173                 	.LFB2:
 174                 		.loc 1 119 0
 175                 	.LVL10:
 176                 		enter	#0x0003
 177                 	.LCFI3:
 178                 		.loc 1 122 0
 119:hr_sensor_hw.c **** {
 179                 	0000
 180                 	.LVL11:
 181 0000 03 0B       		st	AL,@g_app_hw_data
 182                 		.loc 1 124 0
 122:hr_sensor_hw.c ****     g_app_hw_data.buzzer_tid = TIMER_INVALID;
 183                 	AL,@g_app_hw_data+0x0001
 184 0001 00 14       		cmp	AL,#0x0003
 185                 		beq	.L19
 186 0002 00 00 00 25 		cmp	AL,#0x0004
 124:hr_sensor_hw.c ****     switch(g_app_hw_data.beep_type)
 187                 		.L21
 188 0004 00 00 00 15 		cmp	AL,#0x0001
 189 0006 03 84       		bcs	.L17
 190 0007 00 00 00 00 		bra	.L36
 190      00 F4 
 191 000a 04 84       	.L21:
 192 000b 00 00 00 00 		cmp	AL,#0x0004
 192      00 F8 
 193 000e 01 84       		bne	.L17
 194 000f 00 00 00 00 		bra	.L37
 194      00 FC 
 195 0012 00 00 00 00 	.L36:
 195      00 E0 
 196                 		.loc 1 129 0
 197 0015 04 84       		ld	X,#0x0000
 198 0016 00 00 00 00 		st	X,@g_app_hw_data+0x0001
 198      00 F0 
 199 0019 00 00 00 00 		.loc 1 132 0
 199      00 E0 
 200                 		ld	AL,#0x0000
 129:hr_sensor_hw.c ****             g_app_hw_data.beep_type = buzzer_beep_off;
 201                 	
 202 001c 00 18       		bra	.L34
 203 001d 00 00 00 29 	.L19:
 132:hr_sensor_hw.c ****             PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 204                 	loc 1 137 0
 205 001f 00 14       		ld	AL,@g_app_hw_data+0x0002
 206 0020 00 10       		bne	.L23
 207 0021 00 00 00 00 		.loc 1 140 0
 207      00 E0 
 208                 		ld	AL,#0x0001
 137:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0)
 209                 	.L33
 210 0024 00 00 00 15 	.L23:
 211 0026 00 00 00 00 		.loc 1 148 0
 211      00 F0 
 140:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 1;
 212                 	p	AL,#0x0001
 213 0029 01 14       		bne	.L28
 214 002a 00 00 00 00 		.loc 1 150 0
 214      00 E0 
 215                 		ld	X,#0x0002
 148:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1)
 216                 	X,@g_app_hw_data+0x0002
 217 002d 01 84       		bra	.L35
 218 002e 00 00 00 00 	.L37:
 218      00 F0 
 150:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 2;
 219                 	oc 1 172 0
 220 0031 02 18       		ld	AL,@g_app_hw_data+0x0002
 221 0032 00 00 00 29 		beq	.L25
 222 0034 00 00 00 00 		cmp	AL,#0x0002
 222      00 E0 
 223                 		bne	.L26
 172:hr_sensor_hw.c ****             if(g_app_hw_data.beep_count == 0 ||
 224                 	
 225 0037 00 00 00 15 		.loc 1 176 0
 226 0039 00 00 00 00 		add	AL,#0x0001
 226      00 F4 
 227 003c 02 84       	.L33:
 228 003d 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 228      00 F0 
 229                 		.loc 1 179 0
 176:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 230                 	L,#0x0000
 231 0040 01 34       		ld	AH,#0x0000
 232                 		bsr	PioEnablePWM
 233 0041 00 00 00 25 		ld	AH,#0x0000
 179:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 234                 	12:
 235 0043 00 14       		ld	AL,#0x61a8
 236 0044 00 10       	.LVL13:
 237 0045 00 00 00 00 		bra	.L22
 237      00 9C 
 238 0048 00 10       	.LVL14:
 239                 	.L26:
 240 0049 62 00 A8 14 		.loc 1 184 0
 241                 		cmp	AL,#0x0001
 242 004b 00 00 00 00 		beq	.L27
 242      00 E0 
 243                 		cmp	AL,#0x0003
 244                 		bne	.L28
 184:hr_sensor_hw.c ****             else if(g_app_hw_data.beep_count == 1 ||
 245                 	 1 187 0
 246 004e 01 84       		add	AL,#0x0001
 247 004f 00 00 00 00 		st	AL,@g_app_hw_data+0x0002
 247      00 F4 
 248 0052 03 84       	.L35:
 249 0053 00 00 00 00 		.loc 1 190 0
 249      00 F0 
 250                 		ld	AL,#0x0000
 187:hr_sensor_hw.c ****                 ++ g_app_hw_data.beep_count;
 251                 	,#0x0001
 252 0056 01 34       	.L34:
 253 0057 00 00 00 25 		bsr	PioEnablePWM
 254                 		bra	.L32
 190:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, TRUE);
 255                 	:
 256 0059 00 14       		.loc 1 197 0
 257 005a 01 10       		ld	AL,#0x0000
 258                 		st	AL,@g_app_hw_data+0x0002
 259 005b 00 00 00 00 		.loc 1 200 0
 259      00 9C 
 260 005e 00 00 00 00 		ld	AH,#0x0000
 260      00 E0 
 261                 		bsr	PioEnablePWM
 197:hr_sensor_hw.c ****                 g_app_hw_data.beep_count = 0;
 262                 	 202 0
 263 0061 00 14       		ld	X,#0x0000
 264 0062 00 00 00 25 		st	X,@g_app_hw_data+0x0001
 200:hr_sensor_hw.c ****                 PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 265                 	a	.L32
 266 0064 00 10       	.L17:
 267 0065 00 00 00 00 		.loc 1 210 0
 267      00 9C 
 202:hr_sensor_hw.c ****                 g_app_hw_data.beep_type = buzzer_beep_off;
 268                 		AL,#0x000b
 269 0068 00 18       		bsr	ReportPanic
 270 0069 00 00 00 29 	.L32:
 271 006b 00 00 00 00 		ld	AH,#0x0001
 271      00 E0 
 272                 	.LVL15:
 210:hr_sensor_hw.c ****             ReportPanic(app_panic_unexpected_beep_type);
 273                 	L,#0x86a0
 274 006e 0B 14       	.LVL16:
 275 006f 00 00 00 00 	.L22:
 275      00 9C 
 276                 		.loc 1 218 0
 277 0072 01 10       		tst	@g_app_hw_data+0x0001
 278                 		beq	.L30
 279 0073 87 00 A0 14 		.loc 1 221 0
 280                 		ld	X,#0x0001
 281                 		st	X,@(0,Y)
 218:hr_sensor_hw.c ****     if(g_app_hw_data.beep_type != buzzer_beep_off)
 282                 	pBuzzerTimerHandler
 283 0075 00 00 00 99 		st	X,@(0x0001,Y)
 284 0077 00 00 00 00 		bsr	TimerCreate
 284      00 F4 
 221:hr_sensor_hw.c ****         g_app_hw_data.buzzer_tid = TimerCreate(beep_timer, TRUE, 
 285                 	L17:
 286 007a 01 18       		st	AL,@g_app_hw_data
 287 007b 00 2B       	.LVL18:
 288 007c 00 00 00 18 	.L30:
 289 007e 01 2B       		.loc 1 224 0
 290 007f 00 00 00 00 		leave	#0x0003
 290      00 9C 
 291                 	.LFE2:
 292 0082 00 00 00 25 		.size	appBuzzerTimerHandler, .-appBuzzerTimerHandler
 293                 		.equ	__size_of_appBuzzerTimerHandler,. - appBuzzerTimerHandler
 294                 		.section	.text.HrInitHardware,"ax",@progbits
 224:hr_sensor_hw.c **** }
 295                 	rInitHardware
 296 0084 03 0F       		.type	HrInitHardware, @function
 297                 	HrInitHardware:
 298                 	.LFB3:
 299                 		.loc 1 245 0
 300                 		enter	#0x0008
 301                 	.LCFI4:
 302                 		.loc 1 257 0
 303                 		ld	AL,#0x0000
 304                 		st	AL,@(0,Y)
 245:hr_sensor_hw.c **** {
 305                 	0000
 306 0000 08 0B       		ld	AL,#0x0800
 307                 		bsr	PioSetModes
 257:hr_sensor_hw.c ****     PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
 308                 	oc 1 258 0
 309 0001 00 14       		ld	AL,#0x000b
 310 0002 00 27       		ld	AH,#0x0000
 311 0003 00 10       		bsr	PioSetDir
 312 0004 08 00 00 14 		.loc 1 259 0
 313 0006 00 00 00 00 		ld	AL,#0x0007
 313      00 9C 
 258:hr_sensor_hw.c ****     PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
 314                 	,@(0,Y)
 315 0009 0B 14       		ld	AH,#0x0000
 316 000a 00 10       		ld	AL,#0x0800
 317 000b 00 00 00 00 		bsr	PioSetPullModes
 317      00 9C 
 259:hr_sensor_hw.c ****     PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
 318                 	c 1 262 0
 319 000e 07 14       		ld	AL,#0x0003
 320 000f 00 27       		st	AL,@(0,Y)
 321 0010 00 10       		ld	AH,#0x0000
 322 0011 08 00 00 14 		ld	AL,#0x0800
 323 0013 00 00 00 00 		bsr	PioSetEventMask
 323      00 9C 
 262:hr_sensor_hw.c ****     PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
 324                 	1 279 0
 325 0016 03 14       		ld	AL,#0x0004
 326 0017 00 27       		st	AL,@(0,Y)
 327 0018 00 10       		ld	AH,#0x0000
 328 0019 08 00 00 14 		ld	AL,#0x0008
 329 001b 00 00 00 00 		bsr	PioSetModes
 329      00 9C 
 279:hr_sensor_hw.c ****     PioSetModes(BUZZER_PIO_MASK, pio_mode_pwm0);
 330                 	1 282 0
 331 001e 04 14       		ld	AL,#0x0002
 332 001f 00 27       		st	AL,@(0,Y)
 333 0020 00 10       		ld	AL,#0x000f
 334 0021 08 14       		st	AL,@(0x0001,Y)
 335 0022 00 00 00 00 		ld	AL,#0x0000
 335      00 9C 
 282:hr_sensor_hw.c ****     PioConfigPWM(BUZZER_PWM_INDEX_0, pio_pwm_mode_push_pull, DULL_BUZZ_ON_TIME,
 336                 	,@(0x0002,Y)
 337 0025 02 14       		ld	AL,#0x0002
 338 0026 00 27       		st	AL,@(0x0003,Y)
 339 0027 0F 14       		ld	AL,#0x000f
 340 0028 01 27       		st	AL,@(0x0004,Y)
 341 0029 00 14       		ld	AL,#0x0000
 342 002a 02 27       		st	AL,@(0x0005,Y)
 343 002b 02 14       		ld	AL,#0x00ff
 344 002c 03 27       		st	AL,@(0x0006,Y)
 345 002d 0F 14       		ld	AL,#0x0000
 346 002e 04 27       		ld	AH,#0x0000
 347 002f 00 14       		bsr	PioConfigPWM
 348 0030 05 27       		.loc 1 287 0
 349 0031 01 00 FF 14 		ld	AL,#0x0000
 350 0033 06 27       		ld	AH,#0x0000
 351 0034 00 14       		bsr	PioEnablePWM
 352 0035 00 10       		.loc 1 292 0
 353 0036 00 00 00 00 		ld	AL,#0x0005
 353      00 9C 
 287:hr_sensor_hw.c ****     PioEnablePWM(BUZZER_PWM_INDEX_0, FALSE);
 354                 	Mode
 355 0039 00 14       		.loc 1 294 0
 356 003a 00 10       		leave	#0x0008
 357 003b 00 00 00 00 	.LFE3:
 357      00 9C 
 292:hr_sensor_hw.c ****     PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
 358                 	ze	HrInitHardware, .-HrInitHardware
 359 003e 05 14       		.global	__size_of_HrInitHardware
 360 003f 00 00 00 00 		.equ	__size_of_HrInitHardware,. - HrInitHardware
 360      00 9C 
 294:hr_sensor_hw.c **** }
 361                 	omm g_app_hw_data, 4, 1
 362 0042 08 0F       	
 363                 		.section	.debug_frame,"",@progbits
 364                 	.Lframe0:
 365                 		.4byte	.LECIE0-.LSCIE0
 366                 	.LSCIE0:
 367                 		.4byte	0xffffffff
 368                 		.1byte	0x1
 369                 		.ascii "\000"
 370                 		.1byte	0x1
 371 0000 00 00 00 00 		.1byte	0x7f
 372                 		.1byte	0x3
 373 0002 FF FF FF FF 		.1byte	0xc
 374 0004 01          		.1byte	0x5
 375 0004 00          		.1byte	0x0
 376 0005 01          		.p2align	2
 377 0005 7F          	.LECIE0:
 378 0006 03          	.LSFDE0:
 379 0006 0C          		.4byte	.LEFDE0-.LASFDE0
 380 0007 05          	.LASFDE0:
 381 0007 00          		.4byte	.Lframe0
 382                 		.4byte	.LFB4
 383                 		.4byte	.LFE4-.LFB4
 384                 		.1byte	0x4
 385 0008 00 00 00 00 		.4byte	.LCFI0-.LFB4
 386                 		.1byte	0xe
 387 000a 00 00 00 00 		.1byte	0x1
 388 000c 00 00 00 00 		.1byte	0x83
 389 000e 00 00 00 00 		.1byte	0x1
 390 0010 41          		.p2align	2
 391                 	.LEFDE0:
 392 0010 0E          	.LSFDE2:
 393 0011 01          		.4byte	.LEFDE2-.LASFDE2
 394 0011 83          	.LASFDE2:
 395 0012 01          		.4byte	.Lframe0
 396 0012 00 00 00    		.4byte	.LFB6
 397                 		.4byte	.LFE6-.LFB6
 398                 		.1byte	0x4
 399 0014 00 00 00 00 		.4byte	.LCFI1-.LFB6
 400                 		.1byte	0xe
 401 0016 00 00 00 00 		.1byte	0x4
 402 0018 00 00 00 00 		.1byte	0x83
 403 001a 00 00 00 00 		.1byte	0x1
 404 001c 41          		.p2align	2
 405                 	.LEFDE2:
 406 001c 0E          	.LSFDE4:
 407 001d 04          		.4byte	.LEFDE4-.LASFDE4
 408 001d 83          	.LASFDE4:
 409 001e 01          		.4byte	.Lframe0
 410 001e 00 00 00    		.4byte	.LFB5
 411                 		.4byte	.LFE5-.LFB5
 412                 		.1byte	0x4
 413 0020 00 00 00 00 		.4byte	.LCFI2-.LFB5
 414                 		.1byte	0xe
 415 0022 00 00 00 00 		.1byte	0x6
 416 0024 00 00 00 00 		.1byte	0x83
 417 0026 00 00 00 00 		.1byte	0x1
 418 0028 41          		.p2align	2
 419                 	.LEFDE4:
 420 0028 0E          	.LSFDE6:
 421 0029 06          		.4byte	.LEFDE6-.LASFDE6
 422 0029 83          	.LASFDE6:
 423 002a 01          		.4byte	.Lframe0
 424 002a 00 00 00    		.4byte	.LFB2
 425                 		.4byte	.LFE2-.LFB2
 426                 		.1byte	0x4
 427 002c 00 00 00 00 		.4byte	.LCFI3-.LFB2
 428                 		.1byte	0xe
 429 002e 00 00 00 00 		.1byte	0x3
 430 0030 00 00 00 00 		.1byte	0x83
 431 0032 00 00 00 00 		.1byte	0x1
 432 0034 41          		.p2align	2
 433                 	.LEFDE6:
 434 0034 0E          	.LSFDE8:
 435 0035 03          		.4byte	.LEFDE8-.LASFDE8
 436 0035 83          	.LASFDE8:
 437 0036 01          		.4byte	.Lframe0
 438 0036 00 00 00    		.4byte	.LFB3
 439                 		.4byte	.LFE3-.LFB3
 440                 		.1byte	0x4
 441 0038 00 00 00 00 		.4byte	.LCFI4-.LFB3
 442                 		.1byte	0xe
 443 003a 00 00 00 00 		.1byte	0x8
 444 003c 00 00 00 00 		.1byte	0x83
 445 003e 00 00 00 00 		.1byte	0x1
 446 0040 41          		.p2align	2
 447                 	.LEFDE8:
 448 0040 0E          		.text
 449 0041 08          	.Letext0:
 450 0041 83          		.section	.debug_loc,"",@progbits
 451 0042 01          	.Ldebug_loc0:
 452 0042 00 00 00    	.LLST0:
 453                 		.4byte	.LFB4
 454                 		.4byte	.LCFI0
 455                 		.2byte	0x1
 456                 		.1byte	0x55
 457                 		.4byte	.LCFI0
 458                 		.4byte	.LFE4
 459 0000 00 00 00 00 		.2byte	0x2
 460 0002 00 00 00 00 		.1byte	0x75
 461 0004 00 01       		.1byte	0x1
 462 0005 55          		.4byte	0x0
 463 0005 00 00 00 00 		.4byte	0x0
 464 0007 00 00 00 00 	.LLST1:
 465 0009 00 02       		.4byte	.LFB6
 466 000a 75          		.4byte	.LCFI1
 467 000b 01          		.2byte	0x1
 468 000b 00 00 00 00 		.1byte	0x55
 469 000d 00 00 00 00 		.4byte	.LCFI1
 470                 		.4byte	.LFE6
 471 000f 00 00 00 00 		.2byte	0x2
 472 0011 00 00 00 00 		.1byte	0x75
 473 0013 00 01       		.1byte	0x4
 474 0014 55          		.4byte	0x0
 475 0015 00 00 00 00 		.4byte	0x0
 476 0017 00 00 00 00 	.LLST2:
 477 0019 00 02       		.4byte	.LVL0
 478 001a 75          		.4byte	.LVL2
 479 001a 04          		.2byte	0x6
 480 001b 00 00 00 00 		.1byte	0x50
 481 001d 00 00 00 00 		.1byte	0x93
 482                 		.1byte	0x2
 483 001f 00 00 00 00 		.1byte	0x51
 484 0021 00 00 00 00 		.1byte	0x93
 485 0023 00 06       		.1byte	0x2
 486 0024 50          		.4byte	0x0
 487 0024 93          		.4byte	0x0
 488 0025 02          	.LLST3:
 489 0025 51          		.4byte	.LFB5
 490 0026 93          		.4byte	.LCFI2
 491 0026 02          		.2byte	0x1
 492 0027 00 00 00 00 		.1byte	0x55
 493 0029 00 00 00 00 		.4byte	.LCFI2
 494                 		.4byte	.LFE5
 495 002b 00 00 00 00 		.2byte	0x2
 496 002d 00 00 00 00 		.1byte	0x75
 497 002f 00 01       		.1byte	0x6
 498 0030 55          		.4byte	0x0
 499 0030 00 00 00 00 		.4byte	0x0
 500 0032 00 00 00 00 	.LLST4:
 501 0034 00 02       		.4byte	.LVL8
 502 0035 75          		.4byte	.LVL9
 503 0036 06          		.2byte	0x1
 504 0036 00 00 00 00 		.1byte	0x51
 505 0038 00 00 00 00 		.4byte	.LVL9
 506                 		.4byte	.LFE5
 507 003a 00 00 00 00 		.2byte	0x2
 508 003c 00 00 00 00 		.1byte	0x76
 509 003e 00 01       		.1byte	0x2
 510 003f 51          		.4byte	0x0
 511 0040 00 00 00 00 		.4byte	0x0
 512 0042 00 00 00 00 	.LLST5:
 513 0044 00 02       		.4byte	.LFB2
 514 0045 76          		.4byte	.LCFI3
 515 0045 02          		.2byte	0x1
 516 0046 00 00 00 00 		.1byte	0x55
 517 0048 00 00 00 00 		.4byte	.LCFI3
 518                 		.4byte	.LFE2
 519 004a 00 00 00 00 		.2byte	0x2
 520 004c 00 00 00 00 		.1byte	0x75
 521 004e 00 01       		.1byte	0x3
 522 004f 55          		.4byte	0x0
 523 004f 00 00 00 00 		.4byte	0x0
 524 0051 00 00 00 00 	.LLST6:
 525 0053 00 02       		.4byte	.LVL10
 526 0054 75          		.4byte	.LVL11
 527 0055 03          		.2byte	0x1
 528 0055 00 00 00 00 		.1byte	0x51
 529 0057 00 00 00 00 		.4byte	0x0
 530                 		.4byte	0x0
 531 0059 00 00 00 00 	.LLST7:
 532 005b 00 00 00 00 		.4byte	.LVL13
 533 005d 00 01       		.4byte	.LVL14
 534 005e 51          		.2byte	0x6
 535 005f 00 00 00 00 		.1byte	0x50
 536 0061 00 00 00 00 		.1byte	0x93
 537                 		.1byte	0x2
 538 0063 00 00 00 00 		.1byte	0x51
 539 0065 00 00 00 00 		.1byte	0x93
 540 0067 00 06       		.1byte	0x2
 541 0068 50          		.4byte	.LVL16
 542 0068 93          		.4byte	.LVL17
 543 0069 02          		.2byte	0x6
 544 0069 51          		.1byte	0x50
 545 006a 93          		.1byte	0x93
 546 006a 02          		.1byte	0x2
 547 006b 00 00 00 00 		.1byte	0x51
 548 006d 00 00 00 00 		.1byte	0x93
 549 006f 00 06       		.1byte	0x2
 550 0070 50          		.4byte	.LVL18
 551 0070 93          		.4byte	.LFE2
 552 0071 02          		.2byte	0x6
 553 0071 51          		.1byte	0x50
 554 0072 93          		.1byte	0x93
 555 0072 02          		.1byte	0x2
 556 0073 00 00 00 00 		.1byte	0x51
 557 0075 00 00 00 00 		.1byte	0x93
 558 0077 00 06       		.1byte	0x2
 559 0078 50          		.4byte	0x0
 560 0078 93          		.4byte	0x0
 561 0079 02          	.LLST8:
 562 0079 51          		.4byte	.LFB3
 563 007a 93          		.4byte	.LCFI4
 564 007a 02          		.2byte	0x1
 565 007b 00 00 00 00 		.1byte	0x55
 566 007d 00 00 00 00 		.4byte	.LCFI4
 567                 		.4byte	.LFE3
 568 007f 00 00 00 00 		.2byte	0x2
 569 0081 00 00 00 00 		.1byte	0x75
 570 0083 00 01       		.1byte	0x8
 571 0084 55          		.4byte	0x0
 572 0084 00 00 00 00 		.4byte	0x0
 573 0086 00 00 00 00 		.file 2 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/types.h"
 574 0088 00 02       		.file 3 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/pio.h"
 575 0089 75          		.file 4 "C:/CSR_uEnergy_SDK-2.2.2.13/tools/include/CSR101x_A05/timer.h"
 576 008a 08          		.file 5 "hr_sensor_hw.h"
 577 008a 00 00 00 00 		.file 6 "app_gatt.h"
 578 008c 00 00 00 00 		.section	.debug_info
 579                 		.4byte	0x37d
 580                 		.2byte	0x2
 581                 		.4byte	.Ldebug_abbrev0
 582                 		.1byte	0x4
 583                 		.1byte	0x1
 584                 		.4byte	.LASF86
 585 0000 00 00 03 7D 		.1byte	0x1
 586 0002 00 02       		.4byte	.LASF87
 587 0003 00 00 00 00 		.4byte	.LASF88
 588 0005 04          		.4byte	0x0
 589 0005 01          		.4byte	0x0
 590 0006 00 00 00 00 		.4byte	.Ldebug_ranges0+0x0
 591 0008 01          		.4byte	.Ldebug_line0
 592 0008 00 00 00 00 		.1byte	0x2
 593 000a 00 00 00 00 		.1byte	0x2
 594 000c 00 00 00 00 		.1byte	0x8
 595 000e 00 00 00 00 		.4byte	.LASF0
 596 0010 00 00 00 00 		.1byte	0x3
 597 0012 00 00 00 00 		.4byte	.LASF2
 598 0014 02          		.1byte	0x2
 599 0015 02          		.1byte	0x1f
 600 0015 08          		.4byte	0x3b
 601 0016 00 00 00 00 		.1byte	0x2
 602 0018 03          		.1byte	0x2
 603 0018 00 00 00 00 		.1byte	0x7
 604 001a 02          		.4byte	.LASF1
 605 001b 1F          		.1byte	0x3
 606 001b 00 00 00 3B 		.4byte	.LASF3
 607 001d 02          		.1byte	0x2
 608 001e 02          		.1byte	0x20
 609 001e 07          		.4byte	0x4d
 610 001f 00 00 00 00 		.1byte	0x2
 611 0021 03          		.1byte	0x4
 612 0021 00 00 00 00 		.1byte	0x7
 613 0023 02          		.4byte	.LASF4
 614 0024 20          		.1byte	0x2
 615 0024 00 00 00 4D 		.1byte	0x2
 616 0026 02          		.1byte	0x6
 617 0027 04          		.4byte	.LASF5
 618 0027 07          		.1byte	0x2
 619 0028 00 00 00 00 		.1byte	0x2
 620 002a 02          		.1byte	0x5
 621 002a 02          		.4byte	.LASF6
 622 002b 06          		.1byte	0x2
 623 002b 00 00 00 00 		.1byte	0x4
 624 002d 02          		.1byte	0x5
 625 002e 02          		.4byte	.LASF7
 626 002e 05          		.1byte	0x2
 627 002f 00 00 00 00 		.1byte	0x2
 628 0031 02          		.1byte	0x7
 629 0031 04          		.4byte	.LASF8
 630 0032 05          		.1byte	0x4
 631 0032 00 00 00 00 		.1byte	0x2
 632 0034 02          		.1byte	0x3
 633 0035 02          		.1byte	0x1b
 634 0035 07          		.4byte	0x10f
 635 0036 00 00 00 00 		.1byte	0x5
 636 0038 04          		.4byte	.LASF9
 637 0038 02          		.1byte	0x0
 638 0039 03          		.1byte	0x5
 639 0039 1B          		.4byte	.LASF10
 640 003a 00 00 01 0F 		.1byte	0x1
 641 003c 05          		.1byte	0x5
 642 003c 00 00 00 00 		.4byte	.LASF11
 643 003e 00          		.1byte	0x3
 644 003f 05          		.1byte	0x5
 645 003f 00 00 00 00 		.4byte	.LASF12
 646 0041 01          		.1byte	0x4
 647 0042 05          		.1byte	0x5
 648 0042 00 00 00 00 		.4byte	.LASF13
 649 0044 03          		.1byte	0x5
 650 0045 05          		.1byte	0x5
 651 0045 00 00 00 00 		.4byte	.LASF14
 652 0047 04          		.1byte	0x6
 653 0048 05          		.1byte	0x5
 654 0048 00 00 00 00 		.4byte	.LASF15
 655 004a 05          		.1byte	0x7
 656 004b 05          		.1byte	0x5
 657 004b 00 00 00 00 		.4byte	.LASF16
 658 004d 06          		.1byte	0x8
 659 004e 05          		.1byte	0x5
 660 004e 00 00 00 00 		.4byte	.LASF17
 661 0050 07          		.1byte	0x9
 662 0051 05          		.1byte	0x5
 663 0051 00 00 00 00 		.4byte	.LASF18
 664 0053 08          		.1byte	0xa
 665 0054 05          		.1byte	0x5
 666 0054 00 00 00 00 		.4byte	.LASF19
 667 0056 09          		.1byte	0xb
 668 0057 05          		.1byte	0x5
 669 0057 00 00 00 00 		.4byte	.LASF20
 670 0059 0A          		.1byte	0xc
 671 005a 05          		.1byte	0x5
 672 005a 00 00 00 00 		.4byte	.LASF21
 673 005c 0B          		.1byte	0xd
 674 005d 05          		.1byte	0x5
 675 005d 00 00 00 00 		.4byte	.LASF22
 676 005f 0C          		.1byte	0xe
 677 0060 05          		.1byte	0x5
 678 0060 00 00 00 00 		.4byte	.LASF23
 679 0062 0D          		.1byte	0xf
 680 0063 05          		.1byte	0x5
 681 0063 00 00 00 00 		.4byte	.LASF24
 682 0065 0E          		.1byte	0x10
 683 0066 05          		.1byte	0x5
 684 0066 00 00 00 00 		.4byte	.LASF25
 685 0068 0F          		.1byte	0x11
 686 0069 05          		.1byte	0x5
 687 0069 00 00 00 00 		.4byte	.LASF26
 688 006b 10          		.1byte	0x12
 689 006c 05          		.1byte	0x5
 690 006c 00 00 00 00 		.4byte	.LASF27
 691 006e 11          		.1byte	0x13
 692 006f 05          		.1byte	0x5
 693 006f 00 00 00 00 		.4byte	.LASF28
 694 0071 12          		.1byte	0x14
 695 0072 05          		.1byte	0x5
 696 0072 00 00 00 00 		.4byte	.LASF29
 697 0074 13          		.1byte	0x15
 698 0075 05          		.1byte	0x5
 699 0075 00 00 00 00 		.4byte	.LASF30
 700 0077 14          		.1byte	0x16
 701 0078 05          		.1byte	0x5
 702 0078 00 00 00 00 		.4byte	.LASF31
 703 007a 15          		.1byte	0x17
 704 007b 05          		.1byte	0x5
 705 007b 00 00 00 00 		.4byte	.LASF32
 706 007d 16          		.1byte	0x18
 707 007e 05          		.1byte	0x5
 708 007e 00 00 00 00 		.4byte	.LASF33
 709 0080 17          		.1byte	0x19
 710 0081 05          		.1byte	0x0
 711 0081 00 00 00 00 		.1byte	0x4
 712 0083 18          		.1byte	0x2
 713 0084 05          		.1byte	0x3
 714 0084 00 00 00 00 		.1byte	0x90
 715 0086 19          		.4byte	0x142
 716 0087 00          		.1byte	0x5
 717 0087 04          		.4byte	.LASF34
 718 0088 02          		.1byte	0x0
 719 0088 03          		.1byte	0x5
 720 0089 90          		.4byte	.LASF35
 721 0089 00 00 01 42 		.1byte	0x1
 722 008b 05          		.1byte	0x5
 723 008c 00 00 00 00 		.4byte	.LASF36
 724 008e 00          		.1byte	0x3
 725 008e 05          		.1byte	0x5
 726 008f 00 00 00 00 		.4byte	.LASF37
 727 0091 01          		.1byte	0x5
 728 0091 05          		.1byte	0x5
 729 0092 00 00 00 00 		.4byte	.LASF38
 730 0094 03          		.1byte	0x7
 731 0094 05          		.1byte	0x5
 732 0095 00 00 00 00 		.4byte	.LASF39
 733 0097 05          		.1byte	0x9
 734 0097 05          		.1byte	0x5
 735 0098 00 00 00 00 		.4byte	.LASF40
 736 009a 07          		.1byte	0xd
 737 009a 05          		.1byte	0x0
 738 009b 00 00 00 00 		.1byte	0x4
 739 009d 09          		.1byte	0x2
 740 009d 05          		.1byte	0x3
 741 009e 00 00 00 00 		.1byte	0xa7
 742 00a0 0D          		.4byte	0x175
 743 00a0 00          		.1byte	0x5
 744 00a1 04          		.4byte	.LASF41
 745 00a1 02          		.1byte	0x0
 746 00a2 03          		.1byte	0x5
 747 00a2 A7          		.4byte	.LASF42
 748 00a3 00 00 01 75 		.1byte	0x1
 749 00a5 05          		.1byte	0x5
 750 00a5 00 00 00 00 		.4byte	.LASF43
 751 00a7 00          		.1byte	0x3
 752 00a8 05          		.1byte	0x5
 753 00a8 00 00 00 00 		.4byte	.LASF44
 754 00aa 01          		.1byte	0x5
 755 00ab 05          		.1byte	0x5
 756 00ab 00 00 00 00 		.4byte	.LASF45
 757 00ad 03          		.1byte	0x7
 758 00ae 05          		.1byte	0x5
 759 00ae 00 00 00 00 		.4byte	.LASF46
 760 00b0 05          		.1byte	0x9
 761 00b1 05          		.1byte	0x5
 762 00b1 00 00 00 00 		.4byte	.LASF47
 763 00b3 07          		.1byte	0xd
 764 00b4 05          		.1byte	0x0
 765 00b4 00 00 00 00 		.1byte	0x4
 766 00b6 09          		.1byte	0x2
 767 00b7 05          		.1byte	0x3
 768 00b7 00 00 00 00 		.1byte	0xb9
 769 00b9 0D          		.4byte	0x196
 770 00ba 00          		.1byte	0x5
 771 00ba 04          		.4byte	.LASF48
 772 00bb 02          		.1byte	0x0
 773 00bb 03          		.1byte	0x5
 774 00bc B9          		.4byte	.LASF49
 775 00bc 00 00 01 96 		.1byte	0x1
 776 00be 05          		.1byte	0x5
 777 00bf 00 00 00 00 		.4byte	.LASF50
 778 00c1 00          		.1byte	0x2
 779 00c1 05          		.1byte	0x5
 780 00c2 00 00 00 00 		.4byte	.LASF51
 781 00c4 01          		.1byte	0x3
 782 00c4 05          		.1byte	0x0
 783 00c5 00 00 00 00 		.1byte	0x6
 784 00c7 02          		.1byte	0x2
 785 00c7 05          		.1byte	0x3
 786 00c8 00 00 00 00 		.2byte	0x1a3
 787 00ca 03          		.4byte	0x1b8
 788 00ca 00          		.1byte	0x5
 789 00cb 06          		.4byte	.LASF52
 790 00cb 02          		.1byte	0x0
 791 00cc 03          		.1byte	0x5
 792 00cc 01 A3       		.4byte	.LASF53
 793 00cd 00 00 01 B8 		.1byte	0x1
 794 00cf 05          		.1byte	0x5
 795 00d0 00 00 00 00 		.4byte	.LASF54
 796 00d2 00          		.1byte	0x2
 797 00d2 05          		.1byte	0x5
 798 00d3 00 00 00 00 		.4byte	.LASF55
 799 00d5 01          		.1byte	0x3
 800 00d5 05          		.1byte	0x0
 801 00d6 00 00 00 00 		.1byte	0x7
 802 00d8 02          		.1byte	0x2
 803 00d8 05          		.1byte	0x7
 804 00d9 00 00 00 00 		.1byte	0x3
 805 00db 03          		.4byte	.LASF56
 806 00db 00          		.1byte	0x4
 807 00dc 07          		.1byte	0x1f
 808 00dc 02          		.4byte	0x30
 809 00dd 07          		.1byte	0x4
 810 00dd 03          		.1byte	0x2
 811 00de 00 00 00 00 		.1byte	0x5
 812 00e0 04          		.1byte	0x29
 813 00e0 1F          		.4byte	0x1ed
 814 00e1 00 00 00 30 		.1byte	0x5
 815 00e3 04          		.4byte	.LASF57
 816 00e3 02          		.1byte	0x0
 817 00e4 05          		.1byte	0x5
 818 00e4 29          		.4byte	.LASF58
 819 00e5 00 00 01 ED 		.1byte	0x1
 820 00e7 05          		.1byte	0x5
 821 00e7 00 00 00 00 		.4byte	.LASF59
 822 00e9 00          		.1byte	0x2
 823 00ea 05          		.1byte	0x5
 824 00ea 00 00 00 00 		.4byte	.LASF60
 825 00ec 01          		.1byte	0x3
 826 00ed 05          		.1byte	0x5
 827 00ed 00 00 00 00 		.4byte	.LASF61
 828 00ef 02          		.1byte	0x4
 829 00f0 05          		.1byte	0x0
 830 00f0 00 00 00 00 		.1byte	0x3
 831 00f2 03          		.4byte	.LASF62
 832 00f3 05          		.1byte	0x5
 833 00f3 00 00 00 00 		.1byte	0x39
 834 00f5 04          		.4byte	0x1c6
 835 00f6 00          		.1byte	0x8
 836 00f6 03          		.1byte	0x8
 837 00f7 00 00 00 00 		.1byte	0x5
 838 00f9 05          		.1byte	0x3c
 839 00f9 39          		.4byte	0x239
 840 00fa 00 00 01 C6 		.1byte	0x9
 841 00fc 08          		.4byte	.LASF63
 842 00fc 08          		.1byte	0x5
 843 00fd 05          		.1byte	0x40
 844 00fd 3C          		.4byte	0x1bb
 845 00fe 00 00 02 39 		.1byte	0x2
 846 0100 09          		.1byte	0x23
 847 0100 00 00 00 00 		.1byte	0x0
 848 0102 05          		.1byte	0x9
 849 0103 40          		.4byte	.LASF64
 850 0103 00 00 01 BB 		.1byte	0x5
 851 0105 02          		.1byte	0x43
 852 0106 23          		.4byte	0x1ed
 853 0106 00          		.1byte	0x2
 854 0107 09          		.1byte	0x23
 855 0107 00 00 00 00 		.1byte	0x1
 856 0109 05          		.1byte	0x9
 857 010a 43          		.4byte	.LASF65
 858 010a 00 00 01 ED 		.1byte	0x5
 859 010c 02          		.1byte	0x49
 860 010d 23          		.4byte	0x30
 861 010d 01          		.1byte	0x2
 862 010e 09          		.1byte	0x23
 863 010e 00 00 00 00 		.1byte	0x2
 864 0110 05          		.1byte	0x9
 865 0111 49          		.4byte	.LASF66
 866 0111 00 00 00 30 		.1byte	0x5
 867 0113 02          		.1byte	0x4d
 868 0114 23          		.4byte	0x1bb
 869 0114 02          		.1byte	0x2
 870 0115 09          		.1byte	0x23
 871 0115 00 00 00 00 		.1byte	0x3
 872 0117 05          		.1byte	0x0
 873 0118 4D          		.1byte	0x3
 874 0118 00 00 01 BB 		.4byte	.LASF67
 875 011a 02          		.1byte	0x5
 876 011b 23          		.1byte	0x4f
 877 011b 03          		.4byte	0x1f8
 878 011c 00          		.1byte	0x4
 879 011c 03          		.1byte	0x2
 880 011d 00 00 00 00 		.1byte	0x6
 881 011f 05          		.1byte	0x46
 882 011f 4F          		.4byte	0x295
 883 0120 00 00 01 F8 		.1byte	0x5
 884 0122 04          		.4byte	.LASF68
 885 0122 02          		.1byte	0x0
 886 0123 06          		.1byte	0x5
 887 0123 46          		.4byte	.LASF69
 888 0124 00 00 02 95 		.1byte	0x1
 889 0126 05          		.1byte	0x5
 890 0126 00 00 00 00 		.4byte	.LASF70
 891 0128 00          		.1byte	0x2
 892 0129 05          		.1byte	0x5
 893 0129 00 00 00 00 		.4byte	.LASF71
 894 012b 01          		.1byte	0x3
 895 012c 05          		.1byte	0x5
 896 012c 00 00 00 00 		.4byte	.LASF72
 897 012e 02          		.1byte	0x4
 898 012f 05          		.1byte	0x5
 899 012f 00 00 00 00 		.4byte	.LASF73
 900 0131 03          		.1byte	0x5
 901 0132 05          		.1byte	0x5
 902 0132 00 00 00 00 		.4byte	.LASF74
 903 0134 04          		.1byte	0x6
 904 0135 05          		.1byte	0x5
 905 0135 00 00 00 00 		.4byte	.LASF75
 906 0137 05          		.1byte	0x7
 907 0138 05          		.1byte	0x5
 908 0138 00 00 00 00 		.4byte	.LASF76
 909 013a 06          		.1byte	0x8
 910 013b 05          		.1byte	0x5
 911 013b 00 00 00 00 		.4byte	.LASF77
 912 013d 07          		.1byte	0x9
 913 013e 05          		.1byte	0x5
 914 013e 00 00 00 00 		.4byte	.LASF78
 915 0140 08          		.1byte	0xa
 916 0141 05          		.1byte	0x5
 917 0141 00 00 00 00 		.4byte	.LASF79
 918 0143 09          		.1byte	0xb
 919 0144 05          		.1byte	0x0
 920 0144 00 00 00 00 		.1byte	0xa
 921 0146 0A          		.1byte	0x1
 922 0147 05          		.4byte	.LASF84
 923 0147 00 00 00 00 		.1byte	0x1
 924 0149 0B          		.2byte	0x136
 925 014a 00          		.1byte	0x1
 926 014a 0A          		.4byte	.LFB4
 927 014b 01          		.4byte	.LFE4
 928 014b 00 00 00 00 		.4byte	.LLST0
 929 014d 01          		.1byte	0xb
 930 014e 01 36       		.1byte	0x1
 931 014f 01          		.4byte	.LASF80
 932 014f 00 00 00 00 		.1byte	0x1
 933 0151 00 00 00 00 		.2byte	0x1ba
 934 0153 00 00 00 00 		.1byte	0x1
 935 0155 0B          		.4byte	.LFB6
 936 0156 01          		.4byte	.LFE6
 937 0156 00 00 00 00 		.4byte	.LLST1
 938 0158 01          		.4byte	0x2e2
 939 0159 01 BA       		.1byte	0xc
 940 015a 01          		.4byte	.LASF82
 941 015a 00 00 00 00 		.1byte	0x1
 942 015c 00 00 00 00 		.2byte	0x1b9
 943 015e 00 00 00 00 		.4byte	0x42
 944 0160 00 00 02 E2 		.4byte	.LLST2
 945 0162 0C          		.1byte	0xd
 946 0163 00 00 00 00 		.4byte	.LASF89
 947 0165 01          		.1byte	0x1
 948 0165 01 B9       		.2byte	0x1bc
 949 0166 00 00 00 42 		.4byte	0x42
 950 0168 00 00 00 00 		.1byte	0x0
 951 016a 0D          		.1byte	0xb
 952 016b 00 00 00 00 		.1byte	0x1
 953 016d 01          		.4byte	.LASF81
 954 016d 01 BC       		.1byte	0x1
 955 016e 00 00 00 42 		.2byte	0x14e
 956 0170 00          		.1byte	0x1
 957 0171 0B          		.4byte	.LFB5
 958 0171 01          		.4byte	.LFE5
 959 0172 00 00 00 00 		.4byte	.LLST3
 960 0174 01          		.4byte	0x322
 961 0174 01 4E       		.1byte	0xc
 962 0175 01          		.4byte	.LASF64
 963 0176 00 00 00 00 		.1byte	0x1
 964 0178 00 00 00 00 		.2byte	0x14d
 965 017a 00 00 00 00 		.4byte	0x1ed
 966 017c 00 00 03 22 		.4byte	.LLST4
 967 017e 0C          		.1byte	0xe
 968 017e 00 00 00 00 		.4byte	.LASF83
 969 0180 01          		.1byte	0x1
 970 0181 01 4D       		.2byte	0x150
 971 0182 00 00 01 ED 		.4byte	0x42
 972 0184 00 00 00 00 		.1byte	0x8
 973 0186 0E          		.1byte	0x76
 974 0186 00 00 00 00 		.1byte	0x3
 975 0188 01          		.1byte	0x93
 976 0189 01 50       		.1byte	0x1
 977 018a 00 00 00 42 		.1byte	0x76
 978 018c 08          		.1byte	0x4
 979 018c 76          		.1byte	0x93
 980 018d 03          		.1byte	0x1
 981 018d 93          		.1byte	0x0
 982 018e 01          		.1byte	0xf
 983 018e 76          		.4byte	.LASF90
 984 018f 04          		.1byte	0x1
 985 018f 93          		.1byte	0x77
 986 0190 01          		.1byte	0x1
 987 0190 00          		.4byte	.LFB2
 988 0191 0F          		.4byte	.LFE2
 989 0191 00 00 00 00 		.4byte	.LLST5
 990 0193 01          		.4byte	0x359
 991 0194 77          		.1byte	0x10
 992 0194 01          		.ascii "tid\000"
 993 0195 00 00 00 00 		.1byte	0x1
 994 0197 00 00 00 00 		.1byte	0x76
 995 0199 00 00 00 00 		.4byte	0x1bb
 996 019b 00 00 03 59 		.4byte	.LLST6
 997 019d 10          		.1byte	0x11
 998 019d 74 69 64 00 		.4byte	.LASF83
 999 019f 01          		.1byte	0x1
 1000 01a0 76          		.1byte	0x78
 1001 01a0 00 00 01 BB 		.4byte	0x42
 1002 01a2 00 00 00 00 		.4byte	.LLST7
 1003 01a4 11          		.1byte	0x0
 1004 01a5 00 00 00 00 		.1byte	0x12
 1005 01a7 01          		.1byte	0x1
 1006 01a7 78          		.4byte	.LASF85
 1007 01a8 00 00 00 42 		.1byte	0x1
 1008 01aa 00 00 00 00 		.1byte	0xf5
 1009 01ac 00          		.1byte	0x1
 1010 01ac 12          		.4byte	.LFB3
 1011 01ad 01          		.4byte	.LFE3
 1012 01ad 00 00 00 00 		.4byte	.LLST8
 1013 01af 01          		.1byte	0x13
 1014 01b0 F5          		.4byte	.LASF91
 1015 01b0 01          		.1byte	0x1
 1016 01b1 00 00 00 00 		.1byte	0x62
 1017 01b3 00 00 00 00 		.4byte	0x239
 1018 01b5 00 00 00 00 		.1byte	0x1
 1019 01b7 13          		.1byte	0x5
 1020 01b7 00 00 00 00 		.1byte	0x3
 1021 01b9 01          		.4byte	g_app_hw_data
 1022 01ba 62          		.1byte	0x0
 1023 01ba 00 00 02 39 		.section	.debug_abbrev
 1024 01bc 01          		.1byte	0x1
 1025 01bd 05          		.1byte	0x11
 1026 01bd 03          		.1byte	0x1
 1027 01be 00 00 00 00 		.1byte	0x25
 1028 01c0 00          		.1byte	0xe
 1029                 		.1byte	0x13
 1030 0000 01          		.1byte	0xb
 1031 0000 11          		.1byte	0x3
 1032 0001 01          		.1byte	0xe
 1033 0001 25          		.1byte	0x1b
 1034 0002 0E          		.1byte	0xe
 1035 0002 13          		.1byte	0x11
 1036 0003 0B          		.1byte	0x1
 1037 0003 03          		.1byte	0x52
 1038 0004 0E          		.1byte	0x1
 1039 0004 1B          		.1byte	0x55
 1040 0005 0E          		.1byte	0x6
 1041 0005 11          		.1byte	0x10
 1042 0006 01          		.1byte	0x6
 1043 0006 52          		.1byte	0x0
 1044 0007 01          		.1byte	0x0
 1045 0007 55          		.1byte	0x2
 1046 0008 06          		.1byte	0x24
 1047 0008 10          		.1byte	0x0
 1048 0009 06          		.1byte	0xb
 1049 0009 00          		.1byte	0xb
 1050 000a 00          		.1byte	0x3e
 1051 000a 02          		.1byte	0xb
 1052 000b 24          		.1byte	0x3
 1053 000b 00          		.1byte	0xe
 1054 000c 0B          		.1byte	0x0
 1055 000c 0B          		.1byte	0x0
 1056 000d 3E          		.1byte	0x3
 1057 000d 0B          		.1byte	0x16
 1058 000e 03          		.1byte	0x0
 1059 000e 0E          		.1byte	0x3
 1060 000f 00          		.1byte	0xe
 1061 000f 00          		.1byte	0x3a
 1062 0010 03          		.1byte	0xb
 1063 0010 16          		.1byte	0x3b
 1064 0011 00          		.1byte	0xb
 1065 0011 03          		.1byte	0x49
 1066 0012 0E          		.1byte	0x13
 1067 0012 3A          		.1byte	0x0
 1068 0013 0B          		.1byte	0x0
 1069 0013 3B          		.1byte	0x4
 1070 0014 0B          		.1byte	0x4
 1071 0014 49          		.1byte	0x1
 1072 0015 13          		.1byte	0xb
 1073 0015 00          		.1byte	0xb
 1074 0016 00          		.1byte	0x3a
 1075 0016 04          		.1byte	0xb
 1076 0017 04          		.1byte	0x3b
 1077 0017 01          		.1byte	0xb
 1078 0018 0B          		.1byte	0x1
 1079 0018 0B          		.1byte	0x13
 1080 0019 3A          		.1byte	0x0
 1081 0019 0B          		.1byte	0x0
 1082 001a 3B          		.1byte	0x5
 1083 001a 0B          		.1byte	0x28
 1084 001b 01          		.1byte	0x0
 1085 001b 13          		.1byte	0x3
 1086 001c 00          		.1byte	0xe
 1087 001c 00          		.1byte	0x1c
 1088 001d 05          		.1byte	0xd
 1089 001d 28          		.1byte	0x0
 1090 001e 00          		.1byte	0x0
 1091 001e 03          		.1byte	0x6
 1092 001f 0E          		.1byte	0x4
 1093 001f 1C          		.1byte	0x1
 1094 0020 0D          		.1byte	0xb
 1095 0020 00          		.1byte	0xb
 1096 0021 00          		.1byte	0x3a
 1097 0021 06          		.1byte	0xb
 1098 0022 04          		.1byte	0x3b
 1099 0022 01          		.1byte	0x5
 1100 0023 0B          		.1byte	0x1
 1101 0023 0B          		.1byte	0x13
 1102 0024 3A          		.1byte	0x0
 1103 0024 0B          		.1byte	0x0
 1104 0025 3B          		.1byte	0x7
 1105 0025 05          		.1byte	0x24
 1106 0026 01          		.1byte	0x0
 1107 0026 13          		.1byte	0xb
 1108 0027 00          		.1byte	0xb
 1109 0027 00          		.1byte	0x3e
 1110 0028 07          		.1byte	0xb
 1111 0028 24          		.1byte	0x0
 1112 0029 00          		.1byte	0x0
 1113 0029 0B          		.1byte	0x8
 1114 002a 0B          		.1byte	0x13
 1115 002a 3E          		.1byte	0x1
 1116 002b 0B          		.1byte	0xb
 1117 002b 00          		.1byte	0xb
 1118 002c 00          		.1byte	0x3a
 1119 002c 08          		.1byte	0xb
 1120 002d 13          		.1byte	0x3b
 1121 002d 01          		.1byte	0xb
 1122 002e 0B          		.1byte	0x1
 1123 002e 0B          		.1byte	0x13
 1124 002f 3A          		.1byte	0x0
 1125 002f 0B          		.1byte	0x0
 1126 0030 3B          		.1byte	0x9
 1127 0030 0B          		.1byte	0xd
 1128 0031 01          		.1byte	0x0
 1129 0031 13          		.1byte	0x3
 1130 0032 00          		.1byte	0xe
 1131 0032 00          		.1byte	0x3a
 1132 0033 09          		.1byte	0xb
 1133 0033 0D          		.1byte	0x3b
 1134 0034 00          		.1byte	0xb
 1135 0034 03          		.1byte	0x49
 1136 0035 0E          		.1byte	0x13
 1137 0035 3A          		.1byte	0x38
 1138 0036 0B          		.1byte	0xa
 1139 0036 3B          		.1byte	0x0
 1140 0037 0B          		.1byte	0x0
 1141 0037 49          		.1byte	0xa
 1142 0038 13          		.1byte	0x2e
 1143 0038 38          		.1byte	0x0
 1144 0039 0A          		.1byte	0x3f
 1145 0039 00          		.1byte	0xc
 1146 003a 00          		.1byte	0x3
 1147 003a 0A          		.1byte	0xe
 1148 003b 2E          		.1byte	0x3a
 1149 003b 00          		.1byte	0xb
 1150 003c 3F          		.1byte	0x3b
 1151 003c 0C          		.1byte	0x5
 1152 003d 03          		.1byte	0x27
 1153 003d 0E          		.1byte	0xc
 1154 003e 3A          		.1byte	0x11
 1155 003e 0B          		.1byte	0x1
 1156 003f 3B          		.1byte	0x12
 1157 003f 05          		.1byte	0x1
 1158 0040 27          		.1byte	0x40
 1159 0040 0C          		.1byte	0x6
 1160 0041 11          		.1byte	0x0
 1161 0041 01          		.1byte	0x0
 1162 0042 12          		.1byte	0xb
 1163 0042 01          		.1byte	0x2e
 1164 0043 40          		.1byte	0x1
 1165 0043 06          		.1byte	0x3f
 1166 0044 00          		.1byte	0xc
 1167 0044 00          		.1byte	0x3
 1168 0045 0B          		.1byte	0xe
 1169 0045 2E          		.1byte	0x3a
 1170 0046 01          		.1byte	0xb
 1171 0046 3F          		.1byte	0x3b
 1172 0047 0C          		.1byte	0x5
 1173 0047 03          		.1byte	0x27
 1174 0048 0E          		.1byte	0xc
 1175 0048 3A          		.1byte	0x11
 1176 0049 0B          		.1byte	0x1
 1177 0049 3B          		.1byte	0x12
 1178 004a 05          		.1byte	0x1
 1179 004a 27          		.1byte	0x40
 1180 004b 0C          		.1byte	0x6
 1181 004b 11          		.1byte	0x1
 1182 004c 01          		.1byte	0x13
 1183 004c 12          		.1byte	0x0
 1184 004d 01          		.1byte	0x0
 1185 004d 40          		.1byte	0xc
 1186 004e 06          		.1byte	0x5
 1187 004e 01          		.1byte	0x0
 1188 004f 13          		.1byte	0x3
 1189 004f 00          		.1byte	0xe
 1190 0050 00          		.1byte	0x3a
 1191 0050 0C          		.1byte	0xb
 1192 0051 05          		.1byte	0x3b
 1193 0051 00          		.1byte	0x5
 1194 0052 03          		.1byte	0x49
 1195 0052 0E          		.1byte	0x13
 1196 0053 3A          		.1byte	0x2
 1197 0053 0B          		.1byte	0x6
 1198 0054 3B          		.1byte	0x0
 1199 0054 05          		.1byte	0x0
 1200 0055 49          		.1byte	0xd
 1201 0055 13          		.1byte	0x34
 1202 0056 02          		.1byte	0x0
 1203 0056 06          		.1byte	0x3
 1204 0057 00          		.1byte	0xe
 1205 0057 00          		.1byte	0x3a
 1206 0058 0D          		.1byte	0xb
 1207 0058 34          		.1byte	0x3b
 1208 0059 00          		.1byte	0x5
 1209 0059 03          		.1byte	0x49
 1210 005a 0E          		.1byte	0x13
 1211 005a 3A          		.1byte	0x0
 1212 005b 0B          		.1byte	0x0
 1213 005b 3B          		.1byte	0xe
 1214 005c 05          		.1byte	0x34
 1215 005c 49          		.1byte	0x0
 1216 005d 13          		.1byte	0x3
 1217 005d 00          		.1byte	0xe
 1218 005e 00          		.1byte	0x3a
 1219 005e 0E          		.1byte	0xb
 1220 005f 34          		.1byte	0x3b
 1221 005f 00          		.1byte	0x5
 1222 0060 03          		.1byte	0x49
 1223 0060 0E          		.1byte	0x13
 1224 0061 3A          		.1byte	0x2
 1225 0061 0B          		.1byte	0xa
 1226 0062 3B          		.1byte	0x0
 1227 0062 05          		.1byte	0x0
 1228 0063 49          		.1byte	0xf
 1229 0063 13          		.1byte	0x2e
 1230 0064 02          		.1byte	0x1
 1231 0064 0A          		.1byte	0x3
 1232 0065 00          		.1byte	0xe
 1233 0065 00          		.1byte	0x3a
 1234 0066 0F          		.1byte	0xb
 1235 0066 2E          		.1byte	0x3b
 1236 0067 01          		.1byte	0xb
 1237 0067 03          		.1byte	0x27
 1238 0068 0E          		.1byte	0xc
 1239 0068 3A          		.1byte	0x11
 1240 0069 0B          		.1byte	0x1
 1241 0069 3B          		.1byte	0x12
 1242 006a 0B          		.1byte	0x1
 1243 006a 27          		.1byte	0x40
 1244 006b 0C          		.1byte	0x6
 1245 006b 11          		.1byte	0x1
 1246 006c 01          		.1byte	0x13
 1247 006c 12          		.1byte	0x0
 1248 006d 01          		.1byte	0x0
 1249 006d 40          		.1byte	0x10
 1250 006e 06          		.1byte	0x5
 1251 006e 01          		.1byte	0x0
 1252 006f 13          		.1byte	0x3
 1253 006f 00          		.1byte	0x8
 1254 0070 00          		.1byte	0x3a
 1255 0070 10          		.1byte	0xb
 1256 0071 05          		.1byte	0x3b
 1257 0071 00          		.1byte	0xb
 1258 0072 03          		.1byte	0x49
 1259 0072 08          		.1byte	0x13
 1260 0073 3A          		.1byte	0x2
 1261 0073 0B          		.1byte	0x6
 1262 0074 3B          		.1byte	0x0
 1263 0074 0B          		.1byte	0x0
 1264 0075 49          		.1byte	0x11
 1265 0075 13          		.1byte	0x34
 1266 0076 02          		.1byte	0x0
 1267 0076 06          		.1byte	0x3
 1268 0077 00          		.1byte	0xe
 1269 0077 00          		.1byte	0x3a
 1270 0078 11          		.1byte	0xb
 1271 0078 34          		.1byte	0x3b
 1272 0079 00          		.1byte	0xb
 1273 0079 03          		.1byte	0x49
 1274 007a 0E          		.1byte	0x13
 1275 007a 3A          		.1byte	0x2
 1276 007b 0B          		.1byte	0x6
 1277 007b 3B          		.1byte	0x0
 1278 007c 0B          		.1byte	0x0
 1279 007c 49          		.1byte	0x12
 1280 007d 13          		.1byte	0x2e
 1281 007d 02          		.1byte	0x0
 1282 007e 06          		.1byte	0x3f
 1283 007e 00          		.1byte	0xc
 1284 007f 00          		.1byte	0x3
 1285 007f 12          		.1byte	0xe
 1286 0080 2E          		.1byte	0x3a
 1287 0080 00          		.1byte	0xb
 1288 0081 3F          		.1byte	0x3b
 1289 0081 0C          		.1byte	0xb
 1290 0082 03          		.1byte	0x27
 1291 0082 0E          		.1byte	0xc
 1292 0083 3A          		.1byte	0x11
 1293 0083 0B          		.1byte	0x1
 1294 0084 3B          		.1byte	0x12
 1295 0084 0B          		.1byte	0x1
 1296 0085 27          		.1byte	0x40
 1297 0085 0C          		.1byte	0x6
 1298 0086 11          		.1byte	0x0
 1299 0086 01          		.1byte	0x0
 1300 0087 12          		.1byte	0x13
 1301 0087 01          		.1byte	0x34
 1302 0088 40          		.1byte	0x0
 1303 0088 06          		.1byte	0x3
 1304 0089 00          		.1byte	0xe
 1305 0089 00          		.1byte	0x3a
 1306 008a 13          		.1byte	0xb
 1307 008a 34          		.1byte	0x3b
 1308 008b 00          		.1byte	0xb
 1309 008b 03          		.1byte	0x49
 1310 008c 0E          		.1byte	0x13
 1311 008c 3A          		.1byte	0x3f
 1312 008d 0B          		.1byte	0xc
 1313 008d 3B          		.1byte	0x2
 1314 008e 0B          		.1byte	0xa
 1315 008e 49          		.1byte	0x0
 1316 008f 13          		.1byte	0x0
 1317 008f 3F          		.1byte	0x0
 1318 0090 0C          		.section	.debug_pubnames,"",@progbits
 1319 0090 02          		.4byte	0x6e
 1320 0091 0A          		.2byte	0x2
 1321 0091 00          		.4byte	.Ldebug_info0
 1322 0092 00          		.4byte	0x381
 1323 0092 00          		.4byte	0x295
 1324                 		.ascii "HrHwDataInit\000"
 1325 0000 00 00 00 6E 		.4byte	0x2ab
 1326 0002 00 02       		.ascii "HandlePIOChangedEvent\000"
 1327 0003 00 00 00 00 		.4byte	0x2e2
 1328 0005 00 00 03 81 		.ascii "SoundBuzzer\000"
 1329 0007 00 00 02 95 		.4byte	0x359
 1330 0009 48 72 48 77 		.ascii "HrInitHardware\000"
 1330      44 61 74 61 
 1330      49 6E 69 74 
 1330      00 
 1331 000f 00 00 02 AB 		.4byte	0x36e
 1332 0011 48 61 6E 64 		.ascii "g_app_hw_data\000"
 1332      6C 65 50 49 
 1332      4F 43 68 61 
 1332      6E 67 65 64 
 1332      45 76 65 6E 
 1333 001c 00 00 02 E2 		.4byte	0x0
 1334 001e 53 6F 75 6E 		.section	.debug_aranges,"",@progbits
 1334      64 42 75 7A 
 1334      7A 65 72 00 
 1335 0024 00 00 03 59 		.4byte	0x3c
 1336 0026 48 72 49 6E 		.2byte	0x2
 1336      69 74 48 61 
 1336      72 64 77 61 
 1336      72 65 00 
 1337 002e 00 00 03 6E 		.4byte	.Ldebug_info0
 1338 0030 67 5F 61 70 		.1byte	0x4
 1338      70 5F 68 77 
 1338      5F 64 61 74 
 1338      61 00 
 1339 0037 00 00 00 00 		.1byte	0x0
 1340                 		.2byte	0x0
 1341 0000 00 00 00 3C 		.2byte	0x0
 1342 0002 00 02       		.4byte	.LFB4
 1343 0003 00 00 00 00 		.4byte	.LFE4-.LFB4
 1344 0005 04          		.4byte	.LFB6
 1345 0005 00          		.4byte	.LFE6-.LFB6
 1346 0006 00 00       		.4byte	.LFB5
 1347 0007 00 00       		.4byte	.LFE5-.LFB5
 1348 0008 00 00 00 00 		.4byte	.LFB2
 1349 000a 00 00 00 00 		.4byte	.LFE2-.LFB2
 1350 000c 00 00 00 00 		.4byte	.LFB3
 1351 000e 00 00 00 00 		.4byte	.LFE3-.LFB3
 1352 0010 00 00 00 00 		.4byte	0x0
 1353 0012 00 00 00 00 		.4byte	0x0
 1354 0014 00 00 00 00 		.section	.debug_ranges,"",@progbits
 1355 0016 00 00 00 00 	.Ldebug_ranges0:
 1356 0018 00 00 00 00 		.4byte	.Ltext0
 1357 001a 00 00 00 00 		.4byte	.Letext0
 1358 001c 00 00 00 00 		.4byte	.LFB4
 1359 001e 00 00 00 00 		.4byte	.LFE4
 1360                 		.4byte	.LFB6
 1361                 		.4byte	.LFE6
 1362 0000 00 00 00 00 		.4byte	.LFB5
 1363 0002 00 00 00 00 		.4byte	.LFE5
 1364 0004 00 00 00 00 		.4byte	.LFB2
 1365 0006 00 00 00 00 		.4byte	.LFE2
 1366 0008 00 00 00 00 		.4byte	.LFB3
 1367 000a 00 00 00 00 		.4byte	.LFE3
 1368 000c 00 00 00 00 		.4byte	0x0
 1369 000e 00 00 00 00 		.4byte	0x0
 1370 0010 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 1371 0012 00 00 00 00 	.LASF33:
 1372 0014 00 00 00 00 		.ascii "pio_mode_ana_mon_clk_pio\000"
 1373 0016 00 00 00 00 	.LASF21:
 1374 0018 00 00 00 00 		.ascii "pio_mode_radio_rx_en\000"
 1375 001a 00 00 00 00 	.LASF78:
 1376                 		.ascii "app_panic_invalid_state\000"
 1377                 	.LASF64:
 1378 0000 70 69 6F 5F 		.ascii "beep_type\000"
 1378      6D 6F 64 65 
 1378      5F 61 6E 61 
 1378      5F 6D 6F 6E 
 1378      5F 63 6C 6B 
 1379                 	.LASF29:
 1380 000c 70 69 6F 5F 		.ascii "pio_mode_i2c_data\000"
 1380      6D 6F 64 65 
 1380      5F 72 61 64 
 1380      69 6F 5F 72 
 1380      78 5F 65 6E 
 1381                 	.LASF6:
 1382 0017 61 70 70 5F 		.ascii "short int\000"
 1382      70 61 6E 69 
 1382      63 5F 69 6E 
 1382      76 61 6C 69 
 1382      64 5F 73 74 
 1383                 	.LASF82:
 1384 0023 62 65 65 70 		.ascii "pio_changed\000"
 1384      5F 74 79 70 
 1384      65 00 
 1385                 	.LASF59:
 1386 0028 70 69 6F 5F 		.ascii "buzzer_beep_long\000"
 1386      6D 6F 64 65 
 1386      5F 69 32 63 
 1386      5F 64 61 74 
 1386      61 00 
 1387                 	.LASF41:
 1388 0031 73 68 6F 72 		.ascii "pio_i2c_pull_mode_no_pulls\000"
 1388      74 20 69 6E 
 1388      74 00 
 1389                 	.LASF87:
 1390 0036 70 69 6F 5F 		.ascii "hr_sensor_hw.c\000"
 1390      63 68 61 6E 
 1390      67 65 64 00 
 1391                 	.LASF26:
 1392 003c 62 75 7A 7A 		.ascii "pio_mode_pio_control_rxd\000"
 1392      65 72 5F 62 
 1392      65 65 70 5F 
 1392      6C 6F 6E 67 
 1392      00 
 1393                 	.LASF23:
 1394 0044 70 69 6F 5F 		.ascii "pio_mode_nvm_power_en\000"
 1394      69 32 63 5F 
 1394      70 75 6C 6C 
 1394      5F 6D 6F 64 
 1394      65 5F 6E 6F 
 1395                 	.LASF80:
 1396 0052 68 72 5F 73 		.ascii "HandlePIOChangedEvent\000"
 1396      65 6E 73 6F 
 1396      72 5F 68 77 
 1396      2E 63 00 
 1397                 	.LASF83:
 1398 0059 70 69 6F 5F 		.ascii "beep_timer\000"
 1398      6D 6F 64 65 
 1398      5F 70 69 6F 
 1398      5F 63 6F 6E 
 1398      74 72 6F 6C 
 1399                 	.LASF90:
 1400 0066 70 69 6F 5F 		.ascii "appBuzzerTimerHandler\000"
 1400      6D 6F 64 65 
 1400      5F 6E 76 6D 
 1400      5F 70 6F 77 
 1400      65 72 5F 65 
 1401                 	.LASF88:
 1402 0071 48 61 6E 64 		.ascii "C:\\Users\\hiro\\Documents\\GitHub\\heekari\\HeekariFirmware\000"
 1402      6C 65 50 49 
 1402      4F 43 68 61 
 1402      6E 67 65 64 
 1402      45 76 65 6E 
 1403                 	.LASF48:
 1404 007c 62 65 65 70 		.ascii "pio_event_mode_disable\000"
 1404      5F 74 69 6D 
 1404      65 72 00 
 1405                 	.LASF31:
 1406 0081 61 70 70 42 		.ascii "pio_mode_uart_flow_ctrl\000"
 1406      75 7A 7A 65 
 1406      72 54 69 6D 
 1406      65 72 48 61 
 1406      6E 64 6C 65 
 1407                 	.LASF30:
 1408 008c 43 3A 5C 55 		.ascii "pio_mode_i2c_clock\000"
 1408      73 65 72 73 
 1408      5C 68 69 72 
 1408      6F 5C 44 6F 
 1408      63 75 6D 65 
 1409                 	.LASF65:
 1410 00a8 70 69 6F 5F 		.ascii "beep_count\000"
 1410      65 76 65 6E 
 1410      74 5F 6D 6F 
 1410      64 65 5F 64 
 1410      69 73 61 62 
 1411                 	.LASF49:
 1412 00b3 70 69 6F 5F 		.ascii "pio_event_mode_rising\000"
 1412      6D 6F 64 65 
 1412      5F 75 61 72 
 1412      74 5F 66 6C 
 1412      6F 77 5F 63 
 1413                 	.LASF45:
 1414 00bf 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_pull_up\000"
 1414      6D 6F 64 65 
 1414      5F 69 32 63 
 1414      5F 63 6C 6F 
 1414      63 6B 00 
 1415                 	.LASF34:
 1416 00c9 62 65 65 70 		.ascii "pio_mode_no_pulls\000"
 1416      5F 63 6F 75 
 1416      6E 74 00 
 1417                 	.LASF77:
 1418 00ce 70 69 6F 5F 		.ascii "app_panic_con_param_update\000"
 1418      65 76 65 6E 
 1418      74 5F 6D 6F 
 1418      64 65 5F 72 
 1418      69 73 69 6E 
 1419                 	.LASF54:
 1420 00d9 70 69 6F 5F 		.ascii "pio_pwm_mode_open_source\000"
 1420      69 32 63 5F 
 1420      70 75 6C 6C 
 1420      5F 6D 6F 64 
 1420      65 5F 73 74 
 1421                 	.LASF47:
 1422 00ea 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_strong_sticky\000"
 1422      6D 6F 64 65 
 1422      5F 6E 6F 5F 
 1422      70 75 6C 6C 
 1422      73 00 
 1423                 	.LASF71:
 1424 00f3 61 70 70 5F 		.ascii "app_panic_db_registration\000"
 1424      70 61 6E 69 
 1424      63 5F 63 6F 
 1424      6E 5F 70 61 
 1424      72 61 6D 5F 
 1425                 	.LASF9:
 1426 0100 70 69 6F 5F 		.ascii "pio_mode_user\000"
 1426      70 77 6D 5F 
 1426      6D 6F 64 65 
 1426      5F 6F 70 65 
 1426      6E 5F 73 6F 
 1427                 	.LASF39:
 1428 010d 70 69 6F 5F 		.ascii "pio_mode_weak_sticky\000"
 1428      69 32 63 5F 
 1428      70 75 6C 6C 
 1428      5F 6D 6F 64 
 1428      65 5F 73 74 
 1429                 	.LASF16:
 1430 011d 61 70 70 5F 		.ascii "pio_mode_quadrature0\000"
 1430      70 61 6E 69 
 1430      63 5F 64 62 
 1430      5F 72 65 67 
 1430      69 73 74 72 
 1431                 	.LASF17:
 1432 012a 70 69 6F 5F 		.ascii "pio_mode_quadrature1\000"
 1432      6D 6F 64 65 
 1432      5F 75 73 65 
 1432      72 00 
 1433                 	.LASF18:
 1434 0131 70 69 6F 5F 		.ascii "pio_mode_quadrature2\000"
 1434      6D 6F 64 65 
 1434      5F 77 65 61 
 1434      6B 5F 73 74 
 1434      69 63 6B 79 
 1435                 	.LASF19:
 1436 013b 70 69 6F 5F 		.ascii "pio_mode_quadrature3\000"
 1436      6D 6F 64 65 
 1436      5F 71 75 61 
 1436      64 72 61 74 
 1436      75 72 65 30 
 1437                 	.LASF68:
 1438 0146 70 69 6F 5F 		.ascii "app_panic_set_advert_params\000"
 1438      6D 6F 64 65 
 1438      5F 71 75 61 
 1438      64 72 61 74 
 1438      75 72 65 31 
 1439                 	.LASF81:
 1440 0150 70 69 6F 5F 		.ascii "SoundBuzzer\000"
 1440      6D 6F 64 65 
 1440      5F 71 75 61 
 1440      64 72 61 74 
 1440      75 72 65 32 
 1441                 	.LASF0:
 1442 015b 70 69 6F 5F 		.ascii "unsigned char\000"
 1442      6D 6F 64 65 
 1442      5F 71 75 61 
 1442      64 72 61 74 
 1442      75 72 65 33 
 1443                 	.LASF11:
 1444 0165 61 70 70 5F 		.ascii "pio_mode_clk_req\000"
 1444      70 61 6E 69 
 1444      63 5F 73 65 
 1444      74 5F 61 64 
 1444      76 65 72 74 
 1445                 	.LASF60:
 1446 0173 53 6F 75 6E 		.ascii "buzzer_beep_twice\000"
 1446      64 42 75 7A 
 1446      7A 65 72 00 
 1447                 	.LASF76:
 1448 0179 75 6E 73 69 		.ascii "app_panic_add_whitelist\000"
 1448      67 6E 65 64 
 1448      20 63 68 61 
 1448      72 00 
 1449                 	.LASF43:
 1450 0180 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_pull_up\000"
 1450      6D 6F 64 65 
 1450      5F 63 6C 6B 
 1450      5F 72 65 71 
 1450      00 
 1451                 	.LASF73:
 1452 0189 62 75 7A 7A 		.ascii "app_panic_nvm_write\000"
 1452      65 72 5F 62 
 1452      65 65 70 5F 
 1452      74 77 69 63 
 1452      65 00 
 1453                 	.LASF5:
 1454 0192 61 70 70 5F 		.ascii "signed char\000"
 1454      70 61 6E 69 
 1454      63 5F 61 64 
 1454      64 5F 77 68 
 1454      69 74 65 6C 
 1455                 	.LASF12:
 1456 019e 70 69 6F 5F 		.ascii "pio_mode_pwm0\000"
 1456      69 32 63 5F 
 1456      70 75 6C 6C 
 1456      5F 6D 6F 64 
 1456      65 5F 77 65 
 1457                 	.LASF13:
 1458 01ad 61 70 70 5F 		.ascii "pio_mode_pwm1\000"
 1458      70 61 6E 69 
 1458      63 5F 6E 76 
 1458      6D 5F 77 72 
 1458      69 74 65 00 
 1459                 	.LASF14:
 1460 01b7 73 69 67 6E 		.ascii "pio_mode_pwm2\000"
 1460      65 64 20 63 
 1460      68 61 72 00 
 1461                 	.LASF15:
 1462 01bd 70 69 6F 5F 		.ascii "pio_mode_pwm3\000"
 1462      6D 6F 64 65 
 1462      5F 70 77 6D 
 1462      30 00 
 1463                 	.LASF8:
 1464 01c4 70 69 6F 5F 		.ascii "unsigned int\000"
 1464      6D 6F 64 65 
 1464      5F 70 77 6D 
 1464      31 00 
 1465                 	.LASF62:
 1466 01cb 70 69 6F 5F 		.ascii "buzzer_beep_type\000"
 1466      6D 6F 64 65 
 1466      5F 70 77 6D 
 1466      32 00 
 1467                 	.LASF72:
 1468 01d2 70 69 6F 5F 		.ascii "app_panic_nvm_read\000"
 1468      6D 6F 64 65 
 1468      5F 70 77 6D 
 1468      33 00 
 1469                 	.LASF55:
 1470 01d9 75 6E 73 69 		.ascii "pio_pwm_mode_inverted_push_pull\000"
 1470      67 6E 65 64 
 1470      20 69 6E 74 
 1470      00 
 1471                 	.LASF1:
 1472 01e0 62 75 7A 7A 		.ascii "short unsigned int\000"
 1472      65 72 5F 62 
 1472      65 65 70 5F 
 1472      74 79 70 65 
 1472      00 
 1473                 	.LASF37:
 1474 01e8 61 70 70 5F 		.ascii "pio_mode_strong_pull_down\000"
 1474      70 61 6E 69 
 1474      63 5F 6E 76 
 1474      6D 5F 72 65 
 1474      61 64 00 
 1475                 	.LASF91:
 1476 01f2 70 69 6F 5F 		.ascii "g_app_hw_data\000"
 1476      70 77 6D 5F 
 1476      6D 6F 64 65 
 1476      5F 69 6E 76 
 1476      65 72 74 65 
 1477                 	.LASF89:
 1478 0202 73 68 6F 72 		.ascii "pios\000"
 1478      74 20 75 6E 
 1478      73 69 67 6E 
 1478      65 64 20 69 
 1478      6E 74 00 
 1479                 	.LASF69:
 1480 020b 70 69 6F 5F 		.ascii "app_panic_set_advert_data\000"
 1480      6D 6F 64 65 
 1480      5F 73 74 72 
 1480      6F 6E 67 5F 
 1480      70 75 6C 6C 
 1481                 	.LASF58:
 1482 0218 67 5F 61 70 		.ascii "buzzer_beep_short\000"
 1482      70 5F 68 77 
 1482      5F 64 61 74 
 1482      61 00 
 1483                 	.LASF7:
 1484 021f 70 69 6F 73 		.ascii "long int\000"
 1484      00 
 1485                 	.LASF56:
 1486 0222 61 70 70 5F 		.ascii "timer_id\000"
 1486      70 61 6E 69 
 1486      63 5F 73 65 
 1486      74 5F 61 64 
 1486      76 65 72 74 
 1487                 	.LASF36:
 1488 022f 62 75 7A 7A 		.ascii "pio_mode_weak_pull_up\000"
 1488      65 72 5F 62 
 1488      65 65 70 5F 
 1488      73 68 6F 72 
 1488      74 00 
 1489                 	.LASF50:
 1490 0238 6C 6F 6E 67 		.ascii "pio_event_mode_falling\000"
 1490      20 69 6E 74 
 1490      00 
 1491                 	.LASF85:
 1492 023c 74 69 6D 65 		.ascii "HrInitHardware\000"
 1492      72 5F 69 64 
 1492      00 
 1493                 	.LASF2:
 1494 0241 70 69 6F 5F 		.ascii "uint16\000"
 1494      6D 6F 64 65 
 1494      5F 77 65 61 
 1494      6B 5F 70 75 
 1494      6C 6C 5F 75 
 1495                 	.LASF22:
 1496 024c 70 69 6F 5F 		.ascii "pio_mode_radio_tx_en\000"
 1496      65 76 65 6E 
 1496      74 5F 6D 6F 
 1496      64 65 5F 66 
 1496      61 6C 6C 69 
 1497                 	.LASF3:
 1498 0257 48 72 49 6E 		.ascii "uint32\000"
 1498      69 74 48 61 
 1498      72 64 77 61 
 1498      72 65 00 
 1499                 	.LASF61:
 1500 025f 75 69 6E 74 		.ascii "buzzer_beep_thrice\000"
 1500      31 36 00 
 1501                 	.LASF4:
 1502 0262 70 69 6F 5F 		.ascii "long unsigned int\000"
 1502      6D 6F 64 65 
 1502      5F 72 61 64 
 1502      69 6F 5F 74 
 1502      78 5F 65 6E 
 1503                 	.LASF27:
 1504 026d 75 69 6E 74 		.ascii "pio_mode_ser_flash_dout\000"
 1504      33 32 00 
 1505                 	.LASF32:
 1506 0270 62 75 7A 7A 		.ascii "pio_mode_pio_control_timer\000"
 1506      65 72 5F 62 
 1506      65 65 70 5F 
 1506      74 68 72 69 
 1506      63 65 00 
 1507                 	.LASF70:
 1508 027a 6C 6F 6E 67 		.ascii "app_panic_set_scan_rsp_data\000"
 1508      20 75 6E 73 
 1508      69 67 6E 65 
 1508      64 20 69 6E 
 1508      74 00 
 1509                 	.LASF66:
 1510 0283 70 69 6F 5F 		.ascii "button_press_tid\000"
 1510      6D 6F 64 65 
 1510      5F 73 65 72 
 1510      5F 66 6C 61 
 1510      73 68 5F 64 
 1511                 	.LASF40:
 1512 028f 70 69 6F 5F 		.ascii "pio_mode_strong_sticky\000"
 1512      6D 6F 64 65 
 1512      5F 70 69 6F 
 1512      5F 63 6F 6E 
 1512      74 72 6F 6C 
 1513                 	.LASF44:
 1514 029c 61 70 70 5F 		.ascii "pio_i2c_pull_mode_strong_pull_down\000"
 1514      70 61 6E 69 
 1514      63 5F 73 65 
 1514      74 5F 73 63 
 1514      61 6E 5F 72 
 1515                 	.LASF63:
 1516 02aa 62 75 74 74 		.ascii "buzzer_tid\000"
 1516      6F 6E 5F 70 
 1516      72 65 73 73 
 1516      5F 74 69 64 
 1516      00 
 1517                 	.LASF53:
 1518 02b3 70 69 6F 5F 		.ascii "pio_pwm_mode_open_drain\000"
 1518      6D 6F 64 65 
 1518      5F 73 74 72 
 1518      6F 6E 67 5F 
 1518      73 74 69 63 
 1519                 	.LASF84:
 1520 02be 70 69 6F 5F 		.ascii "HrHwDataInit\000"
 1520      69 32 63 5F 
 1520      70 75 6C 6C 
 1520      5F 6D 6F 64 
 1520      65 5F 73 74 
 1521                 	.LASF28:
 1522 02d0 62 75 7A 7A 		.ascii "pio_mode_ser_flash_csb\000"
 1522      65 72 5F 74 
 1522      69 64 00 
 1523                 	.LASF24:
 1524 02d5 70 69 6F 5F 		.ascii "pio_mode_pio_controller\000"
 1524      70 77 6D 5F 
 1524      6D 6F 64 65 
 1524      5F 6F 70 65 
 1524      6E 5F 64 72 
 1525                 	.LASF57:
 1526 02e1 48 72 48 77 		.ascii "buzzer_beep_off\000"
 1526      44 61 74 61 
 1526      49 6E 69 74 
 1526      00 
 1527                 	.LASF52:
 1528 02e8 70 69 6F 5F 		.ascii "pio_pwm_mode_push_pull\000"
 1528      6D 6F 64 65 
 1528      5F 73 65 72 
 1528      5F 66 6C 61 
 1528      73 68 5F 63 
 1529                 	.LASF10:
 1530 02f3 70 69 6F 5F 		.ascii "pio_mode_edge_capture\000"
 1530      6D 6F 64 65 
 1530      5F 70 69 6F 
 1530      5F 63 6F 6E 
 1530      74 72 6F 6C 
 1531                 	.LASF42:
 1532 02ff 62 75 7A 7A 		.ascii "pio_i2c_pull_mode_weak_pull_down\000"
 1532      65 72 5F 62 
 1532      65 65 70 5F 
 1532      6F 66 66 00 
 1533                 	.LASF38:
 1534 0307 70 69 6F 5F 		.ascii "pio_mode_strong_pull_up\000"
 1534      70 77 6D 5F 
 1534      6D 6F 64 65 
 1534      5F 70 75 73 
 1534      68 5F 70 75 
 1535                 	.LASF74:
 1536 0313 70 69 6F 5F 		.ascii "app_panic_read_tx_pwr_level\000"
 1536      6D 6F 64 65 
 1536      5F 65 64 67 
 1536      65 5F 63 61 
 1536      70 74 75 72 
 1537                 	.LASF35:
 1538 031e 70 69 6F 5F 		.ascii "pio_mode_weak_pull_down\000"
 1538      69 32 63 5F 
 1538      70 75 6C 6C 
 1538      5F 6D 6F 64 
 1538      65 5F 77 65 
 1539                 	.LASF46:
 1540 032e 70 69 6F 5F 		.ascii "pio_i2c_pull_mode_weak_sticky\000"
 1540      6D 6F 64 65 
 1540      5F 73 74 72 
 1540      6F 6E 67 5F 
 1540      70 75 6C 6C 
 1541                 	.LASF79:
 1542 033a 61 70 70 5F 		.ascii "app_panic_unexpected_beep_type\000"
 1542      70 61 6E 69 
 1542      63 5F 72 65 
 1542      61 64 5F 74 
 1542      78 5F 70 77 
 1543                 	.LASF25:
 1544 0348 70 69 6F 5F 		.ascii "pio_mode_pio_control_txd\000"
 1544      6D 6F 64 65 
 1544      5F 77 65 61 
 1544      6B 5F 70 75 
 1544      6C 6C 5F 64 
 1545                 	.LASF67:
 1546 0354 70 69 6F 5F 		.ascii "APP_HW_DATA_T\000"
 1546      69 32 63 5F 
 1546      70 75 6C 6C 
 1546      5F 6D 6F 64 
 1546      65 5F 77 65 
 1547                 	.LASF51:
 1548 0363 61 70 70 5F 		.ascii "pio_event_mode_both\000"
 1548      70 61 6E 69 
 1548      63 5F 75 6E 
 1548      65 78 70 65 
 1548      63 74 65 64 
 1549                 	.LASF20:
 1550 0373 70 69 6F 5F 		.ascii "pio_mode_uart\000"
 1550      6D 6F 64 65 
 1550      5F 70 69 6F 
 1550      5F 63 6F 6E 
 1550      74 72 6F 6C 
 1551                 	.LASF86:
 1552 037f 41 50 50 5F 		.ascii "GNU C 4.3.4 CSR version 21 for xap [1468380]\000"
 1552      48 57 5F 44 
 1552      41 54 41 5F 
 1552      54 00 
 1553                 	.LASF75:
 1554 0386 70 69 6F 5F 		.ascii "app_panic_delete_whitelist\000"
 1554      65 76 65 6E 
 1554      74 5F 6D 6F 
 1554      64 65 5F 62 
 1554      6F 74 68 00 
 1555                 		.ident	"GCC: (GNU) 4.3.4 CSR version 21 for xap [1468380]"
 1556 0390 70 69 6F 5F 	...
 1556      6D 6F 64 65 
 1556      5F 75 61 72 
 1556      74 00 
